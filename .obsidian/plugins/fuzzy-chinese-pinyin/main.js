/** GENERATED BY OBSIDIAN-PLUGIN-CLI, DO NOT EDIT */
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[Object.keys(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  __markAsModule(target);
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toModule = (module2) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/lodash.js
var require_lodash = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/lodash.js"(exports, module2) {
    (function() {
      var undefined2;
      var VERSION = "4.17.21";
      var LARGE_ARRAY_SIZE = 200;
      var CORE_ERROR_TEXT = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.", FUNC_ERROR_TEXT = "Expected a function", INVALID_TEMPL_VAR_ERROR_TEXT = "Invalid `variable` option passed into `_.template`";
      var HASH_UNDEFINED = "__lodash_hash_undefined__";
      var MAX_MEMOIZE_SIZE = 500;
      var PLACEHOLDER = "__lodash_placeholder__";
      var CLONE_DEEP_FLAG = 1, CLONE_FLAT_FLAG = 2, CLONE_SYMBOLS_FLAG = 4;
      var COMPARE_PARTIAL_FLAG = 1, COMPARE_UNORDERED_FLAG = 2;
      var WRAP_BIND_FLAG = 1, WRAP_BIND_KEY_FLAG = 2, WRAP_CURRY_BOUND_FLAG = 4, WRAP_CURRY_FLAG = 8, WRAP_CURRY_RIGHT_FLAG = 16, WRAP_PARTIAL_FLAG = 32, WRAP_PARTIAL_RIGHT_FLAG = 64, WRAP_ARY_FLAG = 128, WRAP_REARG_FLAG = 256, WRAP_FLIP_FLAG = 512;
      var DEFAULT_TRUNC_LENGTH = 30, DEFAULT_TRUNC_OMISSION = "...";
      var HOT_COUNT = 800, HOT_SPAN = 16;
      var LAZY_FILTER_FLAG = 1, LAZY_MAP_FLAG = 2, LAZY_WHILE_FLAG = 3;
      var INFINITY = 1 / 0, MAX_SAFE_INTEGER = 9007199254740991, MAX_INTEGER = 17976931348623157e292, NAN = 0 / 0;
      var MAX_ARRAY_LENGTH = 4294967295, MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1, HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;
      var wrapFlags = [
        ["ary", WRAP_ARY_FLAG],
        ["bind", WRAP_BIND_FLAG],
        ["bindKey", WRAP_BIND_KEY_FLAG],
        ["curry", WRAP_CURRY_FLAG],
        ["curryRight", WRAP_CURRY_RIGHT_FLAG],
        ["flip", WRAP_FLIP_FLAG],
        ["partial", WRAP_PARTIAL_FLAG],
        ["partialRight", WRAP_PARTIAL_RIGHT_FLAG],
        ["rearg", WRAP_REARG_FLAG]
      ];
      var argsTag = "[object Arguments]", arrayTag = "[object Array]", asyncTag = "[object AsyncFunction]", boolTag = "[object Boolean]", dateTag = "[object Date]", domExcTag = "[object DOMException]", errorTag = "[object Error]", funcTag = "[object Function]", genTag = "[object GeneratorFunction]", mapTag = "[object Map]", numberTag = "[object Number]", nullTag = "[object Null]", objectTag = "[object Object]", promiseTag = "[object Promise]", proxyTag = "[object Proxy]", regexpTag = "[object RegExp]", setTag = "[object Set]", stringTag = "[object String]", symbolTag = "[object Symbol]", undefinedTag = "[object Undefined]", weakMapTag = "[object WeakMap]", weakSetTag = "[object WeakSet]";
      var arrayBufferTag = "[object ArrayBuffer]", dataViewTag = "[object DataView]", float32Tag = "[object Float32Array]", float64Tag = "[object Float64Array]", int8Tag = "[object Int8Array]", int16Tag = "[object Int16Array]", int32Tag = "[object Int32Array]", uint8Tag = "[object Uint8Array]", uint8ClampedTag = "[object Uint8ClampedArray]", uint16Tag = "[object Uint16Array]", uint32Tag = "[object Uint32Array]";
      var reEmptyStringLeading = /\b__p \+= '';/g, reEmptyStringMiddle = /\b(__p \+=) '' \+/g, reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;
      var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g, reUnescapedHtml = /[&<>"']/g, reHasEscapedHtml = RegExp(reEscapedHtml.source), reHasUnescapedHtml = RegExp(reUnescapedHtml.source);
      var reEscape = /<%-([\s\S]+?)%>/g, reEvaluate = /<%([\s\S]+?)%>/g, reInterpolate = /<%=([\s\S]+?)%>/g;
      var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, reIsPlainProp = /^\w*$/, rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
      var reRegExpChar = /[\\^$.*+?()[\]{}|]/g, reHasRegExpChar = RegExp(reRegExpChar.source);
      var reTrimStart = /^\s+/;
      var reWhitespace = /\s/;
      var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/, reSplitDetails = /,? & /;
      var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
      var reForbiddenIdentifierChars = /[()=,{}\[\]\/\s]/;
      var reEscapeChar = /\\(\\)?/g;
      var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;
      var reFlags = /\w*$/;
      var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
      var reIsBinary = /^0b[01]+$/i;
      var reIsHostCtor = /^\[object .+?Constructor\]$/;
      var reIsOctal = /^0o[0-7]+$/i;
      var reIsUint = /^(?:0|[1-9]\d*)$/;
      var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
      var reNoMatch = /($^)/;
      var reUnescapedString = /['\n\r\u2028\u2029\\]/g;
      var rsAstralRange = "\\ud800-\\udfff", rsComboMarksRange = "\\u0300-\\u036f", reComboHalfMarksRange = "\\ufe20-\\ufe2f", rsComboSymbolsRange = "\\u20d0-\\u20ff", rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange, rsDingbatRange = "\\u2700-\\u27bf", rsLowerRange = "a-z\\xdf-\\xf6\\xf8-\\xff", rsMathOpRange = "\\xac\\xb1\\xd7\\xf7", rsNonCharRange = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf", rsPunctuationRange = "\\u2000-\\u206f", rsSpaceRange = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", rsUpperRange = "A-Z\\xc0-\\xd6\\xd8-\\xde", rsVarRange = "\\ufe0e\\ufe0f", rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;
      var rsApos = "['\u2019]", rsAstral = "[" + rsAstralRange + "]", rsBreak = "[" + rsBreakRange + "]", rsCombo = "[" + rsComboRange + "]", rsDigits = "\\d+", rsDingbat = "[" + rsDingbatRange + "]", rsLower = "[" + rsLowerRange + "]", rsMisc = "[^" + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + "]", rsFitz = "\\ud83c[\\udffb-\\udfff]", rsModifier = "(?:" + rsCombo + "|" + rsFitz + ")", rsNonAstral = "[^" + rsAstralRange + "]", rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}", rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]", rsUpper = "[" + rsUpperRange + "]", rsZWJ = "\\u200d";
      var rsMiscLower = "(?:" + rsLower + "|" + rsMisc + ")", rsMiscUpper = "(?:" + rsUpper + "|" + rsMisc + ")", rsOptContrLower = "(?:" + rsApos + "(?:d|ll|m|re|s|t|ve))?", rsOptContrUpper = "(?:" + rsApos + "(?:D|LL|M|RE|S|T|VE))?", reOptMod = rsModifier + "?", rsOptVar = "[" + rsVarRange + "]?", rsOptJoin = "(?:" + rsZWJ + "(?:" + [rsNonAstral, rsRegional, rsSurrPair].join("|") + ")" + rsOptVar + reOptMod + ")*", rsOrdLower = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", rsOrdUpper = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", rsSeq = rsOptVar + reOptMod + rsOptJoin, rsEmoji = "(?:" + [rsDingbat, rsRegional, rsSurrPair].join("|") + ")" + rsSeq, rsSymbol = "(?:" + [rsNonAstral + rsCombo + "?", rsCombo, rsRegional, rsSurrPair, rsAstral].join("|") + ")";
      var reApos = RegExp(rsApos, "g");
      var reComboMark = RegExp(rsCombo, "g");
      var reUnicode = RegExp(rsFitz + "(?=" + rsFitz + ")|" + rsSymbol + rsSeq, "g");
      var reUnicodeWord = RegExp([
        rsUpper + "?" + rsLower + "+" + rsOptContrLower + "(?=" + [rsBreak, rsUpper, "$"].join("|") + ")",
        rsMiscUpper + "+" + rsOptContrUpper + "(?=" + [rsBreak, rsUpper + rsMiscLower, "$"].join("|") + ")",
        rsUpper + "?" + rsMiscLower + "+" + rsOptContrLower,
        rsUpper + "+" + rsOptContrUpper,
        rsOrdUpper,
        rsOrdLower,
        rsDigits,
        rsEmoji
      ].join("|"), "g");
      var reHasUnicode = RegExp("[" + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + "]");
      var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
      var contextProps = [
        "Array",
        "Buffer",
        "DataView",
        "Date",
        "Error",
        "Float32Array",
        "Float64Array",
        "Function",
        "Int8Array",
        "Int16Array",
        "Int32Array",
        "Map",
        "Math",
        "Object",
        "Promise",
        "RegExp",
        "Set",
        "String",
        "Symbol",
        "TypeError",
        "Uint8Array",
        "Uint8ClampedArray",
        "Uint16Array",
        "Uint32Array",
        "WeakMap",
        "_",
        "clearTimeout",
        "isFinite",
        "parseInt",
        "setTimeout"
      ];
      var templateCounter = -1;
      var typedArrayTags = {};
      typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
      typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
      var cloneableTags = {};
      cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
      cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
      var deburredLetters = {
        "\xC0": "A",
        "\xC1": "A",
        "\xC2": "A",
        "\xC3": "A",
        "\xC4": "A",
        "\xC5": "A",
        "\xE0": "a",
        "\xE1": "a",
        "\xE2": "a",
        "\xE3": "a",
        "\xE4": "a",
        "\xE5": "a",
        "\xC7": "C",
        "\xE7": "c",
        "\xD0": "D",
        "\xF0": "d",
        "\xC8": "E",
        "\xC9": "E",
        "\xCA": "E",
        "\xCB": "E",
        "\xE8": "e",
        "\xE9": "e",
        "\xEA": "e",
        "\xEB": "e",
        "\xCC": "I",
        "\xCD": "I",
        "\xCE": "I",
        "\xCF": "I",
        "\xEC": "i",
        "\xED": "i",
        "\xEE": "i",
        "\xEF": "i",
        "\xD1": "N",
        "\xF1": "n",
        "\xD2": "O",
        "\xD3": "O",
        "\xD4": "O",
        "\xD5": "O",
        "\xD6": "O",
        "\xD8": "O",
        "\xF2": "o",
        "\xF3": "o",
        "\xF4": "o",
        "\xF5": "o",
        "\xF6": "o",
        "\xF8": "o",
        "\xD9": "U",
        "\xDA": "U",
        "\xDB": "U",
        "\xDC": "U",
        "\xF9": "u",
        "\xFA": "u",
        "\xFB": "u",
        "\xFC": "u",
        "\xDD": "Y",
        "\xFD": "y",
        "\xFF": "y",
        "\xC6": "Ae",
        "\xE6": "ae",
        "\xDE": "Th",
        "\xFE": "th",
        "\xDF": "ss",
        "\u0100": "A",
        "\u0102": "A",
        "\u0104": "A",
        "\u0101": "a",
        "\u0103": "a",
        "\u0105": "a",
        "\u0106": "C",
        "\u0108": "C",
        "\u010A": "C",
        "\u010C": "C",
        "\u0107": "c",
        "\u0109": "c",
        "\u010B": "c",
        "\u010D": "c",
        "\u010E": "D",
        "\u0110": "D",
        "\u010F": "d",
        "\u0111": "d",
        "\u0112": "E",
        "\u0114": "E",
        "\u0116": "E",
        "\u0118": "E",
        "\u011A": "E",
        "\u0113": "e",
        "\u0115": "e",
        "\u0117": "e",
        "\u0119": "e",
        "\u011B": "e",
        "\u011C": "G",
        "\u011E": "G",
        "\u0120": "G",
        "\u0122": "G",
        "\u011D": "g",
        "\u011F": "g",
        "\u0121": "g",
        "\u0123": "g",
        "\u0124": "H",
        "\u0126": "H",
        "\u0125": "h",
        "\u0127": "h",
        "\u0128": "I",
        "\u012A": "I",
        "\u012C": "I",
        "\u012E": "I",
        "\u0130": "I",
        "\u0129": "i",
        "\u012B": "i",
        "\u012D": "i",
        "\u012F": "i",
        "\u0131": "i",
        "\u0134": "J",
        "\u0135": "j",
        "\u0136": "K",
        "\u0137": "k",
        "\u0138": "k",
        "\u0139": "L",
        "\u013B": "L",
        "\u013D": "L",
        "\u013F": "L",
        "\u0141": "L",
        "\u013A": "l",
        "\u013C": "l",
        "\u013E": "l",
        "\u0140": "l",
        "\u0142": "l",
        "\u0143": "N",
        "\u0145": "N",
        "\u0147": "N",
        "\u014A": "N",
        "\u0144": "n",
        "\u0146": "n",
        "\u0148": "n",
        "\u014B": "n",
        "\u014C": "O",
        "\u014E": "O",
        "\u0150": "O",
        "\u014D": "o",
        "\u014F": "o",
        "\u0151": "o",
        "\u0154": "R",
        "\u0156": "R",
        "\u0158": "R",
        "\u0155": "r",
        "\u0157": "r",
        "\u0159": "r",
        "\u015A": "S",
        "\u015C": "S",
        "\u015E": "S",
        "\u0160": "S",
        "\u015B": "s",
        "\u015D": "s",
        "\u015F": "s",
        "\u0161": "s",
        "\u0162": "T",
        "\u0164": "T",
        "\u0166": "T",
        "\u0163": "t",
        "\u0165": "t",
        "\u0167": "t",
        "\u0168": "U",
        "\u016A": "U",
        "\u016C": "U",
        "\u016E": "U",
        "\u0170": "U",
        "\u0172": "U",
        "\u0169": "u",
        "\u016B": "u",
        "\u016D": "u",
        "\u016F": "u",
        "\u0171": "u",
        "\u0173": "u",
        "\u0174": "W",
        "\u0175": "w",
        "\u0176": "Y",
        "\u0177": "y",
        "\u0178": "Y",
        "\u0179": "Z",
        "\u017B": "Z",
        "\u017D": "Z",
        "\u017A": "z",
        "\u017C": "z",
        "\u017E": "z",
        "\u0132": "IJ",
        "\u0133": "ij",
        "\u0152": "Oe",
        "\u0153": "oe",
        "\u0149": "'n",
        "\u017F": "s"
      };
      var htmlEscapes = {
        "&": "&amp;",
        "<": "&lt;",
        ">": "&gt;",
        '"': "&quot;",
        "'": "&#39;"
      };
      var htmlUnescapes = {
        "&amp;": "&",
        "&lt;": "<",
        "&gt;": ">",
        "&quot;": '"',
        "&#39;": "'"
      };
      var stringEscapes = {
        "\\": "\\",
        "'": "'",
        "\n": "n",
        "\r": "r",
        "\u2028": "u2028",
        "\u2029": "u2029"
      };
      var freeParseFloat = parseFloat, freeParseInt = parseInt;
      var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
      var freeSelf = typeof self == "object" && self && self.Object === Object && self;
      var root = freeGlobal || freeSelf || Function("return this")();
      var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
      var freeModule = freeExports && typeof module2 == "object" && module2 && !module2.nodeType && module2;
      var moduleExports = freeModule && freeModule.exports === freeExports;
      var freeProcess = moduleExports && freeGlobal.process;
      var nodeUtil = function() {
        try {
          var types = freeModule && freeModule.require && freeModule.require("util").types;
          if (types) {
            return types;
          }
          return freeProcess && freeProcess.binding && freeProcess.binding("util");
        } catch (e) {
        }
      }();
      var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer, nodeIsDate = nodeUtil && nodeUtil.isDate, nodeIsMap = nodeUtil && nodeUtil.isMap, nodeIsRegExp = nodeUtil && nodeUtil.isRegExp, nodeIsSet = nodeUtil && nodeUtil.isSet, nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
      function apply(func, thisArg, args) {
        switch (args.length) {
          case 0:
            return func.call(thisArg);
          case 1:
            return func.call(thisArg, args[0]);
          case 2:
            return func.call(thisArg, args[0], args[1]);
          case 3:
            return func.call(thisArg, args[0], args[1], args[2]);
        }
        return func.apply(thisArg, args);
      }
      function arrayAggregator(array, setter, iteratee, accumulator) {
        var index = -1, length = array == null ? 0 : array.length;
        while (++index < length) {
          var value = array[index];
          setter(accumulator, value, iteratee(value), array);
        }
        return accumulator;
      }
      function arrayEach(array, iteratee) {
        var index = -1, length = array == null ? 0 : array.length;
        while (++index < length) {
          if (iteratee(array[index], index, array) === false) {
            break;
          }
        }
        return array;
      }
      function arrayEachRight(array, iteratee) {
        var length = array == null ? 0 : array.length;
        while (length--) {
          if (iteratee(array[length], length, array) === false) {
            break;
          }
        }
        return array;
      }
      function arrayEvery(array, predicate) {
        var index = -1, length = array == null ? 0 : array.length;
        while (++index < length) {
          if (!predicate(array[index], index, array)) {
            return false;
          }
        }
        return true;
      }
      function arrayFilter(array, predicate) {
        var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
        while (++index < length) {
          var value = array[index];
          if (predicate(value, index, array)) {
            result[resIndex++] = value;
          }
        }
        return result;
      }
      function arrayIncludes(array, value) {
        var length = array == null ? 0 : array.length;
        return !!length && baseIndexOf(array, value, 0) > -1;
      }
      function arrayIncludesWith(array, value, comparator) {
        var index = -1, length = array == null ? 0 : array.length;
        while (++index < length) {
          if (comparator(value, array[index])) {
            return true;
          }
        }
        return false;
      }
      function arrayMap(array, iteratee) {
        var index = -1, length = array == null ? 0 : array.length, result = Array(length);
        while (++index < length) {
          result[index] = iteratee(array[index], index, array);
        }
        return result;
      }
      function arrayPush(array, values) {
        var index = -1, length = values.length, offset2 = array.length;
        while (++index < length) {
          array[offset2 + index] = values[index];
        }
        return array;
      }
      function arrayReduce(array, iteratee, accumulator, initAccum) {
        var index = -1, length = array == null ? 0 : array.length;
        if (initAccum && length) {
          accumulator = array[++index];
        }
        while (++index < length) {
          accumulator = iteratee(accumulator, array[index], index, array);
        }
        return accumulator;
      }
      function arrayReduceRight(array, iteratee, accumulator, initAccum) {
        var length = array == null ? 0 : array.length;
        if (initAccum && length) {
          accumulator = array[--length];
        }
        while (length--) {
          accumulator = iteratee(accumulator, array[length], length, array);
        }
        return accumulator;
      }
      function arraySome(array, predicate) {
        var index = -1, length = array == null ? 0 : array.length;
        while (++index < length) {
          if (predicate(array[index], index, array)) {
            return true;
          }
        }
        return false;
      }
      var asciiSize = baseProperty("length");
      function asciiToArray(string) {
        return string.split("");
      }
      function asciiWords(string) {
        return string.match(reAsciiWord) || [];
      }
      function baseFindKey(collection, predicate, eachFunc) {
        var result;
        eachFunc(collection, function(value, key, collection2) {
          if (predicate(value, key, collection2)) {
            result = key;
            return false;
          }
        });
        return result;
      }
      function baseFindIndex(array, predicate, fromIndex, fromRight) {
        var length = array.length, index = fromIndex + (fromRight ? 1 : -1);
        while (fromRight ? index-- : ++index < length) {
          if (predicate(array[index], index, array)) {
            return index;
          }
        }
        return -1;
      }
      function baseIndexOf(array, value, fromIndex) {
        return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);
      }
      function baseIndexOfWith(array, value, fromIndex, comparator) {
        var index = fromIndex - 1, length = array.length;
        while (++index < length) {
          if (comparator(array[index], value)) {
            return index;
          }
        }
        return -1;
      }
      function baseIsNaN(value) {
        return value !== value;
      }
      function baseMean(array, iteratee) {
        var length = array == null ? 0 : array.length;
        return length ? baseSum(array, iteratee) / length : NAN;
      }
      function baseProperty(key) {
        return function(object) {
          return object == null ? undefined2 : object[key];
        };
      }
      function basePropertyOf(object) {
        return function(key) {
          return object == null ? undefined2 : object[key];
        };
      }
      function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
        eachFunc(collection, function(value, index, collection2) {
          accumulator = initAccum ? (initAccum = false, value) : iteratee(accumulator, value, index, collection2);
        });
        return accumulator;
      }
      function baseSortBy(array, comparer) {
        var length = array.length;
        array.sort(comparer);
        while (length--) {
          array[length] = array[length].value;
        }
        return array;
      }
      function baseSum(array, iteratee) {
        var result, index = -1, length = array.length;
        while (++index < length) {
          var current = iteratee(array[index]);
          if (current !== undefined2) {
            result = result === undefined2 ? current : result + current;
          }
        }
        return result;
      }
      function baseTimes(n, iteratee) {
        var index = -1, result = Array(n);
        while (++index < n) {
          result[index] = iteratee(index);
        }
        return result;
      }
      function baseToPairs(object, props) {
        return arrayMap(props, function(key) {
          return [key, object[key]];
        });
      }
      function baseTrim(string) {
        return string ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, "") : string;
      }
      function baseUnary(func) {
        return function(value) {
          return func(value);
        };
      }
      function baseValues(object, props) {
        return arrayMap(props, function(key) {
          return object[key];
        });
      }
      function cacheHas(cache, key) {
        return cache.has(key);
      }
      function charsStartIndex(strSymbols, chrSymbols) {
        var index = -1, length = strSymbols.length;
        while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {
        }
        return index;
      }
      function charsEndIndex(strSymbols, chrSymbols) {
        var index = strSymbols.length;
        while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {
        }
        return index;
      }
      function countHolders(array, placeholder) {
        var length = array.length, result = 0;
        while (length--) {
          if (array[length] === placeholder) {
            ++result;
          }
        }
        return result;
      }
      var deburrLetter = basePropertyOf(deburredLetters);
      var escapeHtmlChar = basePropertyOf(htmlEscapes);
      function escapeStringChar(chr) {
        return "\\" + stringEscapes[chr];
      }
      function getValue(object, key) {
        return object == null ? undefined2 : object[key];
      }
      function hasUnicode(string) {
        return reHasUnicode.test(string);
      }
      function hasUnicodeWord(string) {
        return reHasUnicodeWord.test(string);
      }
      function iteratorToArray(iterator) {
        var data, result = [];
        while (!(data = iterator.next()).done) {
          result.push(data.value);
        }
        return result;
      }
      function mapToArray(map) {
        var index = -1, result = Array(map.size);
        map.forEach(function(value, key) {
          result[++index] = [key, value];
        });
        return result;
      }
      function overArg(func, transform) {
        return function(arg) {
          return func(transform(arg));
        };
      }
      function replaceHolders(array, placeholder) {
        var index = -1, length = array.length, resIndex = 0, result = [];
        while (++index < length) {
          var value = array[index];
          if (value === placeholder || value === PLACEHOLDER) {
            array[index] = PLACEHOLDER;
            result[resIndex++] = index;
          }
        }
        return result;
      }
      function setToArray(set) {
        var index = -1, result = Array(set.size);
        set.forEach(function(value) {
          result[++index] = value;
        });
        return result;
      }
      function setToPairs(set) {
        var index = -1, result = Array(set.size);
        set.forEach(function(value) {
          result[++index] = [value, value];
        });
        return result;
      }
      function strictIndexOf(array, value, fromIndex) {
        var index = fromIndex - 1, length = array.length;
        while (++index < length) {
          if (array[index] === value) {
            return index;
          }
        }
        return -1;
      }
      function strictLastIndexOf(array, value, fromIndex) {
        var index = fromIndex + 1;
        while (index--) {
          if (array[index] === value) {
            return index;
          }
        }
        return index;
      }
      function stringSize(string) {
        return hasUnicode(string) ? unicodeSize(string) : asciiSize(string);
      }
      function stringToArray(string) {
        return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);
      }
      function trimmedEndIndex(string) {
        var index = string.length;
        while (index-- && reWhitespace.test(string.charAt(index))) {
        }
        return index;
      }
      var unescapeHtmlChar = basePropertyOf(htmlUnescapes);
      function unicodeSize(string) {
        var result = reUnicode.lastIndex = 0;
        while (reUnicode.test(string)) {
          ++result;
        }
        return result;
      }
      function unicodeToArray(string) {
        return string.match(reUnicode) || [];
      }
      function unicodeWords(string) {
        return string.match(reUnicodeWord) || [];
      }
      var runInContext = function runInContext2(context) {
        context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));
        var Array2 = context.Array, Date2 = context.Date, Error2 = context.Error, Function2 = context.Function, Math2 = context.Math, Object2 = context.Object, RegExp2 = context.RegExp, String2 = context.String, TypeError2 = context.TypeError;
        var arrayProto = Array2.prototype, funcProto = Function2.prototype, objectProto = Object2.prototype;
        var coreJsData = context["__core-js_shared__"];
        var funcToString = funcProto.toString;
        var hasOwnProperty = objectProto.hasOwnProperty;
        var idCounter = 0;
        var maskSrcKey = function() {
          var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
          return uid ? "Symbol(src)_1." + uid : "";
        }();
        var nativeObjectToString = objectProto.toString;
        var objectCtorString = funcToString.call(Object2);
        var oldDash = root._;
        var reIsNative = RegExp2("^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
        var Buffer2 = moduleExports ? context.Buffer : undefined2, Symbol = context.Symbol, Uint8Array2 = context.Uint8Array, allocUnsafe = Buffer2 ? Buffer2.allocUnsafe : undefined2, getPrototype = overArg(Object2.getPrototypeOf, Object2), objectCreate = Object2.create, propertyIsEnumerable = objectProto.propertyIsEnumerable, splice = arrayProto.splice, spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined2, symIterator = Symbol ? Symbol.iterator : undefined2, symToStringTag = Symbol ? Symbol.toStringTag : undefined2;
        var defineProperty = function() {
          try {
            var func = getNative(Object2, "defineProperty");
            func({}, "", {});
            return func;
          } catch (e) {
          }
        }();
        var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout, ctxNow = Date2 && Date2.now !== root.Date.now && Date2.now, ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;
        var nativeCeil = Math2.ceil, nativeFloor = Math2.floor, nativeGetSymbols = Object2.getOwnPropertySymbols, nativeIsBuffer = Buffer2 ? Buffer2.isBuffer : undefined2, nativeIsFinite = context.isFinite, nativeJoin = arrayProto.join, nativeKeys = overArg(Object2.keys, Object2), nativeMax = Math2.max, nativeMin = Math2.min, nativeNow = Date2.now, nativeParseInt = context.parseInt, nativeRandom = Math2.random, nativeReverse = arrayProto.reverse;
        var DataView = getNative(context, "DataView"), Map2 = getNative(context, "Map"), Promise2 = getNative(context, "Promise"), Set2 = getNative(context, "Set"), WeakMap = getNative(context, "WeakMap"), nativeCreate = getNative(Object2, "create");
        var metaMap = WeakMap && new WeakMap();
        var realNames = {};
        var dataViewCtorString = toSource(DataView), mapCtorString = toSource(Map2), promiseCtorString = toSource(Promise2), setCtorString = toSource(Set2), weakMapCtorString = toSource(WeakMap);
        var symbolProto = Symbol ? Symbol.prototype : undefined2, symbolValueOf = symbolProto ? symbolProto.valueOf : undefined2, symbolToString = symbolProto ? symbolProto.toString : undefined2;
        function lodash(value) {
          if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
            if (value instanceof LodashWrapper) {
              return value;
            }
            if (hasOwnProperty.call(value, "__wrapped__")) {
              return wrapperClone(value);
            }
          }
          return new LodashWrapper(value);
        }
        var baseCreate = function() {
          function object() {
          }
          return function(proto) {
            if (!isObject(proto)) {
              return {};
            }
            if (objectCreate) {
              return objectCreate(proto);
            }
            object.prototype = proto;
            var result2 = new object();
            object.prototype = undefined2;
            return result2;
          };
        }();
        function baseLodash() {
        }
        function LodashWrapper(value, chainAll) {
          this.__wrapped__ = value;
          this.__actions__ = [];
          this.__chain__ = !!chainAll;
          this.__index__ = 0;
          this.__values__ = undefined2;
        }
        lodash.templateSettings = {
          "escape": reEscape,
          "evaluate": reEvaluate,
          "interpolate": reInterpolate,
          "variable": "",
          "imports": {
            "_": lodash
          }
        };
        lodash.prototype = baseLodash.prototype;
        lodash.prototype.constructor = lodash;
        LodashWrapper.prototype = baseCreate(baseLodash.prototype);
        LodashWrapper.prototype.constructor = LodashWrapper;
        function LazyWrapper(value) {
          this.__wrapped__ = value;
          this.__actions__ = [];
          this.__dir__ = 1;
          this.__filtered__ = false;
          this.__iteratees__ = [];
          this.__takeCount__ = MAX_ARRAY_LENGTH;
          this.__views__ = [];
        }
        function lazyClone() {
          var result2 = new LazyWrapper(this.__wrapped__);
          result2.__actions__ = copyArray(this.__actions__);
          result2.__dir__ = this.__dir__;
          result2.__filtered__ = this.__filtered__;
          result2.__iteratees__ = copyArray(this.__iteratees__);
          result2.__takeCount__ = this.__takeCount__;
          result2.__views__ = copyArray(this.__views__);
          return result2;
        }
        function lazyReverse() {
          if (this.__filtered__) {
            var result2 = new LazyWrapper(this);
            result2.__dir__ = -1;
            result2.__filtered__ = true;
          } else {
            result2 = this.clone();
            result2.__dir__ *= -1;
          }
          return result2;
        }
        function lazyValue() {
          var array = this.__wrapped__.value(), dir = this.__dir__, isArr = isArray(array), isRight = dir < 0, arrLength = isArr ? array.length : 0, view = getView(0, arrLength, this.__views__), start2 = view.start, end2 = view.end, length = end2 - start2, index = isRight ? end2 : start2 - 1, iteratees = this.__iteratees__, iterLength = iteratees.length, resIndex = 0, takeCount = nativeMin(length, this.__takeCount__);
          if (!isArr || !isRight && arrLength == length && takeCount == length) {
            return baseWrapperValue(array, this.__actions__);
          }
          var result2 = [];
          outer:
            while (length-- && resIndex < takeCount) {
              index += dir;
              var iterIndex = -1, value = array[index];
              while (++iterIndex < iterLength) {
                var data = iteratees[iterIndex], iteratee2 = data.iteratee, type = data.type, computed = iteratee2(value);
                if (type == LAZY_MAP_FLAG) {
                  value = computed;
                } else if (!computed) {
                  if (type == LAZY_FILTER_FLAG) {
                    continue outer;
                  } else {
                    break outer;
                  }
                }
              }
              result2[resIndex++] = value;
            }
          return result2;
        }
        LazyWrapper.prototype = baseCreate(baseLodash.prototype);
        LazyWrapper.prototype.constructor = LazyWrapper;
        function Hash(entries) {
          var index = -1, length = entries == null ? 0 : entries.length;
          this.clear();
          while (++index < length) {
            var entry = entries[index];
            this.set(entry[0], entry[1]);
          }
        }
        function hashClear() {
          this.__data__ = nativeCreate ? nativeCreate(null) : {};
          this.size = 0;
        }
        function hashDelete(key) {
          var result2 = this.has(key) && delete this.__data__[key];
          this.size -= result2 ? 1 : 0;
          return result2;
        }
        function hashGet(key) {
          var data = this.__data__;
          if (nativeCreate) {
            var result2 = data[key];
            return result2 === HASH_UNDEFINED ? undefined2 : result2;
          }
          return hasOwnProperty.call(data, key) ? data[key] : undefined2;
        }
        function hashHas(key) {
          var data = this.__data__;
          return nativeCreate ? data[key] !== undefined2 : hasOwnProperty.call(data, key);
        }
        function hashSet(key, value) {
          var data = this.__data__;
          this.size += this.has(key) ? 0 : 1;
          data[key] = nativeCreate && value === undefined2 ? HASH_UNDEFINED : value;
          return this;
        }
        Hash.prototype.clear = hashClear;
        Hash.prototype["delete"] = hashDelete;
        Hash.prototype.get = hashGet;
        Hash.prototype.has = hashHas;
        Hash.prototype.set = hashSet;
        function ListCache(entries) {
          var index = -1, length = entries == null ? 0 : entries.length;
          this.clear();
          while (++index < length) {
            var entry = entries[index];
            this.set(entry[0], entry[1]);
          }
        }
        function listCacheClear() {
          this.__data__ = [];
          this.size = 0;
        }
        function listCacheDelete(key) {
          var data = this.__data__, index = assocIndexOf(data, key);
          if (index < 0) {
            return false;
          }
          var lastIndex = data.length - 1;
          if (index == lastIndex) {
            data.pop();
          } else {
            splice.call(data, index, 1);
          }
          --this.size;
          return true;
        }
        function listCacheGet(key) {
          var data = this.__data__, index = assocIndexOf(data, key);
          return index < 0 ? undefined2 : data[index][1];
        }
        function listCacheHas(key) {
          return assocIndexOf(this.__data__, key) > -1;
        }
        function listCacheSet(key, value) {
          var data = this.__data__, index = assocIndexOf(data, key);
          if (index < 0) {
            ++this.size;
            data.push([key, value]);
          } else {
            data[index][1] = value;
          }
          return this;
        }
        ListCache.prototype.clear = listCacheClear;
        ListCache.prototype["delete"] = listCacheDelete;
        ListCache.prototype.get = listCacheGet;
        ListCache.prototype.has = listCacheHas;
        ListCache.prototype.set = listCacheSet;
        function MapCache(entries) {
          var index = -1, length = entries == null ? 0 : entries.length;
          this.clear();
          while (++index < length) {
            var entry = entries[index];
            this.set(entry[0], entry[1]);
          }
        }
        function mapCacheClear() {
          this.size = 0;
          this.__data__ = {
            "hash": new Hash(),
            "map": new (Map2 || ListCache)(),
            "string": new Hash()
          };
        }
        function mapCacheDelete(key) {
          var result2 = getMapData(this, key)["delete"](key);
          this.size -= result2 ? 1 : 0;
          return result2;
        }
        function mapCacheGet(key) {
          return getMapData(this, key).get(key);
        }
        function mapCacheHas(key) {
          return getMapData(this, key).has(key);
        }
        function mapCacheSet(key, value) {
          var data = getMapData(this, key), size2 = data.size;
          data.set(key, value);
          this.size += data.size == size2 ? 0 : 1;
          return this;
        }
        MapCache.prototype.clear = mapCacheClear;
        MapCache.prototype["delete"] = mapCacheDelete;
        MapCache.prototype.get = mapCacheGet;
        MapCache.prototype.has = mapCacheHas;
        MapCache.prototype.set = mapCacheSet;
        function SetCache(values2) {
          var index = -1, length = values2 == null ? 0 : values2.length;
          this.__data__ = new MapCache();
          while (++index < length) {
            this.add(values2[index]);
          }
        }
        function setCacheAdd(value) {
          this.__data__.set(value, HASH_UNDEFINED);
          return this;
        }
        function setCacheHas(value) {
          return this.__data__.has(value);
        }
        SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
        SetCache.prototype.has = setCacheHas;
        function Stack(entries) {
          var data = this.__data__ = new ListCache(entries);
          this.size = data.size;
        }
        function stackClear() {
          this.__data__ = new ListCache();
          this.size = 0;
        }
        function stackDelete(key) {
          var data = this.__data__, result2 = data["delete"](key);
          this.size = data.size;
          return result2;
        }
        function stackGet(key) {
          return this.__data__.get(key);
        }
        function stackHas(key) {
          return this.__data__.has(key);
        }
        function stackSet(key, value) {
          var data = this.__data__;
          if (data instanceof ListCache) {
            var pairs = data.__data__;
            if (!Map2 || pairs.length < LARGE_ARRAY_SIZE - 1) {
              pairs.push([key, value]);
              this.size = ++data.size;
              return this;
            }
            data = this.__data__ = new MapCache(pairs);
          }
          data.set(key, value);
          this.size = data.size;
          return this;
        }
        Stack.prototype.clear = stackClear;
        Stack.prototype["delete"] = stackDelete;
        Stack.prototype.get = stackGet;
        Stack.prototype.has = stackHas;
        Stack.prototype.set = stackSet;
        function arrayLikeKeys(value, inherited) {
          var isArr = isArray(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result2 = skipIndexes ? baseTimes(value.length, String2) : [], length = result2.length;
          for (var key in value) {
            if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && (key == "length" || isBuff && (key == "offset" || key == "parent") || isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || isIndex(key, length)))) {
              result2.push(key);
            }
          }
          return result2;
        }
        function arraySample(array) {
          var length = array.length;
          return length ? array[baseRandom(0, length - 1)] : undefined2;
        }
        function arraySampleSize(array, n) {
          return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
        }
        function arrayShuffle(array) {
          return shuffleSelf(copyArray(array));
        }
        function assignMergeValue(object, key, value) {
          if (value !== undefined2 && !eq(object[key], value) || value === undefined2 && !(key in object)) {
            baseAssignValue(object, key, value);
          }
        }
        function assignValue(object, key, value) {
          var objValue = object[key];
          if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === undefined2 && !(key in object)) {
            baseAssignValue(object, key, value);
          }
        }
        function assocIndexOf(array, key) {
          var length = array.length;
          while (length--) {
            if (eq(array[length][0], key)) {
              return length;
            }
          }
          return -1;
        }
        function baseAggregator(collection, setter, iteratee2, accumulator) {
          baseEach(collection, function(value, key, collection2) {
            setter(accumulator, value, iteratee2(value), collection2);
          });
          return accumulator;
        }
        function baseAssign(object, source) {
          return object && copyObject(source, keys(source), object);
        }
        function baseAssignIn(object, source) {
          return object && copyObject(source, keysIn(source), object);
        }
        function baseAssignValue(object, key, value) {
          if (key == "__proto__" && defineProperty) {
            defineProperty(object, key, {
              "configurable": true,
              "enumerable": true,
              "value": value,
              "writable": true
            });
          } else {
            object[key] = value;
          }
        }
        function baseAt(object, paths) {
          var index = -1, length = paths.length, result2 = Array2(length), skip = object == null;
          while (++index < length) {
            result2[index] = skip ? undefined2 : get(object, paths[index]);
          }
          return result2;
        }
        function baseClamp(number, lower, upper) {
          if (number === number) {
            if (upper !== undefined2) {
              number = number <= upper ? number : upper;
            }
            if (lower !== undefined2) {
              number = number >= lower ? number : lower;
            }
          }
          return number;
        }
        function baseClone(value, bitmask, customizer, key, object, stack) {
          var result2, isDeep = bitmask & CLONE_DEEP_FLAG, isFlat = bitmask & CLONE_FLAT_FLAG, isFull = bitmask & CLONE_SYMBOLS_FLAG;
          if (customizer) {
            result2 = object ? customizer(value, key, object, stack) : customizer(value);
          }
          if (result2 !== undefined2) {
            return result2;
          }
          if (!isObject(value)) {
            return value;
          }
          var isArr = isArray(value);
          if (isArr) {
            result2 = initCloneArray(value);
            if (!isDeep) {
              return copyArray(value, result2);
            }
          } else {
            var tag = getTag(value), isFunc = tag == funcTag || tag == genTag;
            if (isBuffer(value)) {
              return cloneBuffer(value, isDeep);
            }
            if (tag == objectTag || tag == argsTag || isFunc && !object) {
              result2 = isFlat || isFunc ? {} : initCloneObject(value);
              if (!isDeep) {
                return isFlat ? copySymbolsIn(value, baseAssignIn(result2, value)) : copySymbols(value, baseAssign(result2, value));
              }
            } else {
              if (!cloneableTags[tag]) {
                return object ? value : {};
              }
              result2 = initCloneByTag(value, tag, isDeep);
            }
          }
          stack || (stack = new Stack());
          var stacked = stack.get(value);
          if (stacked) {
            return stacked;
          }
          stack.set(value, result2);
          if (isSet(value)) {
            value.forEach(function(subValue) {
              result2.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
            });
          } else if (isMap(value)) {
            value.forEach(function(subValue, key2) {
              result2.set(key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
            });
          }
          var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;
          var props = isArr ? undefined2 : keysFunc(value);
          arrayEach(props || value, function(subValue, key2) {
            if (props) {
              key2 = subValue;
              subValue = value[key2];
            }
            assignValue(result2, key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
          });
          return result2;
        }
        function baseConforms(source) {
          var props = keys(source);
          return function(object) {
            return baseConformsTo(object, source, props);
          };
        }
        function baseConformsTo(object, source, props) {
          var length = props.length;
          if (object == null) {
            return !length;
          }
          object = Object2(object);
          while (length--) {
            var key = props[length], predicate = source[key], value = object[key];
            if (value === undefined2 && !(key in object) || !predicate(value)) {
              return false;
            }
          }
          return true;
        }
        function baseDelay(func, wait, args) {
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          return setTimeout2(function() {
            func.apply(undefined2, args);
          }, wait);
        }
        function baseDifference(array, values2, iteratee2, comparator) {
          var index = -1, includes2 = arrayIncludes, isCommon = true, length = array.length, result2 = [], valuesLength = values2.length;
          if (!length) {
            return result2;
          }
          if (iteratee2) {
            values2 = arrayMap(values2, baseUnary(iteratee2));
          }
          if (comparator) {
            includes2 = arrayIncludesWith;
            isCommon = false;
          } else if (values2.length >= LARGE_ARRAY_SIZE) {
            includes2 = cacheHas;
            isCommon = false;
            values2 = new SetCache(values2);
          }
          outer:
            while (++index < length) {
              var value = array[index], computed = iteratee2 == null ? value : iteratee2(value);
              value = comparator || value !== 0 ? value : 0;
              if (isCommon && computed === computed) {
                var valuesIndex = valuesLength;
                while (valuesIndex--) {
                  if (values2[valuesIndex] === computed) {
                    continue outer;
                  }
                }
                result2.push(value);
              } else if (!includes2(values2, computed, comparator)) {
                result2.push(value);
              }
            }
          return result2;
        }
        var baseEach = createBaseEach(baseForOwn);
        var baseEachRight = createBaseEach(baseForOwnRight, true);
        function baseEvery(collection, predicate) {
          var result2 = true;
          baseEach(collection, function(value, index, collection2) {
            result2 = !!predicate(value, index, collection2);
            return result2;
          });
          return result2;
        }
        function baseExtremum(array, iteratee2, comparator) {
          var index = -1, length = array.length;
          while (++index < length) {
            var value = array[index], current = iteratee2(value);
            if (current != null && (computed === undefined2 ? current === current && !isSymbol(current) : comparator(current, computed))) {
              var computed = current, result2 = value;
            }
          }
          return result2;
        }
        function baseFill(array, value, start2, end2) {
          var length = array.length;
          start2 = toInteger(start2);
          if (start2 < 0) {
            start2 = -start2 > length ? 0 : length + start2;
          }
          end2 = end2 === undefined2 || end2 > length ? length : toInteger(end2);
          if (end2 < 0) {
            end2 += length;
          }
          end2 = start2 > end2 ? 0 : toLength(end2);
          while (start2 < end2) {
            array[start2++] = value;
          }
          return array;
        }
        function baseFilter(collection, predicate) {
          var result2 = [];
          baseEach(collection, function(value, index, collection2) {
            if (predicate(value, index, collection2)) {
              result2.push(value);
            }
          });
          return result2;
        }
        function baseFlatten(array, depth, predicate, isStrict, result2) {
          var index = -1, length = array.length;
          predicate || (predicate = isFlattenable);
          result2 || (result2 = []);
          while (++index < length) {
            var value = array[index];
            if (depth > 0 && predicate(value)) {
              if (depth > 1) {
                baseFlatten(value, depth - 1, predicate, isStrict, result2);
              } else {
                arrayPush(result2, value);
              }
            } else if (!isStrict) {
              result2[result2.length] = value;
            }
          }
          return result2;
        }
        var baseFor = createBaseFor();
        var baseForRight = createBaseFor(true);
        function baseForOwn(object, iteratee2) {
          return object && baseFor(object, iteratee2, keys);
        }
        function baseForOwnRight(object, iteratee2) {
          return object && baseForRight(object, iteratee2, keys);
        }
        function baseFunctions(object, props) {
          return arrayFilter(props, function(key) {
            return isFunction(object[key]);
          });
        }
        function baseGet(object, path) {
          path = castPath(path, object);
          var index = 0, length = path.length;
          while (object != null && index < length) {
            object = object[toKey(path[index++])];
          }
          return index && index == length ? object : undefined2;
        }
        function baseGetAllKeys(object, keysFunc, symbolsFunc) {
          var result2 = keysFunc(object);
          return isArray(object) ? result2 : arrayPush(result2, symbolsFunc(object));
        }
        function baseGetTag(value) {
          if (value == null) {
            return value === undefined2 ? undefinedTag : nullTag;
          }
          return symToStringTag && symToStringTag in Object2(value) ? getRawTag(value) : objectToString(value);
        }
        function baseGt(value, other) {
          return value > other;
        }
        function baseHas(object, key) {
          return object != null && hasOwnProperty.call(object, key);
        }
        function baseHasIn(object, key) {
          return object != null && key in Object2(object);
        }
        function baseInRange(number, start2, end2) {
          return number >= nativeMin(start2, end2) && number < nativeMax(start2, end2);
        }
        function baseIntersection(arrays, iteratee2, comparator) {
          var includes2 = comparator ? arrayIncludesWith : arrayIncludes, length = arrays[0].length, othLength = arrays.length, othIndex = othLength, caches = Array2(othLength), maxLength = Infinity, result2 = [];
          while (othIndex--) {
            var array = arrays[othIndex];
            if (othIndex && iteratee2) {
              array = arrayMap(array, baseUnary(iteratee2));
            }
            maxLength = nativeMin(array.length, maxLength);
            caches[othIndex] = !comparator && (iteratee2 || length >= 120 && array.length >= 120) ? new SetCache(othIndex && array) : undefined2;
          }
          array = arrays[0];
          var index = -1, seen = caches[0];
          outer:
            while (++index < length && result2.length < maxLength) {
              var value = array[index], computed = iteratee2 ? iteratee2(value) : value;
              value = comparator || value !== 0 ? value : 0;
              if (!(seen ? cacheHas(seen, computed) : includes2(result2, computed, comparator))) {
                othIndex = othLength;
                while (--othIndex) {
                  var cache = caches[othIndex];
                  if (!(cache ? cacheHas(cache, computed) : includes2(arrays[othIndex], computed, comparator))) {
                    continue outer;
                  }
                }
                if (seen) {
                  seen.push(computed);
                }
                result2.push(value);
              }
            }
          return result2;
        }
        function baseInverter(object, setter, iteratee2, accumulator) {
          baseForOwn(object, function(value, key, object2) {
            setter(accumulator, iteratee2(value), key, object2);
          });
          return accumulator;
        }
        function baseInvoke(object, path, args) {
          path = castPath(path, object);
          object = parent(object, path);
          var func = object == null ? object : object[toKey(last(path))];
          return func == null ? undefined2 : apply(func, object, args);
        }
        function baseIsArguments(value) {
          return isObjectLike(value) && baseGetTag(value) == argsTag;
        }
        function baseIsArrayBuffer(value) {
          return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
        }
        function baseIsDate(value) {
          return isObjectLike(value) && baseGetTag(value) == dateTag;
        }
        function baseIsEqual(value, other, bitmask, customizer, stack) {
          if (value === other) {
            return true;
          }
          if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
            return value !== value && other !== other;
          }
          return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
        }
        function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
          var objIsArr = isArray(object), othIsArr = isArray(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other);
          objTag = objTag == argsTag ? objectTag : objTag;
          othTag = othTag == argsTag ? objectTag : othTag;
          var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
          if (isSameTag && isBuffer(object)) {
            if (!isBuffer(other)) {
              return false;
            }
            objIsArr = true;
            objIsObj = false;
          }
          if (isSameTag && !objIsObj) {
            stack || (stack = new Stack());
            return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
          }
          if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
            var objIsWrapped = objIsObj && hasOwnProperty.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty.call(other, "__wrapped__");
            if (objIsWrapped || othIsWrapped) {
              var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
              stack || (stack = new Stack());
              return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
            }
          }
          if (!isSameTag) {
            return false;
          }
          stack || (stack = new Stack());
          return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
        }
        function baseIsMap(value) {
          return isObjectLike(value) && getTag(value) == mapTag;
        }
        function baseIsMatch(object, source, matchData, customizer) {
          var index = matchData.length, length = index, noCustomizer = !customizer;
          if (object == null) {
            return !length;
          }
          object = Object2(object);
          while (index--) {
            var data = matchData[index];
            if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
              return false;
            }
          }
          while (++index < length) {
            data = matchData[index];
            var key = data[0], objValue = object[key], srcValue = data[1];
            if (noCustomizer && data[2]) {
              if (objValue === undefined2 && !(key in object)) {
                return false;
              }
            } else {
              var stack = new Stack();
              if (customizer) {
                var result2 = customizer(objValue, srcValue, key, object, source, stack);
              }
              if (!(result2 === undefined2 ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result2)) {
                return false;
              }
            }
          }
          return true;
        }
        function baseIsNative(value) {
          if (!isObject(value) || isMasked(value)) {
            return false;
          }
          var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
          return pattern.test(toSource(value));
        }
        function baseIsRegExp(value) {
          return isObjectLike(value) && baseGetTag(value) == regexpTag;
        }
        function baseIsSet(value) {
          return isObjectLike(value) && getTag(value) == setTag;
        }
        function baseIsTypedArray(value) {
          return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
        }
        function baseIteratee(value) {
          if (typeof value == "function") {
            return value;
          }
          if (value == null) {
            return identity;
          }
          if (typeof value == "object") {
            return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
          }
          return property(value);
        }
        function baseKeys(object) {
          if (!isPrototype(object)) {
            return nativeKeys(object);
          }
          var result2 = [];
          for (var key in Object2(object)) {
            if (hasOwnProperty.call(object, key) && key != "constructor") {
              result2.push(key);
            }
          }
          return result2;
        }
        function baseKeysIn(object) {
          if (!isObject(object)) {
            return nativeKeysIn(object);
          }
          var isProto = isPrototype(object), result2 = [];
          for (var key in object) {
            if (!(key == "constructor" && (isProto || !hasOwnProperty.call(object, key)))) {
              result2.push(key);
            }
          }
          return result2;
        }
        function baseLt(value, other) {
          return value < other;
        }
        function baseMap(collection, iteratee2) {
          var index = -1, result2 = isArrayLike(collection) ? Array2(collection.length) : [];
          baseEach(collection, function(value, key, collection2) {
            result2[++index] = iteratee2(value, key, collection2);
          });
          return result2;
        }
        function baseMatches(source) {
          var matchData = getMatchData(source);
          if (matchData.length == 1 && matchData[0][2]) {
            return matchesStrictComparable(matchData[0][0], matchData[0][1]);
          }
          return function(object) {
            return object === source || baseIsMatch(object, source, matchData);
          };
        }
        function baseMatchesProperty(path, srcValue) {
          if (isKey(path) && isStrictComparable(srcValue)) {
            return matchesStrictComparable(toKey(path), srcValue);
          }
          return function(object) {
            var objValue = get(object, path);
            return objValue === undefined2 && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
          };
        }
        function baseMerge(object, source, srcIndex, customizer, stack) {
          if (object === source) {
            return;
          }
          baseFor(source, function(srcValue, key) {
            stack || (stack = new Stack());
            if (isObject(srcValue)) {
              baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
            } else {
              var newValue = customizer ? customizer(safeGet(object, key), srcValue, key + "", object, source, stack) : undefined2;
              if (newValue === undefined2) {
                newValue = srcValue;
              }
              assignMergeValue(object, key, newValue);
            }
          }, keysIn);
        }
        function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
          var objValue = safeGet(object, key), srcValue = safeGet(source, key), stacked = stack.get(srcValue);
          if (stacked) {
            assignMergeValue(object, key, stacked);
            return;
          }
          var newValue = customizer ? customizer(objValue, srcValue, key + "", object, source, stack) : undefined2;
          var isCommon = newValue === undefined2;
          if (isCommon) {
            var isArr = isArray(srcValue), isBuff = !isArr && isBuffer(srcValue), isTyped = !isArr && !isBuff && isTypedArray(srcValue);
            newValue = srcValue;
            if (isArr || isBuff || isTyped) {
              if (isArray(objValue)) {
                newValue = objValue;
              } else if (isArrayLikeObject(objValue)) {
                newValue = copyArray(objValue);
              } else if (isBuff) {
                isCommon = false;
                newValue = cloneBuffer(srcValue, true);
              } else if (isTyped) {
                isCommon = false;
                newValue = cloneTypedArray(srcValue, true);
              } else {
                newValue = [];
              }
            } else if (isPlainObject(srcValue) || isArguments(srcValue)) {
              newValue = objValue;
              if (isArguments(objValue)) {
                newValue = toPlainObject(objValue);
              } else if (!isObject(objValue) || isFunction(objValue)) {
                newValue = initCloneObject(srcValue);
              }
            } else {
              isCommon = false;
            }
          }
          if (isCommon) {
            stack.set(srcValue, newValue);
            mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
            stack["delete"](srcValue);
          }
          assignMergeValue(object, key, newValue);
        }
        function baseNth(array, n) {
          var length = array.length;
          if (!length) {
            return;
          }
          n += n < 0 ? length : 0;
          return isIndex(n, length) ? array[n] : undefined2;
        }
        function baseOrderBy(collection, iteratees, orders) {
          if (iteratees.length) {
            iteratees = arrayMap(iteratees, function(iteratee2) {
              if (isArray(iteratee2)) {
                return function(value) {
                  return baseGet(value, iteratee2.length === 1 ? iteratee2[0] : iteratee2);
                };
              }
              return iteratee2;
            });
          } else {
            iteratees = [identity];
          }
          var index = -1;
          iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
          var result2 = baseMap(collection, function(value, key, collection2) {
            var criteria = arrayMap(iteratees, function(iteratee2) {
              return iteratee2(value);
            });
            return { "criteria": criteria, "index": ++index, "value": value };
          });
          return baseSortBy(result2, function(object, other) {
            return compareMultiple(object, other, orders);
          });
        }
        function basePick(object, paths) {
          return basePickBy(object, paths, function(value, path) {
            return hasIn(object, path);
          });
        }
        function basePickBy(object, paths, predicate) {
          var index = -1, length = paths.length, result2 = {};
          while (++index < length) {
            var path = paths[index], value = baseGet(object, path);
            if (predicate(value, path)) {
              baseSet(result2, castPath(path, object), value);
            }
          }
          return result2;
        }
        function basePropertyDeep(path) {
          return function(object) {
            return baseGet(object, path);
          };
        }
        function basePullAll(array, values2, iteratee2, comparator) {
          var indexOf2 = comparator ? baseIndexOfWith : baseIndexOf, index = -1, length = values2.length, seen = array;
          if (array === values2) {
            values2 = copyArray(values2);
          }
          if (iteratee2) {
            seen = arrayMap(array, baseUnary(iteratee2));
          }
          while (++index < length) {
            var fromIndex = 0, value = values2[index], computed = iteratee2 ? iteratee2(value) : value;
            while ((fromIndex = indexOf2(seen, computed, fromIndex, comparator)) > -1) {
              if (seen !== array) {
                splice.call(seen, fromIndex, 1);
              }
              splice.call(array, fromIndex, 1);
            }
          }
          return array;
        }
        function basePullAt(array, indexes) {
          var length = array ? indexes.length : 0, lastIndex = length - 1;
          while (length--) {
            var index = indexes[length];
            if (length == lastIndex || index !== previous) {
              var previous = index;
              if (isIndex(index)) {
                splice.call(array, index, 1);
              } else {
                baseUnset(array, index);
              }
            }
          }
          return array;
        }
        function baseRandom(lower, upper) {
          return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
        }
        function baseRange(start2, end2, step, fromRight) {
          var index = -1, length = nativeMax(nativeCeil((end2 - start2) / (step || 1)), 0), result2 = Array2(length);
          while (length--) {
            result2[fromRight ? length : ++index] = start2;
            start2 += step;
          }
          return result2;
        }
        function baseRepeat(string, n) {
          var result2 = "";
          if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
            return result2;
          }
          do {
            if (n % 2) {
              result2 += string;
            }
            n = nativeFloor(n / 2);
            if (n) {
              string += string;
            }
          } while (n);
          return result2;
        }
        function baseRest(func, start2) {
          return setToString(overRest(func, start2, identity), func + "");
        }
        function baseSample(collection) {
          return arraySample(values(collection));
        }
        function baseSampleSize(collection, n) {
          var array = values(collection);
          return shuffleSelf(array, baseClamp(n, 0, array.length));
        }
        function baseSet(object, path, value, customizer) {
          if (!isObject(object)) {
            return object;
          }
          path = castPath(path, object);
          var index = -1, length = path.length, lastIndex = length - 1, nested = object;
          while (nested != null && ++index < length) {
            var key = toKey(path[index]), newValue = value;
            if (key === "__proto__" || key === "constructor" || key === "prototype") {
              return object;
            }
            if (index != lastIndex) {
              var objValue = nested[key];
              newValue = customizer ? customizer(objValue, key, nested) : undefined2;
              if (newValue === undefined2) {
                newValue = isObject(objValue) ? objValue : isIndex(path[index + 1]) ? [] : {};
              }
            }
            assignValue(nested, key, newValue);
            nested = nested[key];
          }
          return object;
        }
        var baseSetData = !metaMap ? identity : function(func, data) {
          metaMap.set(func, data);
          return func;
        };
        var baseSetToString = !defineProperty ? identity : function(func, string) {
          return defineProperty(func, "toString", {
            "configurable": true,
            "enumerable": false,
            "value": constant(string),
            "writable": true
          });
        };
        function baseShuffle(collection) {
          return shuffleSelf(values(collection));
        }
        function baseSlice(array, start2, end2) {
          var index = -1, length = array.length;
          if (start2 < 0) {
            start2 = -start2 > length ? 0 : length + start2;
          }
          end2 = end2 > length ? length : end2;
          if (end2 < 0) {
            end2 += length;
          }
          length = start2 > end2 ? 0 : end2 - start2 >>> 0;
          start2 >>>= 0;
          var result2 = Array2(length);
          while (++index < length) {
            result2[index] = array[index + start2];
          }
          return result2;
        }
        function baseSome(collection, predicate) {
          var result2;
          baseEach(collection, function(value, index, collection2) {
            result2 = predicate(value, index, collection2);
            return !result2;
          });
          return !!result2;
        }
        function baseSortedIndex(array, value, retHighest) {
          var low = 0, high = array == null ? low : array.length;
          if (typeof value == "number" && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
            while (low < high) {
              var mid = low + high >>> 1, computed = array[mid];
              if (computed !== null && !isSymbol(computed) && (retHighest ? computed <= value : computed < value)) {
                low = mid + 1;
              } else {
                high = mid;
              }
            }
            return high;
          }
          return baseSortedIndexBy(array, value, identity, retHighest);
        }
        function baseSortedIndexBy(array, value, iteratee2, retHighest) {
          var low = 0, high = array == null ? 0 : array.length;
          if (high === 0) {
            return 0;
          }
          value = iteratee2(value);
          var valIsNaN = value !== value, valIsNull = value === null, valIsSymbol = isSymbol(value), valIsUndefined = value === undefined2;
          while (low < high) {
            var mid = nativeFloor((low + high) / 2), computed = iteratee2(array[mid]), othIsDefined = computed !== undefined2, othIsNull = computed === null, othIsReflexive = computed === computed, othIsSymbol = isSymbol(computed);
            if (valIsNaN) {
              var setLow = retHighest || othIsReflexive;
            } else if (valIsUndefined) {
              setLow = othIsReflexive && (retHighest || othIsDefined);
            } else if (valIsNull) {
              setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
            } else if (valIsSymbol) {
              setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
            } else if (othIsNull || othIsSymbol) {
              setLow = false;
            } else {
              setLow = retHighest ? computed <= value : computed < value;
            }
            if (setLow) {
              low = mid + 1;
            } else {
              high = mid;
            }
          }
          return nativeMin(high, MAX_ARRAY_INDEX);
        }
        function baseSortedUniq(array, iteratee2) {
          var index = -1, length = array.length, resIndex = 0, result2 = [];
          while (++index < length) {
            var value = array[index], computed = iteratee2 ? iteratee2(value) : value;
            if (!index || !eq(computed, seen)) {
              var seen = computed;
              result2[resIndex++] = value === 0 ? 0 : value;
            }
          }
          return result2;
        }
        function baseToNumber(value) {
          if (typeof value == "number") {
            return value;
          }
          if (isSymbol(value)) {
            return NAN;
          }
          return +value;
        }
        function baseToString(value) {
          if (typeof value == "string") {
            return value;
          }
          if (isArray(value)) {
            return arrayMap(value, baseToString) + "";
          }
          if (isSymbol(value)) {
            return symbolToString ? symbolToString.call(value) : "";
          }
          var result2 = value + "";
          return result2 == "0" && 1 / value == -INFINITY ? "-0" : result2;
        }
        function baseUniq(array, iteratee2, comparator) {
          var index = -1, includes2 = arrayIncludes, length = array.length, isCommon = true, result2 = [], seen = result2;
          if (comparator) {
            isCommon = false;
            includes2 = arrayIncludesWith;
          } else if (length >= LARGE_ARRAY_SIZE) {
            var set2 = iteratee2 ? null : createSet(array);
            if (set2) {
              return setToArray(set2);
            }
            isCommon = false;
            includes2 = cacheHas;
            seen = new SetCache();
          } else {
            seen = iteratee2 ? [] : result2;
          }
          outer:
            while (++index < length) {
              var value = array[index], computed = iteratee2 ? iteratee2(value) : value;
              value = comparator || value !== 0 ? value : 0;
              if (isCommon && computed === computed) {
                var seenIndex = seen.length;
                while (seenIndex--) {
                  if (seen[seenIndex] === computed) {
                    continue outer;
                  }
                }
                if (iteratee2) {
                  seen.push(computed);
                }
                result2.push(value);
              } else if (!includes2(seen, computed, comparator)) {
                if (seen !== result2) {
                  seen.push(computed);
                }
                result2.push(value);
              }
            }
          return result2;
        }
        function baseUnset(object, path) {
          path = castPath(path, object);
          object = parent(object, path);
          return object == null || delete object[toKey(last(path))];
        }
        function baseUpdate(object, path, updater, customizer) {
          return baseSet(object, path, updater(baseGet(object, path)), customizer);
        }
        function baseWhile(array, predicate, isDrop, fromRight) {
          var length = array.length, index = fromRight ? length : -1;
          while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {
          }
          return isDrop ? baseSlice(array, fromRight ? 0 : index, fromRight ? index + 1 : length) : baseSlice(array, fromRight ? index + 1 : 0, fromRight ? length : index);
        }
        function baseWrapperValue(value, actions) {
          var result2 = value;
          if (result2 instanceof LazyWrapper) {
            result2 = result2.value();
          }
          return arrayReduce(actions, function(result3, action) {
            return action.func.apply(action.thisArg, arrayPush([result3], action.args));
          }, result2);
        }
        function baseXor(arrays, iteratee2, comparator) {
          var length = arrays.length;
          if (length < 2) {
            return length ? baseUniq(arrays[0]) : [];
          }
          var index = -1, result2 = Array2(length);
          while (++index < length) {
            var array = arrays[index], othIndex = -1;
            while (++othIndex < length) {
              if (othIndex != index) {
                result2[index] = baseDifference(result2[index] || array, arrays[othIndex], iteratee2, comparator);
              }
            }
          }
          return baseUniq(baseFlatten(result2, 1), iteratee2, comparator);
        }
        function baseZipObject(props, values2, assignFunc) {
          var index = -1, length = props.length, valsLength = values2.length, result2 = {};
          while (++index < length) {
            var value = index < valsLength ? values2[index] : undefined2;
            assignFunc(result2, props[index], value);
          }
          return result2;
        }
        function castArrayLikeObject(value) {
          return isArrayLikeObject(value) ? value : [];
        }
        function castFunction(value) {
          return typeof value == "function" ? value : identity;
        }
        function castPath(value, object) {
          if (isArray(value)) {
            return value;
          }
          return isKey(value, object) ? [value] : stringToPath(toString(value));
        }
        var castRest = baseRest;
        function castSlice(array, start2, end2) {
          var length = array.length;
          end2 = end2 === undefined2 ? length : end2;
          return !start2 && end2 >= length ? array : baseSlice(array, start2, end2);
        }
        var clearTimeout = ctxClearTimeout || function(id) {
          return root.clearTimeout(id);
        };
        function cloneBuffer(buffer, isDeep) {
          if (isDeep) {
            return buffer.slice();
          }
          var length = buffer.length, result2 = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
          buffer.copy(result2);
          return result2;
        }
        function cloneArrayBuffer(arrayBuffer) {
          var result2 = new arrayBuffer.constructor(arrayBuffer.byteLength);
          new Uint8Array2(result2).set(new Uint8Array2(arrayBuffer));
          return result2;
        }
        function cloneDataView(dataView, isDeep) {
          var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
          return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
        }
        function cloneRegExp(regexp) {
          var result2 = new regexp.constructor(regexp.source, reFlags.exec(regexp));
          result2.lastIndex = regexp.lastIndex;
          return result2;
        }
        function cloneSymbol(symbol) {
          return symbolValueOf ? Object2(symbolValueOf.call(symbol)) : {};
        }
        function cloneTypedArray(typedArray, isDeep) {
          var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
          return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
        }
        function compareAscending(value, other) {
          if (value !== other) {
            var valIsDefined = value !== undefined2, valIsNull = value === null, valIsReflexive = value === value, valIsSymbol = isSymbol(value);
            var othIsDefined = other !== undefined2, othIsNull = other === null, othIsReflexive = other === other, othIsSymbol = isSymbol(other);
            if (!othIsNull && !othIsSymbol && !valIsSymbol && value > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive) {
              return 1;
            }
            if (!valIsNull && !valIsSymbol && !othIsSymbol && value < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive) {
              return -1;
            }
          }
          return 0;
        }
        function compareMultiple(object, other, orders) {
          var index = -1, objCriteria = object.criteria, othCriteria = other.criteria, length = objCriteria.length, ordersLength = orders.length;
          while (++index < length) {
            var result2 = compareAscending(objCriteria[index], othCriteria[index]);
            if (result2) {
              if (index >= ordersLength) {
                return result2;
              }
              var order2 = orders[index];
              return result2 * (order2 == "desc" ? -1 : 1);
            }
          }
          return object.index - other.index;
        }
        function composeArgs(args, partials, holders, isCurried) {
          var argsIndex = -1, argsLength = args.length, holdersLength = holders.length, leftIndex = -1, leftLength = partials.length, rangeLength = nativeMax(argsLength - holdersLength, 0), result2 = Array2(leftLength + rangeLength), isUncurried = !isCurried;
          while (++leftIndex < leftLength) {
            result2[leftIndex] = partials[leftIndex];
          }
          while (++argsIndex < holdersLength) {
            if (isUncurried || argsIndex < argsLength) {
              result2[holders[argsIndex]] = args[argsIndex];
            }
          }
          while (rangeLength--) {
            result2[leftIndex++] = args[argsIndex++];
          }
          return result2;
        }
        function composeArgsRight(args, partials, holders, isCurried) {
          var argsIndex = -1, argsLength = args.length, holdersIndex = -1, holdersLength = holders.length, rightIndex = -1, rightLength = partials.length, rangeLength = nativeMax(argsLength - holdersLength, 0), result2 = Array2(rangeLength + rightLength), isUncurried = !isCurried;
          while (++argsIndex < rangeLength) {
            result2[argsIndex] = args[argsIndex];
          }
          var offset2 = argsIndex;
          while (++rightIndex < rightLength) {
            result2[offset2 + rightIndex] = partials[rightIndex];
          }
          while (++holdersIndex < holdersLength) {
            if (isUncurried || argsIndex < argsLength) {
              result2[offset2 + holders[holdersIndex]] = args[argsIndex++];
            }
          }
          return result2;
        }
        function copyArray(source, array) {
          var index = -1, length = source.length;
          array || (array = Array2(length));
          while (++index < length) {
            array[index] = source[index];
          }
          return array;
        }
        function copyObject(source, props, object, customizer) {
          var isNew = !object;
          object || (object = {});
          var index = -1, length = props.length;
          while (++index < length) {
            var key = props[index];
            var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined2;
            if (newValue === undefined2) {
              newValue = source[key];
            }
            if (isNew) {
              baseAssignValue(object, key, newValue);
            } else {
              assignValue(object, key, newValue);
            }
          }
          return object;
        }
        function copySymbols(source, object) {
          return copyObject(source, getSymbols(source), object);
        }
        function copySymbolsIn(source, object) {
          return copyObject(source, getSymbolsIn(source), object);
        }
        function createAggregator(setter, initializer) {
          return function(collection, iteratee2) {
            var func = isArray(collection) ? arrayAggregator : baseAggregator, accumulator = initializer ? initializer() : {};
            return func(collection, setter, getIteratee(iteratee2, 2), accumulator);
          };
        }
        function createAssigner(assigner) {
          return baseRest(function(object, sources) {
            var index = -1, length = sources.length, customizer = length > 1 ? sources[length - 1] : undefined2, guard = length > 2 ? sources[2] : undefined2;
            customizer = assigner.length > 3 && typeof customizer == "function" ? (length--, customizer) : undefined2;
            if (guard && isIterateeCall(sources[0], sources[1], guard)) {
              customizer = length < 3 ? undefined2 : customizer;
              length = 1;
            }
            object = Object2(object);
            while (++index < length) {
              var source = sources[index];
              if (source) {
                assigner(object, source, index, customizer);
              }
            }
            return object;
          });
        }
        function createBaseEach(eachFunc, fromRight) {
          return function(collection, iteratee2) {
            if (collection == null) {
              return collection;
            }
            if (!isArrayLike(collection)) {
              return eachFunc(collection, iteratee2);
            }
            var length = collection.length, index = fromRight ? length : -1, iterable = Object2(collection);
            while (fromRight ? index-- : ++index < length) {
              if (iteratee2(iterable[index], index, iterable) === false) {
                break;
              }
            }
            return collection;
          };
        }
        function createBaseFor(fromRight) {
          return function(object, iteratee2, keysFunc) {
            var index = -1, iterable = Object2(object), props = keysFunc(object), length = props.length;
            while (length--) {
              var key = props[fromRight ? length : ++index];
              if (iteratee2(iterable[key], key, iterable) === false) {
                break;
              }
            }
            return object;
          };
        }
        function createBind(func, bitmask, thisArg) {
          var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor(func);
          function wrapper() {
            var fn2 = this && this !== root && this instanceof wrapper ? Ctor : func;
            return fn2.apply(isBind ? thisArg : this, arguments);
          }
          return wrapper;
        }
        function createCaseFirst(methodName) {
          return function(string) {
            string = toString(string);
            var strSymbols = hasUnicode(string) ? stringToArray(string) : undefined2;
            var chr = strSymbols ? strSymbols[0] : string.charAt(0);
            var trailing = strSymbols ? castSlice(strSymbols, 1).join("") : string.slice(1);
            return chr[methodName]() + trailing;
          };
        }
        function createCompounder(callback) {
          return function(string) {
            return arrayReduce(words(deburr(string).replace(reApos, "")), callback, "");
          };
        }
        function createCtor(Ctor) {
          return function() {
            var args = arguments;
            switch (args.length) {
              case 0:
                return new Ctor();
              case 1:
                return new Ctor(args[0]);
              case 2:
                return new Ctor(args[0], args[1]);
              case 3:
                return new Ctor(args[0], args[1], args[2]);
              case 4:
                return new Ctor(args[0], args[1], args[2], args[3]);
              case 5:
                return new Ctor(args[0], args[1], args[2], args[3], args[4]);
              case 6:
                return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
              case 7:
                return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
            }
            var thisBinding = baseCreate(Ctor.prototype), result2 = Ctor.apply(thisBinding, args);
            return isObject(result2) ? result2 : thisBinding;
          };
        }
        function createCurry(func, bitmask, arity) {
          var Ctor = createCtor(func);
          function wrapper() {
            var length = arguments.length, args = Array2(length), index = length, placeholder = getHolder(wrapper);
            while (index--) {
              args[index] = arguments[index];
            }
            var holders = length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder ? [] : replaceHolders(args, placeholder);
            length -= holders.length;
            if (length < arity) {
              return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, undefined2, args, holders, undefined2, undefined2, arity - length);
            }
            var fn2 = this && this !== root && this instanceof wrapper ? Ctor : func;
            return apply(fn2, this, args);
          }
          return wrapper;
        }
        function createFind(findIndexFunc) {
          return function(collection, predicate, fromIndex) {
            var iterable = Object2(collection);
            if (!isArrayLike(collection)) {
              var iteratee2 = getIteratee(predicate, 3);
              collection = keys(collection);
              predicate = function(key) {
                return iteratee2(iterable[key], key, iterable);
              };
            }
            var index = findIndexFunc(collection, predicate, fromIndex);
            return index > -1 ? iterable[iteratee2 ? collection[index] : index] : undefined2;
          };
        }
        function createFlow(fromRight) {
          return flatRest(function(funcs) {
            var length = funcs.length, index = length, prereq = LodashWrapper.prototype.thru;
            if (fromRight) {
              funcs.reverse();
            }
            while (index--) {
              var func = funcs[index];
              if (typeof func != "function") {
                throw new TypeError2(FUNC_ERROR_TEXT);
              }
              if (prereq && !wrapper && getFuncName(func) == "wrapper") {
                var wrapper = new LodashWrapper([], true);
              }
            }
            index = wrapper ? index : length;
            while (++index < length) {
              func = funcs[index];
              var funcName = getFuncName(func), data = funcName == "wrapper" ? getData(func) : undefined2;
              if (data && isLaziable(data[0]) && data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) && !data[4].length && data[9] == 1) {
                wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
              } else {
                wrapper = func.length == 1 && isLaziable(func) ? wrapper[funcName]() : wrapper.thru(func);
              }
            }
            return function() {
              var args = arguments, value = args[0];
              if (wrapper && args.length == 1 && isArray(value)) {
                return wrapper.plant(value).value();
              }
              var index2 = 0, result2 = length ? funcs[index2].apply(this, args) : value;
              while (++index2 < length) {
                result2 = funcs[index2].call(this, result2);
              }
              return result2;
            };
          });
        }
        function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary2, arity) {
          var isAry = bitmask & WRAP_ARY_FLAG, isBind = bitmask & WRAP_BIND_FLAG, isBindKey = bitmask & WRAP_BIND_KEY_FLAG, isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG), isFlip = bitmask & WRAP_FLIP_FLAG, Ctor = isBindKey ? undefined2 : createCtor(func);
          function wrapper() {
            var length = arguments.length, args = Array2(length), index = length;
            while (index--) {
              args[index] = arguments[index];
            }
            if (isCurried) {
              var placeholder = getHolder(wrapper), holdersCount = countHolders(args, placeholder);
            }
            if (partials) {
              args = composeArgs(args, partials, holders, isCurried);
            }
            if (partialsRight) {
              args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
            }
            length -= holdersCount;
            if (isCurried && length < arity) {
              var newHolders = replaceHolders(args, placeholder);
              return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, thisArg, args, newHolders, argPos, ary2, arity - length);
            }
            var thisBinding = isBind ? thisArg : this, fn2 = isBindKey ? thisBinding[func] : func;
            length = args.length;
            if (argPos) {
              args = reorder(args, argPos);
            } else if (isFlip && length > 1) {
              args.reverse();
            }
            if (isAry && ary2 < length) {
              args.length = ary2;
            }
            if (this && this !== root && this instanceof wrapper) {
              fn2 = Ctor || createCtor(fn2);
            }
            return fn2.apply(thisBinding, args);
          }
          return wrapper;
        }
        function createInverter(setter, toIteratee) {
          return function(object, iteratee2) {
            return baseInverter(object, setter, toIteratee(iteratee2), {});
          };
        }
        function createMathOperation(operator, defaultValue) {
          return function(value, other) {
            var result2;
            if (value === undefined2 && other === undefined2) {
              return defaultValue;
            }
            if (value !== undefined2) {
              result2 = value;
            }
            if (other !== undefined2) {
              if (result2 === undefined2) {
                return other;
              }
              if (typeof value == "string" || typeof other == "string") {
                value = baseToString(value);
                other = baseToString(other);
              } else {
                value = baseToNumber(value);
                other = baseToNumber(other);
              }
              result2 = operator(value, other);
            }
            return result2;
          };
        }
        function createOver(arrayFunc) {
          return flatRest(function(iteratees) {
            iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
            return baseRest(function(args) {
              var thisArg = this;
              return arrayFunc(iteratees, function(iteratee2) {
                return apply(iteratee2, thisArg, args);
              });
            });
          });
        }
        function createPadding(length, chars) {
          chars = chars === undefined2 ? " " : baseToString(chars);
          var charsLength = chars.length;
          if (charsLength < 2) {
            return charsLength ? baseRepeat(chars, length) : chars;
          }
          var result2 = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
          return hasUnicode(chars) ? castSlice(stringToArray(result2), 0, length).join("") : result2.slice(0, length);
        }
        function createPartial(func, bitmask, thisArg, partials) {
          var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor(func);
          function wrapper() {
            var argsIndex = -1, argsLength = arguments.length, leftIndex = -1, leftLength = partials.length, args = Array2(leftLength + argsLength), fn2 = this && this !== root && this instanceof wrapper ? Ctor : func;
            while (++leftIndex < leftLength) {
              args[leftIndex] = partials[leftIndex];
            }
            while (argsLength--) {
              args[leftIndex++] = arguments[++argsIndex];
            }
            return apply(fn2, isBind ? thisArg : this, args);
          }
          return wrapper;
        }
        function createRange(fromRight) {
          return function(start2, end2, step) {
            if (step && typeof step != "number" && isIterateeCall(start2, end2, step)) {
              end2 = step = undefined2;
            }
            start2 = toFinite(start2);
            if (end2 === undefined2) {
              end2 = start2;
              start2 = 0;
            } else {
              end2 = toFinite(end2);
            }
            step = step === undefined2 ? start2 < end2 ? 1 : -1 : toFinite(step);
            return baseRange(start2, end2, step, fromRight);
          };
        }
        function createRelationalOperation(operator) {
          return function(value, other) {
            if (!(typeof value == "string" && typeof other == "string")) {
              value = toNumber(value);
              other = toNumber(other);
            }
            return operator(value, other);
          };
        }
        function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary2, arity) {
          var isCurry = bitmask & WRAP_CURRY_FLAG, newHolders = isCurry ? holders : undefined2, newHoldersRight = isCurry ? undefined2 : holders, newPartials = isCurry ? partials : undefined2, newPartialsRight = isCurry ? undefined2 : partials;
          bitmask |= isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG;
          bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);
          if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
            bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
          }
          var newData = [
            func,
            bitmask,
            thisArg,
            newPartials,
            newHolders,
            newPartialsRight,
            newHoldersRight,
            argPos,
            ary2,
            arity
          ];
          var result2 = wrapFunc.apply(undefined2, newData);
          if (isLaziable(func)) {
            setData(result2, newData);
          }
          result2.placeholder = placeholder;
          return setWrapToString(result2, func, bitmask);
        }
        function createRound(methodName) {
          var func = Math2[methodName];
          return function(number, precision) {
            number = toNumber(number);
            precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
            if (precision && nativeIsFinite(number)) {
              var pair = (toString(number) + "e").split("e"), value = func(pair[0] + "e" + (+pair[1] + precision));
              pair = (toString(value) + "e").split("e");
              return +(pair[0] + "e" + (+pair[1] - precision));
            }
            return func(number);
          };
        }
        var createSet = !(Set2 && 1 / setToArray(new Set2([, -0]))[1] == INFINITY) ? noop : function(values2) {
          return new Set2(values2);
        };
        function createToPairs(keysFunc) {
          return function(object) {
            var tag = getTag(object);
            if (tag == mapTag) {
              return mapToArray(object);
            }
            if (tag == setTag) {
              return setToPairs(object);
            }
            return baseToPairs(object, keysFunc(object));
          };
        }
        function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary2, arity) {
          var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
          if (!isBindKey && typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          var length = partials ? partials.length : 0;
          if (!length) {
            bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
            partials = holders = undefined2;
          }
          ary2 = ary2 === undefined2 ? ary2 : nativeMax(toInteger(ary2), 0);
          arity = arity === undefined2 ? arity : toInteger(arity);
          length -= holders ? holders.length : 0;
          if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
            var partialsRight = partials, holdersRight = holders;
            partials = holders = undefined2;
          }
          var data = isBindKey ? undefined2 : getData(func);
          var newData = [
            func,
            bitmask,
            thisArg,
            partials,
            holders,
            partialsRight,
            holdersRight,
            argPos,
            ary2,
            arity
          ];
          if (data) {
            mergeData(newData, data);
          }
          func = newData[0];
          bitmask = newData[1];
          thisArg = newData[2];
          partials = newData[3];
          holders = newData[4];
          arity = newData[9] = newData[9] === undefined2 ? isBindKey ? 0 : func.length : nativeMax(newData[9] - length, 0);
          if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
            bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
          }
          if (!bitmask || bitmask == WRAP_BIND_FLAG) {
            var result2 = createBind(func, bitmask, thisArg);
          } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
            result2 = createCurry(func, bitmask, arity);
          } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
            result2 = createPartial(func, bitmask, thisArg, partials);
          } else {
            result2 = createHybrid.apply(undefined2, newData);
          }
          var setter = data ? baseSetData : setData;
          return setWrapToString(setter(result2, newData), func, bitmask);
        }
        function customDefaultsAssignIn(objValue, srcValue, key, object) {
          if (objValue === undefined2 || eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key)) {
            return srcValue;
          }
          return objValue;
        }
        function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
          if (isObject(objValue) && isObject(srcValue)) {
            stack.set(srcValue, objValue);
            baseMerge(objValue, srcValue, undefined2, customDefaultsMerge, stack);
            stack["delete"](srcValue);
          }
          return objValue;
        }
        function customOmitClone(value) {
          return isPlainObject(value) ? undefined2 : value;
        }
        function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
          if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
            return false;
          }
          var arrStacked = stack.get(array);
          var othStacked = stack.get(other);
          if (arrStacked && othStacked) {
            return arrStacked == other && othStacked == array;
          }
          var index = -1, result2 = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined2;
          stack.set(array, other);
          stack.set(other, array);
          while (++index < arrLength) {
            var arrValue = array[index], othValue = other[index];
            if (customizer) {
              var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
            }
            if (compared !== undefined2) {
              if (compared) {
                continue;
              }
              result2 = false;
              break;
            }
            if (seen) {
              if (!arraySome(other, function(othValue2, othIndex) {
                if (!cacheHas(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
                  return seen.push(othIndex);
                }
              })) {
                result2 = false;
                break;
              }
            } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
              result2 = false;
              break;
            }
          }
          stack["delete"](array);
          stack["delete"](other);
          return result2;
        }
        function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
          switch (tag) {
            case dataViewTag:
              if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
                return false;
              }
              object = object.buffer;
              other = other.buffer;
            case arrayBufferTag:
              if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array2(object), new Uint8Array2(other))) {
                return false;
              }
              return true;
            case boolTag:
            case dateTag:
            case numberTag:
              return eq(+object, +other);
            case errorTag:
              return object.name == other.name && object.message == other.message;
            case regexpTag:
            case stringTag:
              return object == other + "";
            case mapTag:
              var convert = mapToArray;
            case setTag:
              var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
              convert || (convert = setToArray);
              if (object.size != other.size && !isPartial) {
                return false;
              }
              var stacked = stack.get(object);
              if (stacked) {
                return stacked == other;
              }
              bitmask |= COMPARE_UNORDERED_FLAG;
              stack.set(object, other);
              var result2 = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
              stack["delete"](object);
              return result2;
            case symbolTag:
              if (symbolValueOf) {
                return symbolValueOf.call(object) == symbolValueOf.call(other);
              }
          }
          return false;
        }
        function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
          if (objLength != othLength && !isPartial) {
            return false;
          }
          var index = objLength;
          while (index--) {
            var key = objProps[index];
            if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
              return false;
            }
          }
          var objStacked = stack.get(object);
          var othStacked = stack.get(other);
          if (objStacked && othStacked) {
            return objStacked == other && othStacked == object;
          }
          var result2 = true;
          stack.set(object, other);
          stack.set(other, object);
          var skipCtor = isPartial;
          while (++index < objLength) {
            key = objProps[index];
            var objValue = object[key], othValue = other[key];
            if (customizer) {
              var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
            }
            if (!(compared === undefined2 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
              result2 = false;
              break;
            }
            skipCtor || (skipCtor = key == "constructor");
          }
          if (result2 && !skipCtor) {
            var objCtor = object.constructor, othCtor = other.constructor;
            if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
              result2 = false;
            }
          }
          stack["delete"](object);
          stack["delete"](other);
          return result2;
        }
        function flatRest(func) {
          return setToString(overRest(func, undefined2, flatten), func + "");
        }
        function getAllKeys(object) {
          return baseGetAllKeys(object, keys, getSymbols);
        }
        function getAllKeysIn(object) {
          return baseGetAllKeys(object, keysIn, getSymbolsIn);
        }
        var getData = !metaMap ? noop : function(func) {
          return metaMap.get(func);
        };
        function getFuncName(func) {
          var result2 = func.name + "", array = realNames[result2], length = hasOwnProperty.call(realNames, result2) ? array.length : 0;
          while (length--) {
            var data = array[length], otherFunc = data.func;
            if (otherFunc == null || otherFunc == func) {
              return data.name;
            }
          }
          return result2;
        }
        function getHolder(func) {
          var object = hasOwnProperty.call(lodash, "placeholder") ? lodash : func;
          return object.placeholder;
        }
        function getIteratee() {
          var result2 = lodash.iteratee || iteratee;
          result2 = result2 === iteratee ? baseIteratee : result2;
          return arguments.length ? result2(arguments[0], arguments[1]) : result2;
        }
        function getMapData(map2, key) {
          var data = map2.__data__;
          return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
        }
        function getMatchData(object) {
          var result2 = keys(object), length = result2.length;
          while (length--) {
            var key = result2[length], value = object[key];
            result2[length] = [key, value, isStrictComparable(value)];
          }
          return result2;
        }
        function getNative(object, key) {
          var value = getValue(object, key);
          return baseIsNative(value) ? value : undefined2;
        }
        function getRawTag(value) {
          var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
          try {
            value[symToStringTag] = undefined2;
            var unmasked = true;
          } catch (e) {
          }
          var result2 = nativeObjectToString.call(value);
          if (unmasked) {
            if (isOwn) {
              value[symToStringTag] = tag;
            } else {
              delete value[symToStringTag];
            }
          }
          return result2;
        }
        var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
          if (object == null) {
            return [];
          }
          object = Object2(object);
          return arrayFilter(nativeGetSymbols(object), function(symbol) {
            return propertyIsEnumerable.call(object, symbol);
          });
        };
        var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
          var result2 = [];
          while (object) {
            arrayPush(result2, getSymbols(object));
            object = getPrototype(object);
          }
          return result2;
        };
        var getTag = baseGetTag;
        if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map2 && getTag(new Map2()) != mapTag || Promise2 && getTag(Promise2.resolve()) != promiseTag || Set2 && getTag(new Set2()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {
          getTag = function(value) {
            var result2 = baseGetTag(value), Ctor = result2 == objectTag ? value.constructor : undefined2, ctorString = Ctor ? toSource(Ctor) : "";
            if (ctorString) {
              switch (ctorString) {
                case dataViewCtorString:
                  return dataViewTag;
                case mapCtorString:
                  return mapTag;
                case promiseCtorString:
                  return promiseTag;
                case setCtorString:
                  return setTag;
                case weakMapCtorString:
                  return weakMapTag;
              }
            }
            return result2;
          };
        }
        function getView(start2, end2, transforms) {
          var index = -1, length = transforms.length;
          while (++index < length) {
            var data = transforms[index], size2 = data.size;
            switch (data.type) {
              case "drop":
                start2 += size2;
                break;
              case "dropRight":
                end2 -= size2;
                break;
              case "take":
                end2 = nativeMin(end2, start2 + size2);
                break;
              case "takeRight":
                start2 = nativeMax(start2, end2 - size2);
                break;
            }
          }
          return { "start": start2, "end": end2 };
        }
        function getWrapDetails(source) {
          var match = source.match(reWrapDetails);
          return match ? match[1].split(reSplitDetails) : [];
        }
        function hasPath(object, path, hasFunc) {
          path = castPath(path, object);
          var index = -1, length = path.length, result2 = false;
          while (++index < length) {
            var key = toKey(path[index]);
            if (!(result2 = object != null && hasFunc(object, key))) {
              break;
            }
            object = object[key];
          }
          if (result2 || ++index != length) {
            return result2;
          }
          length = object == null ? 0 : object.length;
          return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
        }
        function initCloneArray(array) {
          var length = array.length, result2 = new array.constructor(length);
          if (length && typeof array[0] == "string" && hasOwnProperty.call(array, "index")) {
            result2.index = array.index;
            result2.input = array.input;
          }
          return result2;
        }
        function initCloneObject(object) {
          return typeof object.constructor == "function" && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};
        }
        function initCloneByTag(object, tag, isDeep) {
          var Ctor = object.constructor;
          switch (tag) {
            case arrayBufferTag:
              return cloneArrayBuffer(object);
            case boolTag:
            case dateTag:
              return new Ctor(+object);
            case dataViewTag:
              return cloneDataView(object, isDeep);
            case float32Tag:
            case float64Tag:
            case int8Tag:
            case int16Tag:
            case int32Tag:
            case uint8Tag:
            case uint8ClampedTag:
            case uint16Tag:
            case uint32Tag:
              return cloneTypedArray(object, isDeep);
            case mapTag:
              return new Ctor();
            case numberTag:
            case stringTag:
              return new Ctor(object);
            case regexpTag:
              return cloneRegExp(object);
            case setTag:
              return new Ctor();
            case symbolTag:
              return cloneSymbol(object);
          }
        }
        function insertWrapDetails(source, details) {
          var length = details.length;
          if (!length) {
            return source;
          }
          var lastIndex = length - 1;
          details[lastIndex] = (length > 1 ? "& " : "") + details[lastIndex];
          details = details.join(length > 2 ? ", " : " ");
          return source.replace(reWrapComment, "{\n/* [wrapped with " + details + "] */\n");
        }
        function isFlattenable(value) {
          return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
        }
        function isIndex(value, length) {
          var type = typeof value;
          length = length == null ? MAX_SAFE_INTEGER : length;
          return !!length && (type == "number" || type != "symbol" && reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
        }
        function isIterateeCall(value, index, object) {
          if (!isObject(object)) {
            return false;
          }
          var type = typeof index;
          if (type == "number" ? isArrayLike(object) && isIndex(index, object.length) : type == "string" && index in object) {
            return eq(object[index], value);
          }
          return false;
        }
        function isKey(value, object) {
          if (isArray(value)) {
            return false;
          }
          var type = typeof value;
          if (type == "number" || type == "symbol" || type == "boolean" || value == null || isSymbol(value)) {
            return true;
          }
          return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object2(object);
        }
        function isKeyable(value) {
          var type = typeof value;
          return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
        }
        function isLaziable(func) {
          var funcName = getFuncName(func), other = lodash[funcName];
          if (typeof other != "function" || !(funcName in LazyWrapper.prototype)) {
            return false;
          }
          if (func === other) {
            return true;
          }
          var data = getData(other);
          return !!data && func === data[0];
        }
        function isMasked(func) {
          return !!maskSrcKey && maskSrcKey in func;
        }
        var isMaskable = coreJsData ? isFunction : stubFalse;
        function isPrototype(value) {
          var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto;
          return value === proto;
        }
        function isStrictComparable(value) {
          return value === value && !isObject(value);
        }
        function matchesStrictComparable(key, srcValue) {
          return function(object) {
            if (object == null) {
              return false;
            }
            return object[key] === srcValue && (srcValue !== undefined2 || key in Object2(object));
          };
        }
        function memoizeCapped(func) {
          var result2 = memoize(func, function(key) {
            if (cache.size === MAX_MEMOIZE_SIZE) {
              cache.clear();
            }
            return key;
          });
          var cache = result2.cache;
          return result2;
        }
        function mergeData(data, source) {
          var bitmask = data[1], srcBitmask = source[1], newBitmask = bitmask | srcBitmask, isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);
          var isCombo = srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_CURRY_FLAG || srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_REARG_FLAG && data[7].length <= source[8] || srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG) && source[7].length <= source[8] && bitmask == WRAP_CURRY_FLAG;
          if (!(isCommon || isCombo)) {
            return data;
          }
          if (srcBitmask & WRAP_BIND_FLAG) {
            data[2] = source[2];
            newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
          }
          var value = source[3];
          if (value) {
            var partials = data[3];
            data[3] = partials ? composeArgs(partials, value, source[4]) : value;
            data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
          }
          value = source[5];
          if (value) {
            partials = data[5];
            data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
            data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
          }
          value = source[7];
          if (value) {
            data[7] = value;
          }
          if (srcBitmask & WRAP_ARY_FLAG) {
            data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
          }
          if (data[9] == null) {
            data[9] = source[9];
          }
          data[0] = source[0];
          data[1] = newBitmask;
          return data;
        }
        function nativeKeysIn(object) {
          var result2 = [];
          if (object != null) {
            for (var key in Object2(object)) {
              result2.push(key);
            }
          }
          return result2;
        }
        function objectToString(value) {
          return nativeObjectToString.call(value);
        }
        function overRest(func, start2, transform2) {
          start2 = nativeMax(start2 === undefined2 ? func.length - 1 : start2, 0);
          return function() {
            var args = arguments, index = -1, length = nativeMax(args.length - start2, 0), array = Array2(length);
            while (++index < length) {
              array[index] = args[start2 + index];
            }
            index = -1;
            var otherArgs = Array2(start2 + 1);
            while (++index < start2) {
              otherArgs[index] = args[index];
            }
            otherArgs[start2] = transform2(array);
            return apply(func, this, otherArgs);
          };
        }
        function parent(object, path) {
          return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
        }
        function reorder(array, indexes) {
          var arrLength = array.length, length = nativeMin(indexes.length, arrLength), oldArray = copyArray(array);
          while (length--) {
            var index = indexes[length];
            array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined2;
          }
          return array;
        }
        function safeGet(object, key) {
          if (key === "constructor" && typeof object[key] === "function") {
            return;
          }
          if (key == "__proto__") {
            return;
          }
          return object[key];
        }
        var setData = shortOut(baseSetData);
        var setTimeout2 = ctxSetTimeout || function(func, wait) {
          return root.setTimeout(func, wait);
        };
        var setToString = shortOut(baseSetToString);
        function setWrapToString(wrapper, reference2, bitmask) {
          var source = reference2 + "";
          return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
        }
        function shortOut(func) {
          var count = 0, lastCalled = 0;
          return function() {
            var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
            lastCalled = stamp;
            if (remaining > 0) {
              if (++count >= HOT_COUNT) {
                return arguments[0];
              }
            } else {
              count = 0;
            }
            return func.apply(undefined2, arguments);
          };
        }
        function shuffleSelf(array, size2) {
          var index = -1, length = array.length, lastIndex = length - 1;
          size2 = size2 === undefined2 ? length : size2;
          while (++index < size2) {
            var rand = baseRandom(index, lastIndex), value = array[rand];
            array[rand] = array[index];
            array[index] = value;
          }
          array.length = size2;
          return array;
        }
        var stringToPath = memoizeCapped(function(string) {
          var result2 = [];
          if (string.charCodeAt(0) === 46) {
            result2.push("");
          }
          string.replace(rePropName, function(match, number, quote, subString) {
            result2.push(quote ? subString.replace(reEscapeChar, "$1") : number || match);
          });
          return result2;
        });
        function toKey(value) {
          if (typeof value == "string" || isSymbol(value)) {
            return value;
          }
          var result2 = value + "";
          return result2 == "0" && 1 / value == -INFINITY ? "-0" : result2;
        }
        function toSource(func) {
          if (func != null) {
            try {
              return funcToString.call(func);
            } catch (e) {
            }
            try {
              return func + "";
            } catch (e) {
            }
          }
          return "";
        }
        function updateWrapDetails(details, bitmask) {
          arrayEach(wrapFlags, function(pair) {
            var value = "_." + pair[0];
            if (bitmask & pair[1] && !arrayIncludes(details, value)) {
              details.push(value);
            }
          });
          return details.sort();
        }
        function wrapperClone(wrapper) {
          if (wrapper instanceof LazyWrapper) {
            return wrapper.clone();
          }
          var result2 = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
          result2.__actions__ = copyArray(wrapper.__actions__);
          result2.__index__ = wrapper.__index__;
          result2.__values__ = wrapper.__values__;
          return result2;
        }
        function chunk(array, size2, guard) {
          if (guard ? isIterateeCall(array, size2, guard) : size2 === undefined2) {
            size2 = 1;
          } else {
            size2 = nativeMax(toInteger(size2), 0);
          }
          var length = array == null ? 0 : array.length;
          if (!length || size2 < 1) {
            return [];
          }
          var index = 0, resIndex = 0, result2 = Array2(nativeCeil(length / size2));
          while (index < length) {
            result2[resIndex++] = baseSlice(array, index, index += size2);
          }
          return result2;
        }
        function compact(array) {
          var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result2 = [];
          while (++index < length) {
            var value = array[index];
            if (value) {
              result2[resIndex++] = value;
            }
          }
          return result2;
        }
        function concat() {
          var length = arguments.length;
          if (!length) {
            return [];
          }
          var args = Array2(length - 1), array = arguments[0], index = length;
          while (index--) {
            args[index - 1] = arguments[index];
          }
          return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
        }
        var difference = baseRest(function(array, values2) {
          return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values2, 1, isArrayLikeObject, true)) : [];
        });
        var differenceBy = baseRest(function(array, values2) {
          var iteratee2 = last(values2);
          if (isArrayLikeObject(iteratee2)) {
            iteratee2 = undefined2;
          }
          return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values2, 1, isArrayLikeObject, true), getIteratee(iteratee2, 2)) : [];
        });
        var differenceWith = baseRest(function(array, values2) {
          var comparator = last(values2);
          if (isArrayLikeObject(comparator)) {
            comparator = undefined2;
          }
          return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values2, 1, isArrayLikeObject, true), undefined2, comparator) : [];
        });
        function drop(array, n, guard) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          n = guard || n === undefined2 ? 1 : toInteger(n);
          return baseSlice(array, n < 0 ? 0 : n, length);
        }
        function dropRight(array, n, guard) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          n = guard || n === undefined2 ? 1 : toInteger(n);
          n = length - n;
          return baseSlice(array, 0, n < 0 ? 0 : n);
        }
        function dropRightWhile(array, predicate) {
          return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true, true) : [];
        }
        function dropWhile(array, predicate) {
          return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true) : [];
        }
        function fill(array, value, start2, end2) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          if (start2 && typeof start2 != "number" && isIterateeCall(array, value, start2)) {
            start2 = 0;
            end2 = length;
          }
          return baseFill(array, value, start2, end2);
        }
        function findIndex(array, predicate, fromIndex) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return -1;
          }
          var index = fromIndex == null ? 0 : toInteger(fromIndex);
          if (index < 0) {
            index = nativeMax(length + index, 0);
          }
          return baseFindIndex(array, getIteratee(predicate, 3), index);
        }
        function findLastIndex(array, predicate, fromIndex) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return -1;
          }
          var index = length - 1;
          if (fromIndex !== undefined2) {
            index = toInteger(fromIndex);
            index = fromIndex < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
          }
          return baseFindIndex(array, getIteratee(predicate, 3), index, true);
        }
        function flatten(array) {
          var length = array == null ? 0 : array.length;
          return length ? baseFlatten(array, 1) : [];
        }
        function flattenDeep(array) {
          var length = array == null ? 0 : array.length;
          return length ? baseFlatten(array, INFINITY) : [];
        }
        function flattenDepth(array, depth) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          depth = depth === undefined2 ? 1 : toInteger(depth);
          return baseFlatten(array, depth);
        }
        function fromPairs(pairs) {
          var index = -1, length = pairs == null ? 0 : pairs.length, result2 = {};
          while (++index < length) {
            var pair = pairs[index];
            result2[pair[0]] = pair[1];
          }
          return result2;
        }
        function head(array) {
          return array && array.length ? array[0] : undefined2;
        }
        function indexOf(array, value, fromIndex) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return -1;
          }
          var index = fromIndex == null ? 0 : toInteger(fromIndex);
          if (index < 0) {
            index = nativeMax(length + index, 0);
          }
          return baseIndexOf(array, value, index);
        }
        function initial(array) {
          var length = array == null ? 0 : array.length;
          return length ? baseSlice(array, 0, -1) : [];
        }
        var intersection = baseRest(function(arrays) {
          var mapped = arrayMap(arrays, castArrayLikeObject);
          return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped) : [];
        });
        var intersectionBy = baseRest(function(arrays) {
          var iteratee2 = last(arrays), mapped = arrayMap(arrays, castArrayLikeObject);
          if (iteratee2 === last(mapped)) {
            iteratee2 = undefined2;
          } else {
            mapped.pop();
          }
          return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, getIteratee(iteratee2, 2)) : [];
        });
        var intersectionWith = baseRest(function(arrays) {
          var comparator = last(arrays), mapped = arrayMap(arrays, castArrayLikeObject);
          comparator = typeof comparator == "function" ? comparator : undefined2;
          if (comparator) {
            mapped.pop();
          }
          return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, undefined2, comparator) : [];
        });
        function join(array, separator) {
          return array == null ? "" : nativeJoin.call(array, separator);
        }
        function last(array) {
          var length = array == null ? 0 : array.length;
          return length ? array[length - 1] : undefined2;
        }
        function lastIndexOf(array, value, fromIndex) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return -1;
          }
          var index = length;
          if (fromIndex !== undefined2) {
            index = toInteger(fromIndex);
            index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
          }
          return value === value ? strictLastIndexOf(array, value, index) : baseFindIndex(array, baseIsNaN, index, true);
        }
        function nth(array, n) {
          return array && array.length ? baseNth(array, toInteger(n)) : undefined2;
        }
        var pull = baseRest(pullAll);
        function pullAll(array, values2) {
          return array && array.length && values2 && values2.length ? basePullAll(array, values2) : array;
        }
        function pullAllBy(array, values2, iteratee2) {
          return array && array.length && values2 && values2.length ? basePullAll(array, values2, getIteratee(iteratee2, 2)) : array;
        }
        function pullAllWith(array, values2, comparator) {
          return array && array.length && values2 && values2.length ? basePullAll(array, values2, undefined2, comparator) : array;
        }
        var pullAt = flatRest(function(array, indexes) {
          var length = array == null ? 0 : array.length, result2 = baseAt(array, indexes);
          basePullAt(array, arrayMap(indexes, function(index) {
            return isIndex(index, length) ? +index : index;
          }).sort(compareAscending));
          return result2;
        });
        function remove(array, predicate) {
          var result2 = [];
          if (!(array && array.length)) {
            return result2;
          }
          var index = -1, indexes = [], length = array.length;
          predicate = getIteratee(predicate, 3);
          while (++index < length) {
            var value = array[index];
            if (predicate(value, index, array)) {
              result2.push(value);
              indexes.push(index);
            }
          }
          basePullAt(array, indexes);
          return result2;
        }
        function reverse(array) {
          return array == null ? array : nativeReverse.call(array);
        }
        function slice(array, start2, end2) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          if (end2 && typeof end2 != "number" && isIterateeCall(array, start2, end2)) {
            start2 = 0;
            end2 = length;
          } else {
            start2 = start2 == null ? 0 : toInteger(start2);
            end2 = end2 === undefined2 ? length : toInteger(end2);
          }
          return baseSlice(array, start2, end2);
        }
        function sortedIndex(array, value) {
          return baseSortedIndex(array, value);
        }
        function sortedIndexBy(array, value, iteratee2) {
          return baseSortedIndexBy(array, value, getIteratee(iteratee2, 2));
        }
        function sortedIndexOf(array, value) {
          var length = array == null ? 0 : array.length;
          if (length) {
            var index = baseSortedIndex(array, value);
            if (index < length && eq(array[index], value)) {
              return index;
            }
          }
          return -1;
        }
        function sortedLastIndex(array, value) {
          return baseSortedIndex(array, value, true);
        }
        function sortedLastIndexBy(array, value, iteratee2) {
          return baseSortedIndexBy(array, value, getIteratee(iteratee2, 2), true);
        }
        function sortedLastIndexOf(array, value) {
          var length = array == null ? 0 : array.length;
          if (length) {
            var index = baseSortedIndex(array, value, true) - 1;
            if (eq(array[index], value)) {
              return index;
            }
          }
          return -1;
        }
        function sortedUniq(array) {
          return array && array.length ? baseSortedUniq(array) : [];
        }
        function sortedUniqBy(array, iteratee2) {
          return array && array.length ? baseSortedUniq(array, getIteratee(iteratee2, 2)) : [];
        }
        function tail(array) {
          var length = array == null ? 0 : array.length;
          return length ? baseSlice(array, 1, length) : [];
        }
        function take(array, n, guard) {
          if (!(array && array.length)) {
            return [];
          }
          n = guard || n === undefined2 ? 1 : toInteger(n);
          return baseSlice(array, 0, n < 0 ? 0 : n);
        }
        function takeRight(array, n, guard) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          n = guard || n === undefined2 ? 1 : toInteger(n);
          n = length - n;
          return baseSlice(array, n < 0 ? 0 : n, length);
        }
        function takeRightWhile(array, predicate) {
          return array && array.length ? baseWhile(array, getIteratee(predicate, 3), false, true) : [];
        }
        function takeWhile(array, predicate) {
          return array && array.length ? baseWhile(array, getIteratee(predicate, 3)) : [];
        }
        var union = baseRest(function(arrays) {
          return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
        });
        var unionBy = baseRest(function(arrays) {
          var iteratee2 = last(arrays);
          if (isArrayLikeObject(iteratee2)) {
            iteratee2 = undefined2;
          }
          return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee2, 2));
        });
        var unionWith = baseRest(function(arrays) {
          var comparator = last(arrays);
          comparator = typeof comparator == "function" ? comparator : undefined2;
          return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined2, comparator);
        });
        function uniq(array) {
          return array && array.length ? baseUniq(array) : [];
        }
        function uniqBy(array, iteratee2) {
          return array && array.length ? baseUniq(array, getIteratee(iteratee2, 2)) : [];
        }
        function uniqWith(array, comparator) {
          comparator = typeof comparator == "function" ? comparator : undefined2;
          return array && array.length ? baseUniq(array, undefined2, comparator) : [];
        }
        function unzip(array) {
          if (!(array && array.length)) {
            return [];
          }
          var length = 0;
          array = arrayFilter(array, function(group) {
            if (isArrayLikeObject(group)) {
              length = nativeMax(group.length, length);
              return true;
            }
          });
          return baseTimes(length, function(index) {
            return arrayMap(array, baseProperty(index));
          });
        }
        function unzipWith(array, iteratee2) {
          if (!(array && array.length)) {
            return [];
          }
          var result2 = unzip(array);
          if (iteratee2 == null) {
            return result2;
          }
          return arrayMap(result2, function(group) {
            return apply(iteratee2, undefined2, group);
          });
        }
        var without = baseRest(function(array, values2) {
          return isArrayLikeObject(array) ? baseDifference(array, values2) : [];
        });
        var xor2 = baseRest(function(arrays) {
          return baseXor(arrayFilter(arrays, isArrayLikeObject));
        });
        var xorBy = baseRest(function(arrays) {
          var iteratee2 = last(arrays);
          if (isArrayLikeObject(iteratee2)) {
            iteratee2 = undefined2;
          }
          return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee2, 2));
        });
        var xorWith = baseRest(function(arrays) {
          var comparator = last(arrays);
          comparator = typeof comparator == "function" ? comparator : undefined2;
          return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined2, comparator);
        });
        var zip = baseRest(unzip);
        function zipObject(props, values2) {
          return baseZipObject(props || [], values2 || [], assignValue);
        }
        function zipObjectDeep(props, values2) {
          return baseZipObject(props || [], values2 || [], baseSet);
        }
        var zipWith = baseRest(function(arrays) {
          var length = arrays.length, iteratee2 = length > 1 ? arrays[length - 1] : undefined2;
          iteratee2 = typeof iteratee2 == "function" ? (arrays.pop(), iteratee2) : undefined2;
          return unzipWith(arrays, iteratee2);
        });
        function chain(value) {
          var result2 = lodash(value);
          result2.__chain__ = true;
          return result2;
        }
        function tap(value, interceptor) {
          interceptor(value);
          return value;
        }
        function thru(value, interceptor) {
          return interceptor(value);
        }
        var wrapperAt = flatRest(function(paths) {
          var length = paths.length, start2 = length ? paths[0] : 0, value = this.__wrapped__, interceptor = function(object) {
            return baseAt(object, paths);
          };
          if (length > 1 || this.__actions__.length || !(value instanceof LazyWrapper) || !isIndex(start2)) {
            return this.thru(interceptor);
          }
          value = value.slice(start2, +start2 + (length ? 1 : 0));
          value.__actions__.push({
            "func": thru,
            "args": [interceptor],
            "thisArg": undefined2
          });
          return new LodashWrapper(value, this.__chain__).thru(function(array) {
            if (length && !array.length) {
              array.push(undefined2);
            }
            return array;
          });
        });
        function wrapperChain() {
          return chain(this);
        }
        function wrapperCommit() {
          return new LodashWrapper(this.value(), this.__chain__);
        }
        function wrapperNext() {
          if (this.__values__ === undefined2) {
            this.__values__ = toArray(this.value());
          }
          var done = this.__index__ >= this.__values__.length, value = done ? undefined2 : this.__values__[this.__index__++];
          return { "done": done, "value": value };
        }
        function wrapperToIterator() {
          return this;
        }
        function wrapperPlant(value) {
          var result2, parent2 = this;
          while (parent2 instanceof baseLodash) {
            var clone2 = wrapperClone(parent2);
            clone2.__index__ = 0;
            clone2.__values__ = undefined2;
            if (result2) {
              previous.__wrapped__ = clone2;
            } else {
              result2 = clone2;
            }
            var previous = clone2;
            parent2 = parent2.__wrapped__;
          }
          previous.__wrapped__ = value;
          return result2;
        }
        function wrapperReverse() {
          var value = this.__wrapped__;
          if (value instanceof LazyWrapper) {
            var wrapped = value;
            if (this.__actions__.length) {
              wrapped = new LazyWrapper(this);
            }
            wrapped = wrapped.reverse();
            wrapped.__actions__.push({
              "func": thru,
              "args": [reverse],
              "thisArg": undefined2
            });
            return new LodashWrapper(wrapped, this.__chain__);
          }
          return this.thru(reverse);
        }
        function wrapperValue() {
          return baseWrapperValue(this.__wrapped__, this.__actions__);
        }
        var countBy = createAggregator(function(result2, value, key) {
          if (hasOwnProperty.call(result2, key)) {
            ++result2[key];
          } else {
            baseAssignValue(result2, key, 1);
          }
        });
        function every(collection, predicate, guard) {
          var func = isArray(collection) ? arrayEvery : baseEvery;
          if (guard && isIterateeCall(collection, predicate, guard)) {
            predicate = undefined2;
          }
          return func(collection, getIteratee(predicate, 3));
        }
        function filter(collection, predicate) {
          var func = isArray(collection) ? arrayFilter : baseFilter;
          return func(collection, getIteratee(predicate, 3));
        }
        var find = createFind(findIndex);
        var findLast = createFind(findLastIndex);
        function flatMap(collection, iteratee2) {
          return baseFlatten(map(collection, iteratee2), 1);
        }
        function flatMapDeep(collection, iteratee2) {
          return baseFlatten(map(collection, iteratee2), INFINITY);
        }
        function flatMapDepth(collection, iteratee2, depth) {
          depth = depth === undefined2 ? 1 : toInteger(depth);
          return baseFlatten(map(collection, iteratee2), depth);
        }
        function forEach(collection, iteratee2) {
          var func = isArray(collection) ? arrayEach : baseEach;
          return func(collection, getIteratee(iteratee2, 3));
        }
        function forEachRight(collection, iteratee2) {
          var func = isArray(collection) ? arrayEachRight : baseEachRight;
          return func(collection, getIteratee(iteratee2, 3));
        }
        var groupBy = createAggregator(function(result2, value, key) {
          if (hasOwnProperty.call(result2, key)) {
            result2[key].push(value);
          } else {
            baseAssignValue(result2, key, [value]);
          }
        });
        function includes(collection, value, fromIndex, guard) {
          collection = isArrayLike(collection) ? collection : values(collection);
          fromIndex = fromIndex && !guard ? toInteger(fromIndex) : 0;
          var length = collection.length;
          if (fromIndex < 0) {
            fromIndex = nativeMax(length + fromIndex, 0);
          }
          return isString(collection) ? fromIndex <= length && collection.indexOf(value, fromIndex) > -1 : !!length && baseIndexOf(collection, value, fromIndex) > -1;
        }
        var invokeMap = baseRest(function(collection, path, args) {
          var index = -1, isFunc = typeof path == "function", result2 = isArrayLike(collection) ? Array2(collection.length) : [];
          baseEach(collection, function(value) {
            result2[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
          });
          return result2;
        });
        var keyBy = createAggregator(function(result2, value, key) {
          baseAssignValue(result2, key, value);
        });
        function map(collection, iteratee2) {
          var func = isArray(collection) ? arrayMap : baseMap;
          return func(collection, getIteratee(iteratee2, 3));
        }
        function orderBy(collection, iteratees, orders, guard) {
          if (collection == null) {
            return [];
          }
          if (!isArray(iteratees)) {
            iteratees = iteratees == null ? [] : [iteratees];
          }
          orders = guard ? undefined2 : orders;
          if (!isArray(orders)) {
            orders = orders == null ? [] : [orders];
          }
          return baseOrderBy(collection, iteratees, orders);
        }
        var partition = createAggregator(function(result2, value, key) {
          result2[key ? 0 : 1].push(value);
        }, function() {
          return [[], []];
        });
        function reduce(collection, iteratee2, accumulator) {
          var func = isArray(collection) ? arrayReduce : baseReduce, initAccum = arguments.length < 3;
          return func(collection, getIteratee(iteratee2, 4), accumulator, initAccum, baseEach);
        }
        function reduceRight(collection, iteratee2, accumulator) {
          var func = isArray(collection) ? arrayReduceRight : baseReduce, initAccum = arguments.length < 3;
          return func(collection, getIteratee(iteratee2, 4), accumulator, initAccum, baseEachRight);
        }
        function reject(collection, predicate) {
          var func = isArray(collection) ? arrayFilter : baseFilter;
          return func(collection, negate(getIteratee(predicate, 3)));
        }
        function sample(collection) {
          var func = isArray(collection) ? arraySample : baseSample;
          return func(collection);
        }
        function sampleSize(collection, n, guard) {
          if (guard ? isIterateeCall(collection, n, guard) : n === undefined2) {
            n = 1;
          } else {
            n = toInteger(n);
          }
          var func = isArray(collection) ? arraySampleSize : baseSampleSize;
          return func(collection, n);
        }
        function shuffle(collection) {
          var func = isArray(collection) ? arrayShuffle : baseShuffle;
          return func(collection);
        }
        function size(collection) {
          if (collection == null) {
            return 0;
          }
          if (isArrayLike(collection)) {
            return isString(collection) ? stringSize(collection) : collection.length;
          }
          var tag = getTag(collection);
          if (tag == mapTag || tag == setTag) {
            return collection.size;
          }
          return baseKeys(collection).length;
        }
        function some(collection, predicate, guard) {
          var func = isArray(collection) ? arraySome : baseSome;
          if (guard && isIterateeCall(collection, predicate, guard)) {
            predicate = undefined2;
          }
          return func(collection, getIteratee(predicate, 3));
        }
        var sortBy = baseRest(function(collection, iteratees) {
          if (collection == null) {
            return [];
          }
          var length = iteratees.length;
          if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
            iteratees = [];
          } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
            iteratees = [iteratees[0]];
          }
          return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
        });
        var now = ctxNow || function() {
          return root.Date.now();
        };
        function after(n, func) {
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          n = toInteger(n);
          return function() {
            if (--n < 1) {
              return func.apply(this, arguments);
            }
          };
        }
        function ary(func, n, guard) {
          n = guard ? undefined2 : n;
          n = func && n == null ? func.length : n;
          return createWrap(func, WRAP_ARY_FLAG, undefined2, undefined2, undefined2, undefined2, n);
        }
        function before(n, func) {
          var result2;
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          n = toInteger(n);
          return function() {
            if (--n > 0) {
              result2 = func.apply(this, arguments);
            }
            if (n <= 1) {
              func = undefined2;
            }
            return result2;
          };
        }
        var bind = baseRest(function(func, thisArg, partials) {
          var bitmask = WRAP_BIND_FLAG;
          if (partials.length) {
            var holders = replaceHolders(partials, getHolder(bind));
            bitmask |= WRAP_PARTIAL_FLAG;
          }
          return createWrap(func, bitmask, thisArg, partials, holders);
        });
        var bindKey = baseRest(function(object, key, partials) {
          var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
          if (partials.length) {
            var holders = replaceHolders(partials, getHolder(bindKey));
            bitmask |= WRAP_PARTIAL_FLAG;
          }
          return createWrap(key, bitmask, object, partials, holders);
        });
        function curry(func, arity, guard) {
          arity = guard ? undefined2 : arity;
          var result2 = createWrap(func, WRAP_CURRY_FLAG, undefined2, undefined2, undefined2, undefined2, undefined2, arity);
          result2.placeholder = curry.placeholder;
          return result2;
        }
        function curryRight(func, arity, guard) {
          arity = guard ? undefined2 : arity;
          var result2 = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined2, undefined2, undefined2, undefined2, undefined2, arity);
          result2.placeholder = curryRight.placeholder;
          return result2;
        }
        function debounce2(func, wait, options) {
          var lastArgs, lastThis, maxWait, result2, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          wait = toNumber(wait) || 0;
          if (isObject(options)) {
            leading = !!options.leading;
            maxing = "maxWait" in options;
            maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
            trailing = "trailing" in options ? !!options.trailing : trailing;
          }
          function invokeFunc(time) {
            var args = lastArgs, thisArg = lastThis;
            lastArgs = lastThis = undefined2;
            lastInvokeTime = time;
            result2 = func.apply(thisArg, args);
            return result2;
          }
          function leadingEdge(time) {
            lastInvokeTime = time;
            timerId = setTimeout2(timerExpired, wait);
            return leading ? invokeFunc(time) : result2;
          }
          function remainingWait(time) {
            var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
            return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
          }
          function shouldInvoke(time) {
            var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
            return lastCallTime === undefined2 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
          }
          function timerExpired() {
            var time = now();
            if (shouldInvoke(time)) {
              return trailingEdge(time);
            }
            timerId = setTimeout2(timerExpired, remainingWait(time));
          }
          function trailingEdge(time) {
            timerId = undefined2;
            if (trailing && lastArgs) {
              return invokeFunc(time);
            }
            lastArgs = lastThis = undefined2;
            return result2;
          }
          function cancel() {
            if (timerId !== undefined2) {
              clearTimeout(timerId);
            }
            lastInvokeTime = 0;
            lastArgs = lastCallTime = lastThis = timerId = undefined2;
          }
          function flush() {
            return timerId === undefined2 ? result2 : trailingEdge(now());
          }
          function debounced() {
            var time = now(), isInvoking = shouldInvoke(time);
            lastArgs = arguments;
            lastThis = this;
            lastCallTime = time;
            if (isInvoking) {
              if (timerId === undefined2) {
                return leadingEdge(lastCallTime);
              }
              if (maxing) {
                clearTimeout(timerId);
                timerId = setTimeout2(timerExpired, wait);
                return invokeFunc(lastCallTime);
              }
            }
            if (timerId === undefined2) {
              timerId = setTimeout2(timerExpired, wait);
            }
            return result2;
          }
          debounced.cancel = cancel;
          debounced.flush = flush;
          return debounced;
        }
        var defer = baseRest(function(func, args) {
          return baseDelay(func, 1, args);
        });
        var delay = baseRest(function(func, wait, args) {
          return baseDelay(func, toNumber(wait) || 0, args);
        });
        function flip2(func) {
          return createWrap(func, WRAP_FLIP_FLAG);
        }
        function memoize(func, resolver) {
          if (typeof func != "function" || resolver != null && typeof resolver != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          var memoized = function() {
            var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
            if (cache.has(key)) {
              return cache.get(key);
            }
            var result2 = func.apply(this, args);
            memoized.cache = cache.set(key, result2) || cache;
            return result2;
          };
          memoized.cache = new (memoize.Cache || MapCache)();
          return memoized;
        }
        memoize.Cache = MapCache;
        function negate(predicate) {
          if (typeof predicate != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          return function() {
            var args = arguments;
            switch (args.length) {
              case 0:
                return !predicate.call(this);
              case 1:
                return !predicate.call(this, args[0]);
              case 2:
                return !predicate.call(this, args[0], args[1]);
              case 3:
                return !predicate.call(this, args[0], args[1], args[2]);
            }
            return !predicate.apply(this, args);
          };
        }
        function once(func) {
          return before(2, func);
        }
        var overArgs = castRest(function(func, transforms) {
          transforms = transforms.length == 1 && isArray(transforms[0]) ? arrayMap(transforms[0], baseUnary(getIteratee())) : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));
          var funcsLength = transforms.length;
          return baseRest(function(args) {
            var index = -1, length = nativeMin(args.length, funcsLength);
            while (++index < length) {
              args[index] = transforms[index].call(this, args[index]);
            }
            return apply(func, this, args);
          });
        });
        var partial = baseRest(function(func, partials) {
          var holders = replaceHolders(partials, getHolder(partial));
          return createWrap(func, WRAP_PARTIAL_FLAG, undefined2, partials, holders);
        });
        var partialRight = baseRest(function(func, partials) {
          var holders = replaceHolders(partials, getHolder(partialRight));
          return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined2, partials, holders);
        });
        var rearg = flatRest(function(func, indexes) {
          return createWrap(func, WRAP_REARG_FLAG, undefined2, undefined2, undefined2, indexes);
        });
        function rest(func, start2) {
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          start2 = start2 === undefined2 ? start2 : toInteger(start2);
          return baseRest(func, start2);
        }
        function spread(func, start2) {
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          start2 = start2 == null ? 0 : nativeMax(toInteger(start2), 0);
          return baseRest(function(args) {
            var array = args[start2], otherArgs = castSlice(args, 0, start2);
            if (array) {
              arrayPush(otherArgs, array);
            }
            return apply(func, this, otherArgs);
          });
        }
        function throttle(func, wait, options) {
          var leading = true, trailing = true;
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          if (isObject(options)) {
            leading = "leading" in options ? !!options.leading : leading;
            trailing = "trailing" in options ? !!options.trailing : trailing;
          }
          return debounce2(func, wait, {
            "leading": leading,
            "maxWait": wait,
            "trailing": trailing
          });
        }
        function unary(func) {
          return ary(func, 1);
        }
        function wrap(value, wrapper) {
          return partial(castFunction(wrapper), value);
        }
        function castArray() {
          if (!arguments.length) {
            return [];
          }
          var value = arguments[0];
          return isArray(value) ? value : [value];
        }
        function clone(value) {
          return baseClone(value, CLONE_SYMBOLS_FLAG);
        }
        function cloneWith(value, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
        }
        function cloneDeep(value) {
          return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
        }
        function cloneDeepWith(value, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
        }
        function conformsTo(object, source) {
          return source == null || baseConformsTo(object, source, keys(source));
        }
        function eq(value, other) {
          return value === other || value !== value && other !== other;
        }
        var gt = createRelationalOperation(baseGt);
        var gte = createRelationalOperation(function(value, other) {
          return value >= other;
        });
        var isArguments = baseIsArguments(function() {
          return arguments;
        }()) ? baseIsArguments : function(value) {
          return isObjectLike(value) && hasOwnProperty.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
        };
        var isArray = Array2.isArray;
        var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;
        function isArrayLike(value) {
          return value != null && isLength(value.length) && !isFunction(value);
        }
        function isArrayLikeObject(value) {
          return isObjectLike(value) && isArrayLike(value);
        }
        function isBoolean(value) {
          return value === true || value === false || isObjectLike(value) && baseGetTag(value) == boolTag;
        }
        var isBuffer = nativeIsBuffer || stubFalse;
        var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;
        function isElement2(value) {
          return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
        }
        function isEmpty(value) {
          if (value == null) {
            return true;
          }
          if (isArrayLike(value) && (isArray(value) || typeof value == "string" || typeof value.splice == "function" || isBuffer(value) || isTypedArray(value) || isArguments(value))) {
            return !value.length;
          }
          var tag = getTag(value);
          if (tag == mapTag || tag == setTag) {
            return !value.size;
          }
          if (isPrototype(value)) {
            return !baseKeys(value).length;
          }
          for (var key in value) {
            if (hasOwnProperty.call(value, key)) {
              return false;
            }
          }
          return true;
        }
        function isEqual(value, other) {
          return baseIsEqual(value, other);
        }
        function isEqualWith(value, other, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          var result2 = customizer ? customizer(value, other) : undefined2;
          return result2 === undefined2 ? baseIsEqual(value, other, undefined2, customizer) : !!result2;
        }
        function isError(value) {
          if (!isObjectLike(value)) {
            return false;
          }
          var tag = baseGetTag(value);
          return tag == errorTag || tag == domExcTag || typeof value.message == "string" && typeof value.name == "string" && !isPlainObject(value);
        }
        function isFinite(value) {
          return typeof value == "number" && nativeIsFinite(value);
        }
        function isFunction(value) {
          if (!isObject(value)) {
            return false;
          }
          var tag = baseGetTag(value);
          return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
        }
        function isInteger(value) {
          return typeof value == "number" && value == toInteger(value);
        }
        function isLength(value) {
          return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
        }
        function isObject(value) {
          var type = typeof value;
          return value != null && (type == "object" || type == "function");
        }
        function isObjectLike(value) {
          return value != null && typeof value == "object";
        }
        var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;
        function isMatch(object, source) {
          return object === source || baseIsMatch(object, source, getMatchData(source));
        }
        function isMatchWith(object, source, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          return baseIsMatch(object, source, getMatchData(source), customizer);
        }
        function isNaN(value) {
          return isNumber(value) && value != +value;
        }
        function isNative(value) {
          if (isMaskable(value)) {
            throw new Error2(CORE_ERROR_TEXT);
          }
          return baseIsNative(value);
        }
        function isNull(value) {
          return value === null;
        }
        function isNil(value) {
          return value == null;
        }
        function isNumber(value) {
          return typeof value == "number" || isObjectLike(value) && baseGetTag(value) == numberTag;
        }
        function isPlainObject(value) {
          if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
            return false;
          }
          var proto = getPrototype(value);
          if (proto === null) {
            return true;
          }
          var Ctor = hasOwnProperty.call(proto, "constructor") && proto.constructor;
          return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
        }
        var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;
        function isSafeInteger(value) {
          return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
        }
        var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
        function isString(value) {
          return typeof value == "string" || !isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag;
        }
        function isSymbol(value) {
          return typeof value == "symbol" || isObjectLike(value) && baseGetTag(value) == symbolTag;
        }
        var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
        function isUndefined(value) {
          return value === undefined2;
        }
        function isWeakMap(value) {
          return isObjectLike(value) && getTag(value) == weakMapTag;
        }
        function isWeakSet(value) {
          return isObjectLike(value) && baseGetTag(value) == weakSetTag;
        }
        var lt = createRelationalOperation(baseLt);
        var lte = createRelationalOperation(function(value, other) {
          return value <= other;
        });
        function toArray(value) {
          if (!value) {
            return [];
          }
          if (isArrayLike(value)) {
            return isString(value) ? stringToArray(value) : copyArray(value);
          }
          if (symIterator && value[symIterator]) {
            return iteratorToArray(value[symIterator]());
          }
          var tag = getTag(value), func = tag == mapTag ? mapToArray : tag == setTag ? setToArray : values;
          return func(value);
        }
        function toFinite(value) {
          if (!value) {
            return value === 0 ? value : 0;
          }
          value = toNumber(value);
          if (value === INFINITY || value === -INFINITY) {
            var sign = value < 0 ? -1 : 1;
            return sign * MAX_INTEGER;
          }
          return value === value ? value : 0;
        }
        function toInteger(value) {
          var result2 = toFinite(value), remainder = result2 % 1;
          return result2 === result2 ? remainder ? result2 - remainder : result2 : 0;
        }
        function toLength(value) {
          return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
        }
        function toNumber(value) {
          if (typeof value == "number") {
            return value;
          }
          if (isSymbol(value)) {
            return NAN;
          }
          if (isObject(value)) {
            var other = typeof value.valueOf == "function" ? value.valueOf() : value;
            value = isObject(other) ? other + "" : other;
          }
          if (typeof value != "string") {
            return value === 0 ? value : +value;
          }
          value = baseTrim(value);
          var isBinary = reIsBinary.test(value);
          return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
        }
        function toPlainObject(value) {
          return copyObject(value, keysIn(value));
        }
        function toSafeInteger(value) {
          return value ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER) : value === 0 ? value : 0;
        }
        function toString(value) {
          return value == null ? "" : baseToString(value);
        }
        var assign = createAssigner(function(object, source) {
          if (isPrototype(source) || isArrayLike(source)) {
            copyObject(source, keys(source), object);
            return;
          }
          for (var key in source) {
            if (hasOwnProperty.call(source, key)) {
              assignValue(object, key, source[key]);
            }
          }
        });
        var assignIn = createAssigner(function(object, source) {
          copyObject(source, keysIn(source), object);
        });
        var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
          copyObject(source, keysIn(source), object, customizer);
        });
        var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
          copyObject(source, keys(source), object, customizer);
        });
        var at = flatRest(baseAt);
        function create(prototype, properties) {
          var result2 = baseCreate(prototype);
          return properties == null ? result2 : baseAssign(result2, properties);
        }
        var defaults = baseRest(function(object, sources) {
          object = Object2(object);
          var index = -1;
          var length = sources.length;
          var guard = length > 2 ? sources[2] : undefined2;
          if (guard && isIterateeCall(sources[0], sources[1], guard)) {
            length = 1;
          }
          while (++index < length) {
            var source = sources[index];
            var props = keysIn(source);
            var propsIndex = -1;
            var propsLength = props.length;
            while (++propsIndex < propsLength) {
              var key = props[propsIndex];
              var value = object[key];
              if (value === undefined2 || eq(value, objectProto[key]) && !hasOwnProperty.call(object, key)) {
                object[key] = source[key];
              }
            }
          }
          return object;
        });
        var defaultsDeep = baseRest(function(args) {
          args.push(undefined2, customDefaultsMerge);
          return apply(mergeWith, undefined2, args);
        });
        function findKey(object, predicate) {
          return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
        }
        function findLastKey(object, predicate) {
          return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
        }
        function forIn(object, iteratee2) {
          return object == null ? object : baseFor(object, getIteratee(iteratee2, 3), keysIn);
        }
        function forInRight(object, iteratee2) {
          return object == null ? object : baseForRight(object, getIteratee(iteratee2, 3), keysIn);
        }
        function forOwn(object, iteratee2) {
          return object && baseForOwn(object, getIteratee(iteratee2, 3));
        }
        function forOwnRight(object, iteratee2) {
          return object && baseForOwnRight(object, getIteratee(iteratee2, 3));
        }
        function functions(object) {
          return object == null ? [] : baseFunctions(object, keys(object));
        }
        function functionsIn(object) {
          return object == null ? [] : baseFunctions(object, keysIn(object));
        }
        function get(object, path, defaultValue) {
          var result2 = object == null ? undefined2 : baseGet(object, path);
          return result2 === undefined2 ? defaultValue : result2;
        }
        function has(object, path) {
          return object != null && hasPath(object, path, baseHas);
        }
        function hasIn(object, path) {
          return object != null && hasPath(object, path, baseHasIn);
        }
        var invert = createInverter(function(result2, value, key) {
          if (value != null && typeof value.toString != "function") {
            value = nativeObjectToString.call(value);
          }
          result2[value] = key;
        }, constant(identity));
        var invertBy = createInverter(function(result2, value, key) {
          if (value != null && typeof value.toString != "function") {
            value = nativeObjectToString.call(value);
          }
          if (hasOwnProperty.call(result2, value)) {
            result2[value].push(key);
          } else {
            result2[value] = [key];
          }
        }, getIteratee);
        var invoke = baseRest(baseInvoke);
        function keys(object) {
          return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
        }
        function keysIn(object) {
          return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
        }
        function mapKeys(object, iteratee2) {
          var result2 = {};
          iteratee2 = getIteratee(iteratee2, 3);
          baseForOwn(object, function(value, key, object2) {
            baseAssignValue(result2, iteratee2(value, key, object2), value);
          });
          return result2;
        }
        function mapValues(object, iteratee2) {
          var result2 = {};
          iteratee2 = getIteratee(iteratee2, 3);
          baseForOwn(object, function(value, key, object2) {
            baseAssignValue(result2, key, iteratee2(value, key, object2));
          });
          return result2;
        }
        var merge2 = createAssigner(function(object, source, srcIndex) {
          baseMerge(object, source, srcIndex);
        });
        var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
          baseMerge(object, source, srcIndex, customizer);
        });
        var omit = flatRest(function(object, paths) {
          var result2 = {};
          if (object == null) {
            return result2;
          }
          var isDeep = false;
          paths = arrayMap(paths, function(path) {
            path = castPath(path, object);
            isDeep || (isDeep = path.length > 1);
            return path;
          });
          copyObject(object, getAllKeysIn(object), result2);
          if (isDeep) {
            result2 = baseClone(result2, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
          }
          var length = paths.length;
          while (length--) {
            baseUnset(result2, paths[length]);
          }
          return result2;
        });
        function omitBy(object, predicate) {
          return pickBy(object, negate(getIteratee(predicate)));
        }
        var pick = flatRest(function(object, paths) {
          return object == null ? {} : basePick(object, paths);
        });
        function pickBy(object, predicate) {
          if (object == null) {
            return {};
          }
          var props = arrayMap(getAllKeysIn(object), function(prop) {
            return [prop];
          });
          predicate = getIteratee(predicate);
          return basePickBy(object, props, function(value, path) {
            return predicate(value, path[0]);
          });
        }
        function result(object, path, defaultValue) {
          path = castPath(path, object);
          var index = -1, length = path.length;
          if (!length) {
            length = 1;
            object = undefined2;
          }
          while (++index < length) {
            var value = object == null ? undefined2 : object[toKey(path[index])];
            if (value === undefined2) {
              index = length;
              value = defaultValue;
            }
            object = isFunction(value) ? value.call(object) : value;
          }
          return object;
        }
        function set(object, path, value) {
          return object == null ? object : baseSet(object, path, value);
        }
        function setWith(object, path, value, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          return object == null ? object : baseSet(object, path, value, customizer);
        }
        var toPairs = createToPairs(keys);
        var toPairsIn = createToPairs(keysIn);
        function transform(object, iteratee2, accumulator) {
          var isArr = isArray(object), isArrLike = isArr || isBuffer(object) || isTypedArray(object);
          iteratee2 = getIteratee(iteratee2, 4);
          if (accumulator == null) {
            var Ctor = object && object.constructor;
            if (isArrLike) {
              accumulator = isArr ? new Ctor() : [];
            } else if (isObject(object)) {
              accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
            } else {
              accumulator = {};
            }
          }
          (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object2) {
            return iteratee2(accumulator, value, index, object2);
          });
          return accumulator;
        }
        function unset(object, path) {
          return object == null ? true : baseUnset(object, path);
        }
        function update(object, path, updater) {
          return object == null ? object : baseUpdate(object, path, castFunction(updater));
        }
        function updateWith(object, path, updater, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
        }
        function values(object) {
          return object == null ? [] : baseValues(object, keys(object));
        }
        function valuesIn(object) {
          return object == null ? [] : baseValues(object, keysIn(object));
        }
        function clamp(number, lower, upper) {
          if (upper === undefined2) {
            upper = lower;
            lower = undefined2;
          }
          if (upper !== undefined2) {
            upper = toNumber(upper);
            upper = upper === upper ? upper : 0;
          }
          if (lower !== undefined2) {
            lower = toNumber(lower);
            lower = lower === lower ? lower : 0;
          }
          return baseClamp(toNumber(number), lower, upper);
        }
        function inRange(number, start2, end2) {
          start2 = toFinite(start2);
          if (end2 === undefined2) {
            end2 = start2;
            start2 = 0;
          } else {
            end2 = toFinite(end2);
          }
          number = toNumber(number);
          return baseInRange(number, start2, end2);
        }
        function random(lower, upper, floating) {
          if (floating && typeof floating != "boolean" && isIterateeCall(lower, upper, floating)) {
            upper = floating = undefined2;
          }
          if (floating === undefined2) {
            if (typeof upper == "boolean") {
              floating = upper;
              upper = undefined2;
            } else if (typeof lower == "boolean") {
              floating = lower;
              lower = undefined2;
            }
          }
          if (lower === undefined2 && upper === undefined2) {
            lower = 0;
            upper = 1;
          } else {
            lower = toFinite(lower);
            if (upper === undefined2) {
              upper = lower;
              lower = 0;
            } else {
              upper = toFinite(upper);
            }
          }
          if (lower > upper) {
            var temp = lower;
            lower = upper;
            upper = temp;
          }
          if (floating || lower % 1 || upper % 1) {
            var rand = nativeRandom();
            return nativeMin(lower + rand * (upper - lower + freeParseFloat("1e-" + ((rand + "").length - 1))), upper);
          }
          return baseRandom(lower, upper);
        }
        var camelCase = createCompounder(function(result2, word, index) {
          word = word.toLowerCase();
          return result2 + (index ? capitalize(word) : word);
        });
        function capitalize(string) {
          return upperFirst(toString(string).toLowerCase());
        }
        function deburr(string) {
          string = toString(string);
          return string && string.replace(reLatin, deburrLetter).replace(reComboMark, "");
        }
        function endsWith(string, target, position) {
          string = toString(string);
          target = baseToString(target);
          var length = string.length;
          position = position === undefined2 ? length : baseClamp(toInteger(position), 0, length);
          var end2 = position;
          position -= target.length;
          return position >= 0 && string.slice(position, end2) == target;
        }
        function escape(string) {
          string = toString(string);
          return string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, escapeHtmlChar) : string;
        }
        function escapeRegExp(string) {
          string = toString(string);
          return string && reHasRegExpChar.test(string) ? string.replace(reRegExpChar, "\\$&") : string;
        }
        var kebabCase = createCompounder(function(result2, word, index) {
          return result2 + (index ? "-" : "") + word.toLowerCase();
        });
        var lowerCase = createCompounder(function(result2, word, index) {
          return result2 + (index ? " " : "") + word.toLowerCase();
        });
        var lowerFirst = createCaseFirst("toLowerCase");
        function pad(string, length, chars) {
          string = toString(string);
          length = toInteger(length);
          var strLength = length ? stringSize(string) : 0;
          if (!length || strLength >= length) {
            return string;
          }
          var mid = (length - strLength) / 2;
          return createPadding(nativeFloor(mid), chars) + string + createPadding(nativeCeil(mid), chars);
        }
        function padEnd(string, length, chars) {
          string = toString(string);
          length = toInteger(length);
          var strLength = length ? stringSize(string) : 0;
          return length && strLength < length ? string + createPadding(length - strLength, chars) : string;
        }
        function padStart(string, length, chars) {
          string = toString(string);
          length = toInteger(length);
          var strLength = length ? stringSize(string) : 0;
          return length && strLength < length ? createPadding(length - strLength, chars) + string : string;
        }
        function parseInt2(string, radix, guard) {
          if (guard || radix == null) {
            radix = 0;
          } else if (radix) {
            radix = +radix;
          }
          return nativeParseInt(toString(string).replace(reTrimStart, ""), radix || 0);
        }
        function repeat(string, n, guard) {
          if (guard ? isIterateeCall(string, n, guard) : n === undefined2) {
            n = 1;
          } else {
            n = toInteger(n);
          }
          return baseRepeat(toString(string), n);
        }
        function replace() {
          var args = arguments, string = toString(args[0]);
          return args.length < 3 ? string : string.replace(args[1], args[2]);
        }
        var snakeCase = createCompounder(function(result2, word, index) {
          return result2 + (index ? "_" : "") + word.toLowerCase();
        });
        function split(string, separator, limit) {
          if (limit && typeof limit != "number" && isIterateeCall(string, separator, limit)) {
            separator = limit = undefined2;
          }
          limit = limit === undefined2 ? MAX_ARRAY_LENGTH : limit >>> 0;
          if (!limit) {
            return [];
          }
          string = toString(string);
          if (string && (typeof separator == "string" || separator != null && !isRegExp(separator))) {
            separator = baseToString(separator);
            if (!separator && hasUnicode(string)) {
              return castSlice(stringToArray(string), 0, limit);
            }
          }
          return string.split(separator, limit);
        }
        var startCase = createCompounder(function(result2, word, index) {
          return result2 + (index ? " " : "") + upperFirst(word);
        });
        function startsWith(string, target, position) {
          string = toString(string);
          position = position == null ? 0 : baseClamp(toInteger(position), 0, string.length);
          target = baseToString(target);
          return string.slice(position, position + target.length) == target;
        }
        function template(string, options, guard) {
          var settings = lodash.templateSettings;
          if (guard && isIterateeCall(string, options, guard)) {
            options = undefined2;
          }
          string = toString(string);
          options = assignInWith({}, options, settings, customDefaultsAssignIn);
          var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn), importsKeys = keys(imports), importsValues = baseValues(imports, importsKeys);
          var isEscaping, isEvaluating, index = 0, interpolate = options.interpolate || reNoMatch, source = "__p += '";
          var reDelimiters = RegExp2((options.escape || reNoMatch).source + "|" + interpolate.source + "|" + (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + "|" + (options.evaluate || reNoMatch).source + "|$", "g");
          var sourceURL = "//# sourceURL=" + (hasOwnProperty.call(options, "sourceURL") ? (options.sourceURL + "").replace(/\s/g, " ") : "lodash.templateSources[" + ++templateCounter + "]") + "\n";
          string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset2) {
            interpolateValue || (interpolateValue = esTemplateValue);
            source += string.slice(index, offset2).replace(reUnescapedString, escapeStringChar);
            if (escapeValue) {
              isEscaping = true;
              source += "' +\n__e(" + escapeValue + ") +\n'";
            }
            if (evaluateValue) {
              isEvaluating = true;
              source += "';\n" + evaluateValue + ";\n__p += '";
            }
            if (interpolateValue) {
              source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
            }
            index = offset2 + match.length;
            return match;
          });
          source += "';\n";
          var variable = hasOwnProperty.call(options, "variable") && options.variable;
          if (!variable) {
            source = "with (obj) {\n" + source + "\n}\n";
          } else if (reForbiddenIdentifierChars.test(variable)) {
            throw new Error2(INVALID_TEMPL_VAR_ERROR_TEXT);
          }
          source = (isEvaluating ? source.replace(reEmptyStringLeading, "") : source).replace(reEmptyStringMiddle, "$1").replace(reEmptyStringTrailing, "$1;");
          source = "function(" + (variable || "obj") + ") {\n" + (variable ? "" : "obj || (obj = {});\n") + "var __t, __p = ''" + (isEscaping ? ", __e = _.escape" : "") + (isEvaluating ? ", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n" : ";\n") + source + "return __p\n}";
          var result2 = attempt(function() {
            return Function2(importsKeys, sourceURL + "return " + source).apply(undefined2, importsValues);
          });
          result2.source = source;
          if (isError(result2)) {
            throw result2;
          }
          return result2;
        }
        function toLower(value) {
          return toString(value).toLowerCase();
        }
        function toUpper(value) {
          return toString(value).toUpperCase();
        }
        function trim(string, chars, guard) {
          string = toString(string);
          if (string && (guard || chars === undefined2)) {
            return baseTrim(string);
          }
          if (!string || !(chars = baseToString(chars))) {
            return string;
          }
          var strSymbols = stringToArray(string), chrSymbols = stringToArray(chars), start2 = charsStartIndex(strSymbols, chrSymbols), end2 = charsEndIndex(strSymbols, chrSymbols) + 1;
          return castSlice(strSymbols, start2, end2).join("");
        }
        function trimEnd(string, chars, guard) {
          string = toString(string);
          if (string && (guard || chars === undefined2)) {
            return string.slice(0, trimmedEndIndex(string) + 1);
          }
          if (!string || !(chars = baseToString(chars))) {
            return string;
          }
          var strSymbols = stringToArray(string), end2 = charsEndIndex(strSymbols, stringToArray(chars)) + 1;
          return castSlice(strSymbols, 0, end2).join("");
        }
        function trimStart(string, chars, guard) {
          string = toString(string);
          if (string && (guard || chars === undefined2)) {
            return string.replace(reTrimStart, "");
          }
          if (!string || !(chars = baseToString(chars))) {
            return string;
          }
          var strSymbols = stringToArray(string), start2 = charsStartIndex(strSymbols, stringToArray(chars));
          return castSlice(strSymbols, start2).join("");
        }
        function truncate(string, options) {
          var length = DEFAULT_TRUNC_LENGTH, omission = DEFAULT_TRUNC_OMISSION;
          if (isObject(options)) {
            var separator = "separator" in options ? options.separator : separator;
            length = "length" in options ? toInteger(options.length) : length;
            omission = "omission" in options ? baseToString(options.omission) : omission;
          }
          string = toString(string);
          var strLength = string.length;
          if (hasUnicode(string)) {
            var strSymbols = stringToArray(string);
            strLength = strSymbols.length;
          }
          if (length >= strLength) {
            return string;
          }
          var end2 = length - stringSize(omission);
          if (end2 < 1) {
            return omission;
          }
          var result2 = strSymbols ? castSlice(strSymbols, 0, end2).join("") : string.slice(0, end2);
          if (separator === undefined2) {
            return result2 + omission;
          }
          if (strSymbols) {
            end2 += result2.length - end2;
          }
          if (isRegExp(separator)) {
            if (string.slice(end2).search(separator)) {
              var match, substring = result2;
              if (!separator.global) {
                separator = RegExp2(separator.source, toString(reFlags.exec(separator)) + "g");
              }
              separator.lastIndex = 0;
              while (match = separator.exec(substring)) {
                var newEnd = match.index;
              }
              result2 = result2.slice(0, newEnd === undefined2 ? end2 : newEnd);
            }
          } else if (string.indexOf(baseToString(separator), end2) != end2) {
            var index = result2.lastIndexOf(separator);
            if (index > -1) {
              result2 = result2.slice(0, index);
            }
          }
          return result2 + omission;
        }
        function unescape(string) {
          string = toString(string);
          return string && reHasEscapedHtml.test(string) ? string.replace(reEscapedHtml, unescapeHtmlChar) : string;
        }
        var upperCase = createCompounder(function(result2, word, index) {
          return result2 + (index ? " " : "") + word.toUpperCase();
        });
        var upperFirst = createCaseFirst("toUpperCase");
        function words(string, pattern, guard) {
          string = toString(string);
          pattern = guard ? undefined2 : pattern;
          if (pattern === undefined2) {
            return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
          }
          return string.match(pattern) || [];
        }
        var attempt = baseRest(function(func, args) {
          try {
            return apply(func, undefined2, args);
          } catch (e) {
            return isError(e) ? e : new Error2(e);
          }
        });
        var bindAll = flatRest(function(object, methodNames) {
          arrayEach(methodNames, function(key) {
            key = toKey(key);
            baseAssignValue(object, key, bind(object[key], object));
          });
          return object;
        });
        function cond(pairs) {
          var length = pairs == null ? 0 : pairs.length, toIteratee = getIteratee();
          pairs = !length ? [] : arrayMap(pairs, function(pair) {
            if (typeof pair[1] != "function") {
              throw new TypeError2(FUNC_ERROR_TEXT);
            }
            return [toIteratee(pair[0]), pair[1]];
          });
          return baseRest(function(args) {
            var index = -1;
            while (++index < length) {
              var pair = pairs[index];
              if (apply(pair[0], this, args)) {
                return apply(pair[1], this, args);
              }
            }
          });
        }
        function conforms(source) {
          return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
        }
        function constant(value) {
          return function() {
            return value;
          };
        }
        function defaultTo(value, defaultValue) {
          return value == null || value !== value ? defaultValue : value;
        }
        var flow = createFlow();
        var flowRight = createFlow(true);
        function identity(value) {
          return value;
        }
        function iteratee(func) {
          return baseIteratee(typeof func == "function" ? func : baseClone(func, CLONE_DEEP_FLAG));
        }
        function matches(source) {
          return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
        }
        function matchesProperty(path, srcValue) {
          return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
        }
        var method = baseRest(function(path, args) {
          return function(object) {
            return baseInvoke(object, path, args);
          };
        });
        var methodOf = baseRest(function(object, args) {
          return function(path) {
            return baseInvoke(object, path, args);
          };
        });
        function mixin(object, source, options) {
          var props = keys(source), methodNames = baseFunctions(source, props);
          if (options == null && !(isObject(source) && (methodNames.length || !props.length))) {
            options = source;
            source = object;
            object = this;
            methodNames = baseFunctions(source, keys(source));
          }
          var chain2 = !(isObject(options) && "chain" in options) || !!options.chain, isFunc = isFunction(object);
          arrayEach(methodNames, function(methodName) {
            var func = source[methodName];
            object[methodName] = func;
            if (isFunc) {
              object.prototype[methodName] = function() {
                var chainAll = this.__chain__;
                if (chain2 || chainAll) {
                  var result2 = object(this.__wrapped__), actions = result2.__actions__ = copyArray(this.__actions__);
                  actions.push({ "func": func, "args": arguments, "thisArg": object });
                  result2.__chain__ = chainAll;
                  return result2;
                }
                return func.apply(object, arrayPush([this.value()], arguments));
              };
            }
          });
          return object;
        }
        function noConflict() {
          if (root._ === this) {
            root._ = oldDash;
          }
          return this;
        }
        function noop() {
        }
        function nthArg(n) {
          n = toInteger(n);
          return baseRest(function(args) {
            return baseNth(args, n);
          });
        }
        var over = createOver(arrayMap);
        var overEvery = createOver(arrayEvery);
        var overSome = createOver(arraySome);
        function property(path) {
          return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
        }
        function propertyOf(object) {
          return function(path) {
            return object == null ? undefined2 : baseGet(object, path);
          };
        }
        var range = createRange();
        var rangeRight = createRange(true);
        function stubArray() {
          return [];
        }
        function stubFalse() {
          return false;
        }
        function stubObject() {
          return {};
        }
        function stubString() {
          return "";
        }
        function stubTrue() {
          return true;
        }
        function times(n, iteratee2) {
          n = toInteger(n);
          if (n < 1 || n > MAX_SAFE_INTEGER) {
            return [];
          }
          var index = MAX_ARRAY_LENGTH, length = nativeMin(n, MAX_ARRAY_LENGTH);
          iteratee2 = getIteratee(iteratee2);
          n -= MAX_ARRAY_LENGTH;
          var result2 = baseTimes(length, iteratee2);
          while (++index < n) {
            iteratee2(index);
          }
          return result2;
        }
        function toPath(value) {
          if (isArray(value)) {
            return arrayMap(value, toKey);
          }
          return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
        }
        function uniqueId(prefix) {
          var id = ++idCounter;
          return toString(prefix) + id;
        }
        var add = createMathOperation(function(augend, addend) {
          return augend + addend;
        }, 0);
        var ceil = createRound("ceil");
        var divide = createMathOperation(function(dividend, divisor) {
          return dividend / divisor;
        }, 1);
        var floor = createRound("floor");
        function max3(array) {
          return array && array.length ? baseExtremum(array, identity, baseGt) : undefined2;
        }
        function maxBy(array, iteratee2) {
          return array && array.length ? baseExtremum(array, getIteratee(iteratee2, 2), baseGt) : undefined2;
        }
        function mean(array) {
          return baseMean(array, identity);
        }
        function meanBy(array, iteratee2) {
          return baseMean(array, getIteratee(iteratee2, 2));
        }
        function min3(array) {
          return array && array.length ? baseExtremum(array, identity, baseLt) : undefined2;
        }
        function minBy(array, iteratee2) {
          return array && array.length ? baseExtremum(array, getIteratee(iteratee2, 2), baseLt) : undefined2;
        }
        var multiply = createMathOperation(function(multiplier, multiplicand) {
          return multiplier * multiplicand;
        }, 1);
        var round2 = createRound("round");
        var subtract = createMathOperation(function(minuend, subtrahend) {
          return minuend - subtrahend;
        }, 0);
        function sum(array) {
          return array && array.length ? baseSum(array, identity) : 0;
        }
        function sumBy(array, iteratee2) {
          return array && array.length ? baseSum(array, getIteratee(iteratee2, 2)) : 0;
        }
        lodash.after = after;
        lodash.ary = ary;
        lodash.assign = assign;
        lodash.assignIn = assignIn;
        lodash.assignInWith = assignInWith;
        lodash.assignWith = assignWith;
        lodash.at = at;
        lodash.before = before;
        lodash.bind = bind;
        lodash.bindAll = bindAll;
        lodash.bindKey = bindKey;
        lodash.castArray = castArray;
        lodash.chain = chain;
        lodash.chunk = chunk;
        lodash.compact = compact;
        lodash.concat = concat;
        lodash.cond = cond;
        lodash.conforms = conforms;
        lodash.constant = constant;
        lodash.countBy = countBy;
        lodash.create = create;
        lodash.curry = curry;
        lodash.curryRight = curryRight;
        lodash.debounce = debounce2;
        lodash.defaults = defaults;
        lodash.defaultsDeep = defaultsDeep;
        lodash.defer = defer;
        lodash.delay = delay;
        lodash.difference = difference;
        lodash.differenceBy = differenceBy;
        lodash.differenceWith = differenceWith;
        lodash.drop = drop;
        lodash.dropRight = dropRight;
        lodash.dropRightWhile = dropRightWhile;
        lodash.dropWhile = dropWhile;
        lodash.fill = fill;
        lodash.filter = filter;
        lodash.flatMap = flatMap;
        lodash.flatMapDeep = flatMapDeep;
        lodash.flatMapDepth = flatMapDepth;
        lodash.flatten = flatten;
        lodash.flattenDeep = flattenDeep;
        lodash.flattenDepth = flattenDepth;
        lodash.flip = flip2;
        lodash.flow = flow;
        lodash.flowRight = flowRight;
        lodash.fromPairs = fromPairs;
        lodash.functions = functions;
        lodash.functionsIn = functionsIn;
        lodash.groupBy = groupBy;
        lodash.initial = initial;
        lodash.intersection = intersection;
        lodash.intersectionBy = intersectionBy;
        lodash.intersectionWith = intersectionWith;
        lodash.invert = invert;
        lodash.invertBy = invertBy;
        lodash.invokeMap = invokeMap;
        lodash.iteratee = iteratee;
        lodash.keyBy = keyBy;
        lodash.keys = keys;
        lodash.keysIn = keysIn;
        lodash.map = map;
        lodash.mapKeys = mapKeys;
        lodash.mapValues = mapValues;
        lodash.matches = matches;
        lodash.matchesProperty = matchesProperty;
        lodash.memoize = memoize;
        lodash.merge = merge2;
        lodash.mergeWith = mergeWith;
        lodash.method = method;
        lodash.methodOf = methodOf;
        lodash.mixin = mixin;
        lodash.negate = negate;
        lodash.nthArg = nthArg;
        lodash.omit = omit;
        lodash.omitBy = omitBy;
        lodash.once = once;
        lodash.orderBy = orderBy;
        lodash.over = over;
        lodash.overArgs = overArgs;
        lodash.overEvery = overEvery;
        lodash.overSome = overSome;
        lodash.partial = partial;
        lodash.partialRight = partialRight;
        lodash.partition = partition;
        lodash.pick = pick;
        lodash.pickBy = pickBy;
        lodash.property = property;
        lodash.propertyOf = propertyOf;
        lodash.pull = pull;
        lodash.pullAll = pullAll;
        lodash.pullAllBy = pullAllBy;
        lodash.pullAllWith = pullAllWith;
        lodash.pullAt = pullAt;
        lodash.range = range;
        lodash.rangeRight = rangeRight;
        lodash.rearg = rearg;
        lodash.reject = reject;
        lodash.remove = remove;
        lodash.rest = rest;
        lodash.reverse = reverse;
        lodash.sampleSize = sampleSize;
        lodash.set = set;
        lodash.setWith = setWith;
        lodash.shuffle = shuffle;
        lodash.slice = slice;
        lodash.sortBy = sortBy;
        lodash.sortedUniq = sortedUniq;
        lodash.sortedUniqBy = sortedUniqBy;
        lodash.split = split;
        lodash.spread = spread;
        lodash.tail = tail;
        lodash.take = take;
        lodash.takeRight = takeRight;
        lodash.takeRightWhile = takeRightWhile;
        lodash.takeWhile = takeWhile;
        lodash.tap = tap;
        lodash.throttle = throttle;
        lodash.thru = thru;
        lodash.toArray = toArray;
        lodash.toPairs = toPairs;
        lodash.toPairsIn = toPairsIn;
        lodash.toPath = toPath;
        lodash.toPlainObject = toPlainObject;
        lodash.transform = transform;
        lodash.unary = unary;
        lodash.union = union;
        lodash.unionBy = unionBy;
        lodash.unionWith = unionWith;
        lodash.uniq = uniq;
        lodash.uniqBy = uniqBy;
        lodash.uniqWith = uniqWith;
        lodash.unset = unset;
        lodash.unzip = unzip;
        lodash.unzipWith = unzipWith;
        lodash.update = update;
        lodash.updateWith = updateWith;
        lodash.values = values;
        lodash.valuesIn = valuesIn;
        lodash.without = without;
        lodash.words = words;
        lodash.wrap = wrap;
        lodash.xor = xor2;
        lodash.xorBy = xorBy;
        lodash.xorWith = xorWith;
        lodash.zip = zip;
        lodash.zipObject = zipObject;
        lodash.zipObjectDeep = zipObjectDeep;
        lodash.zipWith = zipWith;
        lodash.entries = toPairs;
        lodash.entriesIn = toPairsIn;
        lodash.extend = assignIn;
        lodash.extendWith = assignInWith;
        mixin(lodash, lodash);
        lodash.add = add;
        lodash.attempt = attempt;
        lodash.camelCase = camelCase;
        lodash.capitalize = capitalize;
        lodash.ceil = ceil;
        lodash.clamp = clamp;
        lodash.clone = clone;
        lodash.cloneDeep = cloneDeep;
        lodash.cloneDeepWith = cloneDeepWith;
        lodash.cloneWith = cloneWith;
        lodash.conformsTo = conformsTo;
        lodash.deburr = deburr;
        lodash.defaultTo = defaultTo;
        lodash.divide = divide;
        lodash.endsWith = endsWith;
        lodash.eq = eq;
        lodash.escape = escape;
        lodash.escapeRegExp = escapeRegExp;
        lodash.every = every;
        lodash.find = find;
        lodash.findIndex = findIndex;
        lodash.findKey = findKey;
        lodash.findLast = findLast;
        lodash.findLastIndex = findLastIndex;
        lodash.findLastKey = findLastKey;
        lodash.floor = floor;
        lodash.forEach = forEach;
        lodash.forEachRight = forEachRight;
        lodash.forIn = forIn;
        lodash.forInRight = forInRight;
        lodash.forOwn = forOwn;
        lodash.forOwnRight = forOwnRight;
        lodash.get = get;
        lodash.gt = gt;
        lodash.gte = gte;
        lodash.has = has;
        lodash.hasIn = hasIn;
        lodash.head = head;
        lodash.identity = identity;
        lodash.includes = includes;
        lodash.indexOf = indexOf;
        lodash.inRange = inRange;
        lodash.invoke = invoke;
        lodash.isArguments = isArguments;
        lodash.isArray = isArray;
        lodash.isArrayBuffer = isArrayBuffer;
        lodash.isArrayLike = isArrayLike;
        lodash.isArrayLikeObject = isArrayLikeObject;
        lodash.isBoolean = isBoolean;
        lodash.isBuffer = isBuffer;
        lodash.isDate = isDate;
        lodash.isElement = isElement2;
        lodash.isEmpty = isEmpty;
        lodash.isEqual = isEqual;
        lodash.isEqualWith = isEqualWith;
        lodash.isError = isError;
        lodash.isFinite = isFinite;
        lodash.isFunction = isFunction;
        lodash.isInteger = isInteger;
        lodash.isLength = isLength;
        lodash.isMap = isMap;
        lodash.isMatch = isMatch;
        lodash.isMatchWith = isMatchWith;
        lodash.isNaN = isNaN;
        lodash.isNative = isNative;
        lodash.isNil = isNil;
        lodash.isNull = isNull;
        lodash.isNumber = isNumber;
        lodash.isObject = isObject;
        lodash.isObjectLike = isObjectLike;
        lodash.isPlainObject = isPlainObject;
        lodash.isRegExp = isRegExp;
        lodash.isSafeInteger = isSafeInteger;
        lodash.isSet = isSet;
        lodash.isString = isString;
        lodash.isSymbol = isSymbol;
        lodash.isTypedArray = isTypedArray;
        lodash.isUndefined = isUndefined;
        lodash.isWeakMap = isWeakMap;
        lodash.isWeakSet = isWeakSet;
        lodash.join = join;
        lodash.kebabCase = kebabCase;
        lodash.last = last;
        lodash.lastIndexOf = lastIndexOf;
        lodash.lowerCase = lowerCase;
        lodash.lowerFirst = lowerFirst;
        lodash.lt = lt;
        lodash.lte = lte;
        lodash.max = max3;
        lodash.maxBy = maxBy;
        lodash.mean = mean;
        lodash.meanBy = meanBy;
        lodash.min = min3;
        lodash.minBy = minBy;
        lodash.stubArray = stubArray;
        lodash.stubFalse = stubFalse;
        lodash.stubObject = stubObject;
        lodash.stubString = stubString;
        lodash.stubTrue = stubTrue;
        lodash.multiply = multiply;
        lodash.nth = nth;
        lodash.noConflict = noConflict;
        lodash.noop = noop;
        lodash.now = now;
        lodash.pad = pad;
        lodash.padEnd = padEnd;
        lodash.padStart = padStart;
        lodash.parseInt = parseInt2;
        lodash.random = random;
        lodash.reduce = reduce;
        lodash.reduceRight = reduceRight;
        lodash.repeat = repeat;
        lodash.replace = replace;
        lodash.result = result;
        lodash.round = round2;
        lodash.runInContext = runInContext2;
        lodash.sample = sample;
        lodash.size = size;
        lodash.snakeCase = snakeCase;
        lodash.some = some;
        lodash.sortedIndex = sortedIndex;
        lodash.sortedIndexBy = sortedIndexBy;
        lodash.sortedIndexOf = sortedIndexOf;
        lodash.sortedLastIndex = sortedLastIndex;
        lodash.sortedLastIndexBy = sortedLastIndexBy;
        lodash.sortedLastIndexOf = sortedLastIndexOf;
        lodash.startCase = startCase;
        lodash.startsWith = startsWith;
        lodash.subtract = subtract;
        lodash.sum = sum;
        lodash.sumBy = sumBy;
        lodash.template = template;
        lodash.times = times;
        lodash.toFinite = toFinite;
        lodash.toInteger = toInteger;
        lodash.toLength = toLength;
        lodash.toLower = toLower;
        lodash.toNumber = toNumber;
        lodash.toSafeInteger = toSafeInteger;
        lodash.toString = toString;
        lodash.toUpper = toUpper;
        lodash.trim = trim;
        lodash.trimEnd = trimEnd;
        lodash.trimStart = trimStart;
        lodash.truncate = truncate;
        lodash.unescape = unescape;
        lodash.uniqueId = uniqueId;
        lodash.upperCase = upperCase;
        lodash.upperFirst = upperFirst;
        lodash.each = forEach;
        lodash.eachRight = forEachRight;
        lodash.first = head;
        mixin(lodash, function() {
          var source = {};
          baseForOwn(lodash, function(func, methodName) {
            if (!hasOwnProperty.call(lodash.prototype, methodName)) {
              source[methodName] = func;
            }
          });
          return source;
        }(), { "chain": false });
        lodash.VERSION = VERSION;
        arrayEach(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function(methodName) {
          lodash[methodName].placeholder = lodash;
        });
        arrayEach(["drop", "take"], function(methodName, index) {
          LazyWrapper.prototype[methodName] = function(n) {
            n = n === undefined2 ? 1 : nativeMax(toInteger(n), 0);
            var result2 = this.__filtered__ && !index ? new LazyWrapper(this) : this.clone();
            if (result2.__filtered__) {
              result2.__takeCount__ = nativeMin(n, result2.__takeCount__);
            } else {
              result2.__views__.push({
                "size": nativeMin(n, MAX_ARRAY_LENGTH),
                "type": methodName + (result2.__dir__ < 0 ? "Right" : "")
              });
            }
            return result2;
          };
          LazyWrapper.prototype[methodName + "Right"] = function(n) {
            return this.reverse()[methodName](n).reverse();
          };
        });
        arrayEach(["filter", "map", "takeWhile"], function(methodName, index) {
          var type = index + 1, isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;
          LazyWrapper.prototype[methodName] = function(iteratee2) {
            var result2 = this.clone();
            result2.__iteratees__.push({
              "iteratee": getIteratee(iteratee2, 3),
              "type": type
            });
            result2.__filtered__ = result2.__filtered__ || isFilter;
            return result2;
          };
        });
        arrayEach(["head", "last"], function(methodName, index) {
          var takeName = "take" + (index ? "Right" : "");
          LazyWrapper.prototype[methodName] = function() {
            return this[takeName](1).value()[0];
          };
        });
        arrayEach(["initial", "tail"], function(methodName, index) {
          var dropName = "drop" + (index ? "" : "Right");
          LazyWrapper.prototype[methodName] = function() {
            return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
          };
        });
        LazyWrapper.prototype.compact = function() {
          return this.filter(identity);
        };
        LazyWrapper.prototype.find = function(predicate) {
          return this.filter(predicate).head();
        };
        LazyWrapper.prototype.findLast = function(predicate) {
          return this.reverse().find(predicate);
        };
        LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
          if (typeof path == "function") {
            return new LazyWrapper(this);
          }
          return this.map(function(value) {
            return baseInvoke(value, path, args);
          });
        });
        LazyWrapper.prototype.reject = function(predicate) {
          return this.filter(negate(getIteratee(predicate)));
        };
        LazyWrapper.prototype.slice = function(start2, end2) {
          start2 = toInteger(start2);
          var result2 = this;
          if (result2.__filtered__ && (start2 > 0 || end2 < 0)) {
            return new LazyWrapper(result2);
          }
          if (start2 < 0) {
            result2 = result2.takeRight(-start2);
          } else if (start2) {
            result2 = result2.drop(start2);
          }
          if (end2 !== undefined2) {
            end2 = toInteger(end2);
            result2 = end2 < 0 ? result2.dropRight(-end2) : result2.take(end2 - start2);
          }
          return result2;
        };
        LazyWrapper.prototype.takeRightWhile = function(predicate) {
          return this.reverse().takeWhile(predicate).reverse();
        };
        LazyWrapper.prototype.toArray = function() {
          return this.take(MAX_ARRAY_LENGTH);
        };
        baseForOwn(LazyWrapper.prototype, function(func, methodName) {
          var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName), isTaker = /^(?:head|last)$/.test(methodName), lodashFunc = lodash[isTaker ? "take" + (methodName == "last" ? "Right" : "") : methodName], retUnwrapped = isTaker || /^find/.test(methodName);
          if (!lodashFunc) {
            return;
          }
          lodash.prototype[methodName] = function() {
            var value = this.__wrapped__, args = isTaker ? [1] : arguments, isLazy = value instanceof LazyWrapper, iteratee2 = args[0], useLazy = isLazy || isArray(value);
            var interceptor = function(value2) {
              var result3 = lodashFunc.apply(lodash, arrayPush([value2], args));
              return isTaker && chainAll ? result3[0] : result3;
            };
            if (useLazy && checkIteratee && typeof iteratee2 == "function" && iteratee2.length != 1) {
              isLazy = useLazy = false;
            }
            var chainAll = this.__chain__, isHybrid = !!this.__actions__.length, isUnwrapped = retUnwrapped && !chainAll, onlyLazy = isLazy && !isHybrid;
            if (!retUnwrapped && useLazy) {
              value = onlyLazy ? value : new LazyWrapper(this);
              var result2 = func.apply(value, args);
              result2.__actions__.push({ "func": thru, "args": [interceptor], "thisArg": undefined2 });
              return new LodashWrapper(result2, chainAll);
            }
            if (isUnwrapped && onlyLazy) {
              return func.apply(this, args);
            }
            result2 = this.thru(interceptor);
            return isUnwrapped ? isTaker ? result2.value()[0] : result2.value() : result2;
          };
        });
        arrayEach(["pop", "push", "shift", "sort", "splice", "unshift"], function(methodName) {
          var func = arrayProto[methodName], chainName = /^(?:push|sort|unshift)$/.test(methodName) ? "tap" : "thru", retUnwrapped = /^(?:pop|shift)$/.test(methodName);
          lodash.prototype[methodName] = function() {
            var args = arguments;
            if (retUnwrapped && !this.__chain__) {
              var value = this.value();
              return func.apply(isArray(value) ? value : [], args);
            }
            return this[chainName](function(value2) {
              return func.apply(isArray(value2) ? value2 : [], args);
            });
          };
        });
        baseForOwn(LazyWrapper.prototype, function(func, methodName) {
          var lodashFunc = lodash[methodName];
          if (lodashFunc) {
            var key = lodashFunc.name + "";
            if (!hasOwnProperty.call(realNames, key)) {
              realNames[key] = [];
            }
            realNames[key].push({ "name": methodName, "func": lodashFunc });
          }
        });
        realNames[createHybrid(undefined2, WRAP_BIND_KEY_FLAG).name] = [{
          "name": "wrapper",
          "func": undefined2
        }];
        LazyWrapper.prototype.clone = lazyClone;
        LazyWrapper.prototype.reverse = lazyReverse;
        LazyWrapper.prototype.value = lazyValue;
        lodash.prototype.at = wrapperAt;
        lodash.prototype.chain = wrapperChain;
        lodash.prototype.commit = wrapperCommit;
        lodash.prototype.next = wrapperNext;
        lodash.prototype.plant = wrapperPlant;
        lodash.prototype.reverse = wrapperReverse;
        lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;
        lodash.prototype.first = lodash.prototype.head;
        if (symIterator) {
          lodash.prototype[symIterator] = wrapperToIterator;
        }
        return lodash;
      };
      var _ = runInContext();
      if (typeof define == "function" && typeof define.amd == "object" && define.amd) {
        root._ = _;
        define(function() {
          return _;
        });
      } else if (freeModule) {
        (freeModule.exports = _)._ = _;
        freeExports._ = _;
      } else {
        root._ = _;
      }
    }).call(exports);
  }
});

// src/main.ts
__export(exports, {
  default: () => ThePlugin
});
var import_obsidian12 = __toModule(require("obsidian"));
var import_lodash3 = __toModule(require_lodash());

// src/utils/pinyinUtils.ts
function fullPinyin2doublePinyin(fullPinyin, doublePinyinDict) {
  let doublePinyin;
  let [shengmu, yunmu] = splitPinyin(fullPinyin);
  let findKeys = (pinyin, dict) => {
    return Object.keys(dict).find((key) => dict[key].includes(pinyin));
  };
  if (shengmu != "")
    shengmu = findKeys(shengmu, doublePinyinDict);
  if (yunmu != "")
    yunmu = findKeys(yunmu, doublePinyinDict);
  doublePinyin = shengmu + yunmu;
  if (!yunmu && fullPinyin == "er")
    doublePinyin = "er";
  return doublePinyin;
}
var SHENG_MU = [
  "b",
  "p",
  "m",
  "f",
  "d",
  "t",
  "n",
  "l",
  "g",
  "k",
  "h",
  "j",
  "q",
  "x",
  "zh",
  "ch",
  "sh",
  "r",
  "z",
  "c",
  "s",
  "y",
  "w"
];
function splitPinyin(pinyin) {
  const matchedShengmu = SHENG_MU.find((sm) => pinyin.startsWith(sm));
  if (matchedShengmu)
    return [matchedShengmu, pinyin.slice(matchedShengmu.length)];
  else
    return ["", pinyin];
}
var FuzzyPinyinDict = {
  zh: "z",
  ch: "c",
  sh: "s",
  n: "l",
  h: "f",
  l: "r",
  ang: "an",
  eng: "en",
  ing: "in",
  iang: "ian",
  uang: "uan"
};
function fullPinyin2fuzzyPinyin(pinyin, plugin) {
  const { fuzzyPinyinSetting } = plugin.settings.global;
  const dict = fuzzyPinyinSetting.reduce((acc, key) => {
    acc[key] = FuzzyPinyinDict[key];
    return acc;
  }, {});
  const [shengmu, yunmu] = splitPinyin(pinyin);
  let fuzzyShengmu = dict[shengmu];
  let fuzzyYunmu = dict[yunmu];
  if (fuzzyShengmu && fuzzyYunmu)
    return [shengmu + fuzzyYunmu, fuzzyShengmu + yunmu, fuzzyShengmu + fuzzyYunmu];
  else if (fuzzyShengmu)
    return fuzzyShengmu + yunmu;
  else if (fuzzyYunmu)
    return shengmu + fuzzyYunmu;
}

// src/utils/pinyin.ts
var Pinyin = class extends Array {
  constructor(query, plugin) {
    super();
    let pinyinDict = plugin == null ? void 0 : plugin.pinyinDict;
    this.text = query;
    this.text.split("").forEach((p) => {
      let index = pinyinDict.values.map((q, i) => q.includes(p) ? i : null).filter((p2) => p2);
      let pinyin = index.length == 0 ? [p] : pinyinDict.keys.filter((_, i) => index.includes(i));
      if (plugin.settings.global.fuzzyPinyin) {
        let fuzzyPinyin = fullPinyin2fuzzyPinyin(pinyin[0], plugin);
        if (typeof fuzzyPinyin === "string")
          pinyin.push(fuzzyPinyin);
        else if (Array.isArray(fuzzyPinyin))
          pinyin.push(...fuzzyPinyin);
      }
      this.push({
        character: p,
        pinyin
      });
    });
  }
  getScore(range) {
    let score = 0;
    let coverage = range.reduce((p, c) => p + c[1] - c[0] + 1, 0);
    coverage = coverage / this.text.length;
    score += coverage < 0.5 ? 150 * coverage : 50 * coverage + 50;
    score += 20 / (range[0][0] + 1);
    score += 30 / range.length;
    return score;
  }
  match(query, item, smathCase = false) {
    let range = this.match_(query, smathCase);
    range = range ? toRanges(range) : false;
    if (!range)
      return;
    let data = {
      item,
      score: this.getScore(range),
      range
    };
    return data;
  }
  concat(pinyin) {
    let result = new Pinyin("", null);
    result.text = this.text + pinyin.text;
    for (let i of this) {
      result.push(i);
    }
    for (let i of pinyin) {
      result.push(i);
    }
    return result;
  }
  match_(pinyin, smathCase) {
    pinyin = pinyin.replace(/\s/g, "");
    let f = (str) => smathCase ? str : str.toLocaleLowerCase();
    const result = this.matchAboveStart(f(this.text), f(pinyin));
    return result;
  }
  matchAboveStart(text, pinyin) {
    const words = text.split("");
    const dp = Array(words.length + 1);
    for (let i = 0; i < dp.length; i++) {
      dp[i] = Array(pinyin.length + 1);
      dp[i][0] = [];
    }
    for (let i = 0; i < dp[0].length; i++) {
      dp[0][i] = [];
    }
    for (let i = 1; i < dp.length; i++) {
      for (let j = 1; j <= pinyin.length; j++) {
        dp[i][j - 1] = dp[i - 1][j - 1];
      }
      for (let j = 1; j <= pinyin.length; j++) {
        if (!dp[i - 1][j - 1]) {
          continue;
        } else if (j !== 1 && !dp[i - 1][j - 1].length) {
          continue;
        } else {
          const muls = this[i - 1].pinyin;
          if (text[i - 1] === pinyin[j - 1]) {
            const matches = [...dp[i - 1][j - 1], i - 1];
            if (!dp[i][j] || matches.length > dp[i][j].length) {
              dp[i][j] = matches;
            }
            if (j === pinyin.length) {
              return dp[i][j];
            }
          }
          if (pinyin.length - j <= 6) {
            const last = muls.some((py) => {
              return py.startsWith(pinyin.slice(j - 1, pinyin.length));
            });
            if (last) {
              return [...dp[i - 1][j - 1], i - 1];
            }
          }
          if (muls.some((py) => py[0] === pinyin[j - 1])) {
            const matches = [...dp[i - 1][j - 1], i - 1];
            if (!dp[i][j] || matches.length > dp[i][j].length) {
              dp[i][j] = matches;
            }
          }
          const completeMatch = muls.find((py) => py === pinyin.slice(j - 1, j - 1 + py.length));
          if (completeMatch) {
            const matches = [...dp[i - 1][j - 1], i - 1];
            const endIndex = j - 1 + completeMatch.length;
            if (!dp[i][endIndex] || matches.length > dp[i][endIndex].length) {
              dp[i][endIndex] = matches;
            }
          }
        }
      }
    }
    return null;
  }
};
function toRanges(arr) {
  const result = [];
  let start2 = arr[0];
  let end2 = arr[0];
  for (let i = 1; i < arr.length; i++) {
    if (arr[i] === end2 + 1) {
      end2 = arr[i];
    } else {
      result.push([start2, end2]);
      start2 = arr[i];
      end2 = arr[i];
    }
  }
  result.push([start2, end2]);
  return result;
}

// src/utils/pinyinIndex.ts
var import_obsidian2 = __toModule(require("obsidian"));

// src/utils/helpers.ts
var import_obsidian = __toModule(require("obsidian"));
function runOnLayoutReady(calback) {
  if (app.workspace.layoutReady) {
    calback();
  } else {
    app.workspace.onLayoutReady(async () => {
      calback();
    });
  }
}
function arraymove(arr, fromIndex, toIndex) {
  if (toIndex < 0 || toIndex === arr.length)
    return;
  const element = arr[fromIndex];
  arr[fromIndex] = arr[toIndex];
  arr[toIndex] = element;
}
async function createFile(name) {
  return await app.vault.create(app.fileManager.getNewFileParent("").path + "/" + name + ".md", "");
}
function copy(text) {
  navigator.clipboard.writeText(text).then(() => new import_obsidian.Notice("\u5DF2\u590D\u5236\u5230\u526A\u8D34\u677F\uFF1A" + text), () => new import_obsidian.Notice("\u590D\u5236\u5931\u8D25\uFF1A" + text));
}
function incrementalUpdate(items, getAllItems, text2Item) {
  let oldItems = items.map((p) => p.name);
  let newItems = getAllItems();
  let addItems = newItems.filter((p) => !oldItems.includes(p));
  let removeItems = oldItems.filter((p) => !newItems.includes(p));
  if (addItems.length > 0)
    items.push(...addItems.map((p) => text2Item(p)));
  if (removeItems.length > 0)
    items = items.filter((item) => !removeItems.includes(item.name));
  return items;
}

// src/utils/pinyinIndex.ts
var PinyinIndex = class extends import_obsidian2.Component {
  constructor(app2, plugin) {
    super();
    this.app = app2;
    this.plugin = plugin;
    this.vault = app2.vault;
    this.metadataCache = app2.metadataCache;
    this.items = [];
    runOnLayoutReady(() => {
      this.initEvent();
    });
  }
  has(query) {
    return Boolean(this.items.find((p) => p.name == query));
  }
};

// node_modules/.pnpm/github.com+SilentVoid13+Templater@0596dc2c756e8c581d55ca3fd897abcb01f6c271_iyipxpmfmyjdxjfl56nicbfbvm/node_modules/templater-obsidian/src/settings/suggesters/suggest.ts
var import_obsidian3 = __toModule(require("obsidian"));

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/enums.js
var top = "top";
var bottom = "bottom";
var right = "right";
var left = "left";
var auto = "auto";
var basePlacements = [top, bottom, right, left];
var start = "start";
var end = "end";
var clippingParents = "clippingParents";
var viewport = "viewport";
var popper = "popper";
var reference = "reference";
var variationPlacements = /* @__PURE__ */ basePlacements.reduce(function(acc, placement) {
  return acc.concat([placement + "-" + start, placement + "-" + end]);
}, []);
var placements = /* @__PURE__ */ [].concat(basePlacements, [auto]).reduce(function(acc, placement) {
  return acc.concat([placement, placement + "-" + start, placement + "-" + end]);
}, []);
var beforeRead = "beforeRead";
var read = "read";
var afterRead = "afterRead";
var beforeMain = "beforeMain";
var main = "main";
var afterMain = "afterMain";
var beforeWrite = "beforeWrite";
var write = "write";
var afterWrite = "afterWrite";
var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/getNodeName.js
function getNodeName(element) {
  return element ? (element.nodeName || "").toLowerCase() : null;
}

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/getWindow.js
function getWindow(node) {
  if (node == null) {
    return window;
  }
  if (node.toString() !== "[object Window]") {
    var ownerDocument = node.ownerDocument;
    return ownerDocument ? ownerDocument.defaultView || window : window;
  }
  return node;
}

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/instanceOf.js
function isElement(node) {
  var OwnElement = getWindow(node).Element;
  return node instanceof OwnElement || node instanceof Element;
}
function isHTMLElement(node) {
  var OwnElement = getWindow(node).HTMLElement;
  return node instanceof OwnElement || node instanceof HTMLElement;
}
function isShadowRoot(node) {
  if (typeof ShadowRoot === "undefined") {
    return false;
  }
  var OwnElement = getWindow(node).ShadowRoot;
  return node instanceof OwnElement || node instanceof ShadowRoot;
}

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/modifiers/applyStyles.js
function applyStyles(_ref) {
  var state = _ref.state;
  Object.keys(state.elements).forEach(function(name) {
    var style = state.styles[name] || {};
    var attributes = state.attributes[name] || {};
    var element = state.elements[name];
    if (!isHTMLElement(element) || !getNodeName(element)) {
      return;
    }
    Object.assign(element.style, style);
    Object.keys(attributes).forEach(function(name2) {
      var value = attributes[name2];
      if (value === false) {
        element.removeAttribute(name2);
      } else {
        element.setAttribute(name2, value === true ? "" : value);
      }
    });
  });
}
function effect(_ref2) {
  var state = _ref2.state;
  var initialStyles = {
    popper: {
      position: state.options.strategy,
      left: "0",
      top: "0",
      margin: "0"
    },
    arrow: {
      position: "absolute"
    },
    reference: {}
  };
  Object.assign(state.elements.popper.style, initialStyles.popper);
  state.styles = initialStyles;
  if (state.elements.arrow) {
    Object.assign(state.elements.arrow.style, initialStyles.arrow);
  }
  return function() {
    Object.keys(state.elements).forEach(function(name) {
      var element = state.elements[name];
      var attributes = state.attributes[name] || {};
      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]);
      var style = styleProperties.reduce(function(style2, property) {
        style2[property] = "";
        return style2;
      }, {});
      if (!isHTMLElement(element) || !getNodeName(element)) {
        return;
      }
      Object.assign(element.style, style);
      Object.keys(attributes).forEach(function(attribute) {
        element.removeAttribute(attribute);
      });
    });
  };
}
var applyStyles_default = {
  name: "applyStyles",
  enabled: true,
  phase: "write",
  fn: applyStyles,
  effect,
  requires: ["computeStyles"]
};

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/utils/getBasePlacement.js
function getBasePlacement(placement) {
  return placement.split("-")[0];
}

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/utils/math.js
var max = Math.max;
var min = Math.min;
var round = Math.round;

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/utils/userAgent.js
function getUAString() {
  var uaData = navigator.userAgentData;
  if (uaData != null && uaData.brands && Array.isArray(uaData.brands)) {
    return uaData.brands.map(function(item) {
      return item.brand + "/" + item.version;
    }).join(" ");
  }
  return navigator.userAgent;
}

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/isLayoutViewport.js
function isLayoutViewport() {
  return !/^((?!chrome|android).)*safari/i.test(getUAString());
}

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js
function getBoundingClientRect(element, includeScale, isFixedStrategy) {
  if (includeScale === void 0) {
    includeScale = false;
  }
  if (isFixedStrategy === void 0) {
    isFixedStrategy = false;
  }
  var clientRect = element.getBoundingClientRect();
  var scaleX = 1;
  var scaleY = 1;
  if (includeScale && isHTMLElement(element)) {
    scaleX = element.offsetWidth > 0 ? round(clientRect.width) / element.offsetWidth || 1 : 1;
    scaleY = element.offsetHeight > 0 ? round(clientRect.height) / element.offsetHeight || 1 : 1;
  }
  var _ref = isElement(element) ? getWindow(element) : window, visualViewport = _ref.visualViewport;
  var addVisualOffsets = !isLayoutViewport() && isFixedStrategy;
  var x = (clientRect.left + (addVisualOffsets && visualViewport ? visualViewport.offsetLeft : 0)) / scaleX;
  var y = (clientRect.top + (addVisualOffsets && visualViewport ? visualViewport.offsetTop : 0)) / scaleY;
  var width = clientRect.width / scaleX;
  var height = clientRect.height / scaleY;
  return {
    width,
    height,
    top: y,
    right: x + width,
    bottom: y + height,
    left: x,
    x,
    y
  };
}

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js
function getLayoutRect(element) {
  var clientRect = getBoundingClientRect(element);
  var width = element.offsetWidth;
  var height = element.offsetHeight;
  if (Math.abs(clientRect.width - width) <= 1) {
    width = clientRect.width;
  }
  if (Math.abs(clientRect.height - height) <= 1) {
    height = clientRect.height;
  }
  return {
    x: element.offsetLeft,
    y: element.offsetTop,
    width,
    height
  };
}

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/contains.js
function contains(parent, child) {
  var rootNode = child.getRootNode && child.getRootNode();
  if (parent.contains(child)) {
    return true;
  } else if (rootNode && isShadowRoot(rootNode)) {
    var next = child;
    do {
      if (next && parent.isSameNode(next)) {
        return true;
      }
      next = next.parentNode || next.host;
    } while (next);
  }
  return false;
}

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js
function getComputedStyle(element) {
  return getWindow(element).getComputedStyle(element);
}

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/isTableElement.js
function isTableElement(element) {
  return ["table", "td", "th"].indexOf(getNodeName(element)) >= 0;
}

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js
function getDocumentElement(element) {
  return ((isElement(element) ? element.ownerDocument : element.document) || window.document).documentElement;
}

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/getParentNode.js
function getParentNode(element) {
  if (getNodeName(element) === "html") {
    return element;
  }
  return element.assignedSlot || element.parentNode || (isShadowRoot(element) ? element.host : null) || getDocumentElement(element);
}

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js
function getTrueOffsetParent(element) {
  if (!isHTMLElement(element) || getComputedStyle(element).position === "fixed") {
    return null;
  }
  return element.offsetParent;
}
function getContainingBlock(element) {
  var isFirefox = /firefox/i.test(getUAString());
  var isIE = /Trident/i.test(getUAString());
  if (isIE && isHTMLElement(element)) {
    var elementCss = getComputedStyle(element);
    if (elementCss.position === "fixed") {
      return null;
    }
  }
  var currentNode = getParentNode(element);
  if (isShadowRoot(currentNode)) {
    currentNode = currentNode.host;
  }
  while (isHTMLElement(currentNode) && ["html", "body"].indexOf(getNodeName(currentNode)) < 0) {
    var css = getComputedStyle(currentNode);
    if (css.transform !== "none" || css.perspective !== "none" || css.contain === "paint" || ["transform", "perspective"].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === "filter" || isFirefox && css.filter && css.filter !== "none") {
      return currentNode;
    } else {
      currentNode = currentNode.parentNode;
    }
  }
  return null;
}
function getOffsetParent(element) {
  var window2 = getWindow(element);
  var offsetParent = getTrueOffsetParent(element);
  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === "static") {
    offsetParent = getTrueOffsetParent(offsetParent);
  }
  if (offsetParent && (getNodeName(offsetParent) === "html" || getNodeName(offsetParent) === "body" && getComputedStyle(offsetParent).position === "static")) {
    return window2;
  }
  return offsetParent || getContainingBlock(element) || window2;
}

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js
function getMainAxisFromPlacement(placement) {
  return ["top", "bottom"].indexOf(placement) >= 0 ? "x" : "y";
}

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/utils/within.js
function within(min3, value, max3) {
  return max(min3, min(value, max3));
}
function withinMaxClamp(min3, value, max3) {
  var v = within(min3, value, max3);
  return v > max3 ? max3 : v;
}

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/utils/getFreshSideObject.js
function getFreshSideObject() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/utils/mergePaddingObject.js
function mergePaddingObject(paddingObject) {
  return Object.assign({}, getFreshSideObject(), paddingObject);
}

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/utils/expandToHashMap.js
function expandToHashMap(value, keys) {
  return keys.reduce(function(hashMap, key) {
    hashMap[key] = value;
    return hashMap;
  }, {});
}

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/modifiers/arrow.js
var toPaddingObject = function toPaddingObject2(padding, state) {
  padding = typeof padding === "function" ? padding(Object.assign({}, state.rects, {
    placement: state.placement
  })) : padding;
  return mergePaddingObject(typeof padding !== "number" ? padding : expandToHashMap(padding, basePlacements));
};
function arrow(_ref) {
  var _state$modifiersData$;
  var state = _ref.state, name = _ref.name, options = _ref.options;
  var arrowElement = state.elements.arrow;
  var popperOffsets2 = state.modifiersData.popperOffsets;
  var basePlacement = getBasePlacement(state.placement);
  var axis = getMainAxisFromPlacement(basePlacement);
  var isVertical = [left, right].indexOf(basePlacement) >= 0;
  var len = isVertical ? "height" : "width";
  if (!arrowElement || !popperOffsets2) {
    return;
  }
  var paddingObject = toPaddingObject(options.padding, state);
  var arrowRect = getLayoutRect(arrowElement);
  var minProp = axis === "y" ? top : left;
  var maxProp = axis === "y" ? bottom : right;
  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets2[axis] - state.rects.popper[len];
  var startDiff = popperOffsets2[axis] - state.rects.reference[axis];
  var arrowOffsetParent = getOffsetParent(arrowElement);
  var clientSize = arrowOffsetParent ? axis === "y" ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
  var centerToReference = endDiff / 2 - startDiff / 2;
  var min3 = paddingObject[minProp];
  var max3 = clientSize - arrowRect[len] - paddingObject[maxProp];
  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;
  var offset2 = within(min3, center, max3);
  var axisProp = axis;
  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset2, _state$modifiersData$.centerOffset = offset2 - center, _state$modifiersData$);
}
function effect2(_ref2) {
  var state = _ref2.state, options = _ref2.options;
  var _options$element = options.element, arrowElement = _options$element === void 0 ? "[data-popper-arrow]" : _options$element;
  if (arrowElement == null) {
    return;
  }
  if (typeof arrowElement === "string") {
    arrowElement = state.elements.popper.querySelector(arrowElement);
    if (!arrowElement) {
      return;
    }
  }
  if (!contains(state.elements.popper, arrowElement)) {
    return;
  }
  state.elements.arrow = arrowElement;
}
var arrow_default = {
  name: "arrow",
  enabled: true,
  phase: "main",
  fn: arrow,
  effect: effect2,
  requires: ["popperOffsets"],
  requiresIfExists: ["preventOverflow"]
};

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/utils/getVariation.js
function getVariation(placement) {
  return placement.split("-")[1];
}

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/modifiers/computeStyles.js
var unsetSides = {
  top: "auto",
  right: "auto",
  bottom: "auto",
  left: "auto"
};
function roundOffsetsByDPR(_ref, win) {
  var x = _ref.x, y = _ref.y;
  var dpr = win.devicePixelRatio || 1;
  return {
    x: round(x * dpr) / dpr || 0,
    y: round(y * dpr) / dpr || 0
  };
}
function mapToStyles(_ref2) {
  var _Object$assign2;
  var popper2 = _ref2.popper, popperRect = _ref2.popperRect, placement = _ref2.placement, variation = _ref2.variation, offsets = _ref2.offsets, position = _ref2.position, gpuAcceleration = _ref2.gpuAcceleration, adaptive = _ref2.adaptive, roundOffsets = _ref2.roundOffsets, isFixed = _ref2.isFixed;
  var _offsets$x = offsets.x, x = _offsets$x === void 0 ? 0 : _offsets$x, _offsets$y = offsets.y, y = _offsets$y === void 0 ? 0 : _offsets$y;
  var _ref3 = typeof roundOffsets === "function" ? roundOffsets({
    x,
    y
  }) : {
    x,
    y
  };
  x = _ref3.x;
  y = _ref3.y;
  var hasX = offsets.hasOwnProperty("x");
  var hasY = offsets.hasOwnProperty("y");
  var sideX = left;
  var sideY = top;
  var win = window;
  if (adaptive) {
    var offsetParent = getOffsetParent(popper2);
    var heightProp = "clientHeight";
    var widthProp = "clientWidth";
    if (offsetParent === getWindow(popper2)) {
      offsetParent = getDocumentElement(popper2);
      if (getComputedStyle(offsetParent).position !== "static" && position === "absolute") {
        heightProp = "scrollHeight";
        widthProp = "scrollWidth";
      }
    }
    offsetParent = offsetParent;
    if (placement === top || (placement === left || placement === right) && variation === end) {
      sideY = bottom;
      var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : offsetParent[heightProp];
      y -= offsetY - popperRect.height;
      y *= gpuAcceleration ? 1 : -1;
    }
    if (placement === left || (placement === top || placement === bottom) && variation === end) {
      sideX = right;
      var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : offsetParent[widthProp];
      x -= offsetX - popperRect.width;
      x *= gpuAcceleration ? 1 : -1;
    }
  }
  var commonStyles = Object.assign({
    position
  }, adaptive && unsetSides);
  var _ref4 = roundOffsets === true ? roundOffsetsByDPR({
    x,
    y
  }, getWindow(popper2)) : {
    x,
    y
  };
  x = _ref4.x;
  y = _ref4.y;
  if (gpuAcceleration) {
    var _Object$assign;
    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? "0" : "", _Object$assign[sideX] = hasX ? "0" : "", _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? "translate(" + x + "px, " + y + "px)" : "translate3d(" + x + "px, " + y + "px, 0)", _Object$assign));
  }
  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + "px" : "", _Object$assign2[sideX] = hasX ? x + "px" : "", _Object$assign2.transform = "", _Object$assign2));
}
function computeStyles(_ref5) {
  var state = _ref5.state, options = _ref5.options;
  var _options$gpuAccelerat = options.gpuAcceleration, gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat, _options$adaptive = options.adaptive, adaptive = _options$adaptive === void 0 ? true : _options$adaptive, _options$roundOffsets = options.roundOffsets, roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;
  var commonStyles = {
    placement: getBasePlacement(state.placement),
    variation: getVariation(state.placement),
    popper: state.elements.popper,
    popperRect: state.rects.popper,
    gpuAcceleration,
    isFixed: state.options.strategy === "fixed"
  };
  if (state.modifiersData.popperOffsets != null) {
    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.popperOffsets,
      position: state.options.strategy,
      adaptive,
      roundOffsets
    })));
  }
  if (state.modifiersData.arrow != null) {
    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.arrow,
      position: "absolute",
      adaptive: false,
      roundOffsets
    })));
  }
  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    "data-popper-placement": state.placement
  });
}
var computeStyles_default = {
  name: "computeStyles",
  enabled: true,
  phase: "beforeWrite",
  fn: computeStyles,
  data: {}
};

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/modifiers/eventListeners.js
var passive = {
  passive: true
};
function effect3(_ref) {
  var state = _ref.state, instance = _ref.instance, options = _ref.options;
  var _options$scroll = options.scroll, scroll = _options$scroll === void 0 ? true : _options$scroll, _options$resize = options.resize, resize = _options$resize === void 0 ? true : _options$resize;
  var window2 = getWindow(state.elements.popper);
  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);
  if (scroll) {
    scrollParents.forEach(function(scrollParent) {
      scrollParent.addEventListener("scroll", instance.update, passive);
    });
  }
  if (resize) {
    window2.addEventListener("resize", instance.update, passive);
  }
  return function() {
    if (scroll) {
      scrollParents.forEach(function(scrollParent) {
        scrollParent.removeEventListener("scroll", instance.update, passive);
      });
    }
    if (resize) {
      window2.removeEventListener("resize", instance.update, passive);
    }
  };
}
var eventListeners_default = {
  name: "eventListeners",
  enabled: true,
  phase: "write",
  fn: function fn() {
  },
  effect: effect3,
  data: {}
};

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/utils/getOppositePlacement.js
var hash = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
};
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, function(matched) {
    return hash[matched];
  });
}

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js
var hash2 = {
  start: "end",
  end: "start"
};
function getOppositeVariationPlacement(placement) {
  return placement.replace(/start|end/g, function(matched) {
    return hash2[matched];
  });
}

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js
function getWindowScroll(node) {
  var win = getWindow(node);
  var scrollLeft = win.pageXOffset;
  var scrollTop = win.pageYOffset;
  return {
    scrollLeft,
    scrollTop
  };
}

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js
function getWindowScrollBarX(element) {
  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;
}

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js
function getViewportRect(element, strategy) {
  var win = getWindow(element);
  var html = getDocumentElement(element);
  var visualViewport = win.visualViewport;
  var width = html.clientWidth;
  var height = html.clientHeight;
  var x = 0;
  var y = 0;
  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height;
    var layoutViewport = isLayoutViewport();
    if (layoutViewport || !layoutViewport && strategy === "fixed") {
      x = visualViewport.offsetLeft;
      y = visualViewport.offsetTop;
    }
  }
  return {
    width,
    height,
    x: x + getWindowScrollBarX(element),
    y
  };
}

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js
function getDocumentRect(element) {
  var _element$ownerDocumen;
  var html = getDocumentElement(element);
  var winScroll = getWindowScroll(element);
  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;
  var width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
  var height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
  var x = -winScroll.scrollLeft + getWindowScrollBarX(element);
  var y = -winScroll.scrollTop;
  if (getComputedStyle(body || html).direction === "rtl") {
    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;
  }
  return {
    width,
    height,
    x,
    y
  };
}

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js
function isScrollParent(element) {
  var _getComputedStyle = getComputedStyle(element), overflow = _getComputedStyle.overflow, overflowX = _getComputedStyle.overflowX, overflowY = _getComputedStyle.overflowY;
  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
}

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js
function getScrollParent(node) {
  if (["html", "body", "#document"].indexOf(getNodeName(node)) >= 0) {
    return node.ownerDocument.body;
  }
  if (isHTMLElement(node) && isScrollParent(node)) {
    return node;
  }
  return getScrollParent(getParentNode(node));
}

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js
function listScrollParents(element, list) {
  var _element$ownerDocumen;
  if (list === void 0) {
    list = [];
  }
  var scrollParent = getScrollParent(element);
  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);
  var win = getWindow(scrollParent);
  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;
  var updatedList = list.concat(target);
  return isBody ? updatedList : updatedList.concat(listScrollParents(getParentNode(target)));
}

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/utils/rectToClientRect.js
function rectToClientRect(rect) {
  return Object.assign({}, rect, {
    left: rect.x,
    top: rect.y,
    right: rect.x + rect.width,
    bottom: rect.y + rect.height
  });
}

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js
function getInnerBoundingClientRect(element, strategy) {
  var rect = getBoundingClientRect(element, false, strategy === "fixed");
  rect.top = rect.top + element.clientTop;
  rect.left = rect.left + element.clientLeft;
  rect.bottom = rect.top + element.clientHeight;
  rect.right = rect.left + element.clientWidth;
  rect.width = element.clientWidth;
  rect.height = element.clientHeight;
  rect.x = rect.left;
  rect.y = rect.top;
  return rect;
}
function getClientRectFromMixedType(element, clippingParent, strategy) {
  return clippingParent === viewport ? rectToClientRect(getViewportRect(element, strategy)) : isElement(clippingParent) ? getInnerBoundingClientRect(clippingParent, strategy) : rectToClientRect(getDocumentRect(getDocumentElement(element)));
}
function getClippingParents(element) {
  var clippingParents2 = listScrollParents(getParentNode(element));
  var canEscapeClipping = ["absolute", "fixed"].indexOf(getComputedStyle(element).position) >= 0;
  var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;
  if (!isElement(clipperElement)) {
    return [];
  }
  return clippingParents2.filter(function(clippingParent) {
    return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== "body";
  });
}
function getClippingRect(element, boundary, rootBoundary, strategy) {
  var mainClippingParents = boundary === "clippingParents" ? getClippingParents(element) : [].concat(boundary);
  var clippingParents2 = [].concat(mainClippingParents, [rootBoundary]);
  var firstClippingParent = clippingParents2[0];
  var clippingRect = clippingParents2.reduce(function(accRect, clippingParent) {
    var rect = getClientRectFromMixedType(element, clippingParent, strategy);
    accRect.top = max(rect.top, accRect.top);
    accRect.right = min(rect.right, accRect.right);
    accRect.bottom = min(rect.bottom, accRect.bottom);
    accRect.left = max(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromMixedType(element, firstClippingParent, strategy));
  clippingRect.width = clippingRect.right - clippingRect.left;
  clippingRect.height = clippingRect.bottom - clippingRect.top;
  clippingRect.x = clippingRect.left;
  clippingRect.y = clippingRect.top;
  return clippingRect;
}

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/utils/computeOffsets.js
function computeOffsets(_ref) {
  var reference2 = _ref.reference, element = _ref.element, placement = _ref.placement;
  var basePlacement = placement ? getBasePlacement(placement) : null;
  var variation = placement ? getVariation(placement) : null;
  var commonX = reference2.x + reference2.width / 2 - element.width / 2;
  var commonY = reference2.y + reference2.height / 2 - element.height / 2;
  var offsets;
  switch (basePlacement) {
    case top:
      offsets = {
        x: commonX,
        y: reference2.y - element.height
      };
      break;
    case bottom:
      offsets = {
        x: commonX,
        y: reference2.y + reference2.height
      };
      break;
    case right:
      offsets = {
        x: reference2.x + reference2.width,
        y: commonY
      };
      break;
    case left:
      offsets = {
        x: reference2.x - element.width,
        y: commonY
      };
      break;
    default:
      offsets = {
        x: reference2.x,
        y: reference2.y
      };
  }
  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;
  if (mainAxis != null) {
    var len = mainAxis === "y" ? "height" : "width";
    switch (variation) {
      case start:
        offsets[mainAxis] = offsets[mainAxis] - (reference2[len] / 2 - element[len] / 2);
        break;
      case end:
        offsets[mainAxis] = offsets[mainAxis] + (reference2[len] / 2 - element[len] / 2);
        break;
      default:
    }
  }
  return offsets;
}

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/utils/detectOverflow.js
function detectOverflow(state, options) {
  if (options === void 0) {
    options = {};
  }
  var _options = options, _options$placement = _options.placement, placement = _options$placement === void 0 ? state.placement : _options$placement, _options$strategy = _options.strategy, strategy = _options$strategy === void 0 ? state.strategy : _options$strategy, _options$boundary = _options.boundary, boundary = _options$boundary === void 0 ? clippingParents : _options$boundary, _options$rootBoundary = _options.rootBoundary, rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary, _options$elementConte = _options.elementContext, elementContext = _options$elementConte === void 0 ? popper : _options$elementConte, _options$altBoundary = _options.altBoundary, altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary, _options$padding = _options.padding, padding = _options$padding === void 0 ? 0 : _options$padding;
  var paddingObject = mergePaddingObject(typeof padding !== "number" ? padding : expandToHashMap(padding, basePlacements));
  var altContext = elementContext === popper ? reference : popper;
  var popperRect = state.rects.popper;
  var element = state.elements[altBoundary ? altContext : elementContext];
  var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary, strategy);
  var referenceClientRect = getBoundingClientRect(state.elements.reference);
  var popperOffsets2 = computeOffsets({
    reference: referenceClientRect,
    element: popperRect,
    strategy: "absolute",
    placement
  });
  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets2));
  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect;
  var overflowOffsets = {
    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
    right: elementClientRect.right - clippingClientRect.right + paddingObject.right
  };
  var offsetData = state.modifiersData.offset;
  if (elementContext === popper && offsetData) {
    var offset2 = offsetData[placement];
    Object.keys(overflowOffsets).forEach(function(key) {
      var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;
      var axis = [top, bottom].indexOf(key) >= 0 ? "y" : "x";
      overflowOffsets[key] += offset2[axis] * multiply;
    });
  }
  return overflowOffsets;
}

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js
function computeAutoPlacement(state, options) {
  if (options === void 0) {
    options = {};
  }
  var _options = options, placement = _options.placement, boundary = _options.boundary, rootBoundary = _options.rootBoundary, padding = _options.padding, flipVariations = _options.flipVariations, _options$allowedAutoP = _options.allowedAutoPlacements, allowedAutoPlacements = _options$allowedAutoP === void 0 ? placements : _options$allowedAutoP;
  var variation = getVariation(placement);
  var placements2 = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function(placement2) {
    return getVariation(placement2) === variation;
  }) : basePlacements;
  var allowedPlacements = placements2.filter(function(placement2) {
    return allowedAutoPlacements.indexOf(placement2) >= 0;
  });
  if (allowedPlacements.length === 0) {
    allowedPlacements = placements2;
  }
  var overflows = allowedPlacements.reduce(function(acc, placement2) {
    acc[placement2] = detectOverflow(state, {
      placement: placement2,
      boundary,
      rootBoundary,
      padding
    })[getBasePlacement(placement2)];
    return acc;
  }, {});
  return Object.keys(overflows).sort(function(a, b) {
    return overflows[a] - overflows[b];
  });
}

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/modifiers/flip.js
function getExpandedFallbackPlacements(placement) {
  if (getBasePlacement(placement) === auto) {
    return [];
  }
  var oppositePlacement = getOppositePlacement(placement);
  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];
}
function flip(_ref) {
  var state = _ref.state, options = _ref.options, name = _ref.name;
  if (state.modifiersData[name]._skip) {
    return;
  }
  var _options$mainAxis = options.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options.altAxis, checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis, specifiedFallbackPlacements = options.fallbackPlacements, padding = options.padding, boundary = options.boundary, rootBoundary = options.rootBoundary, altBoundary = options.altBoundary, _options$flipVariatio = options.flipVariations, flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio, allowedAutoPlacements = options.allowedAutoPlacements;
  var preferredPlacement = state.options.placement;
  var basePlacement = getBasePlacement(preferredPlacement);
  var isBasePlacement = basePlacement === preferredPlacement;
  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));
  var placements2 = [preferredPlacement].concat(fallbackPlacements).reduce(function(acc, placement2) {
    return acc.concat(getBasePlacement(placement2) === auto ? computeAutoPlacement(state, {
      placement: placement2,
      boundary,
      rootBoundary,
      padding,
      flipVariations,
      allowedAutoPlacements
    }) : placement2);
  }, []);
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var checksMap = new Map();
  var makeFallbackChecks = true;
  var firstFittingPlacement = placements2[0];
  for (var i = 0; i < placements2.length; i++) {
    var placement = placements2[i];
    var _basePlacement = getBasePlacement(placement);
    var isStartVariation = getVariation(placement) === start;
    var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;
    var len = isVertical ? "width" : "height";
    var overflow = detectOverflow(state, {
      placement,
      boundary,
      rootBoundary,
      altBoundary,
      padding
    });
    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;
    if (referenceRect[len] > popperRect[len]) {
      mainVariationSide = getOppositePlacement(mainVariationSide);
    }
    var altVariationSide = getOppositePlacement(mainVariationSide);
    var checks = [];
    if (checkMainAxis) {
      checks.push(overflow[_basePlacement] <= 0);
    }
    if (checkAltAxis) {
      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);
    }
    if (checks.every(function(check) {
      return check;
    })) {
      firstFittingPlacement = placement;
      makeFallbackChecks = false;
      break;
    }
    checksMap.set(placement, checks);
  }
  if (makeFallbackChecks) {
    var numberOfChecks = flipVariations ? 3 : 1;
    var _loop = function _loop2(_i2) {
      var fittingPlacement = placements2.find(function(placement2) {
        var checks2 = checksMap.get(placement2);
        if (checks2) {
          return checks2.slice(0, _i2).every(function(check) {
            return check;
          });
        }
      });
      if (fittingPlacement) {
        firstFittingPlacement = fittingPlacement;
        return "break";
      }
    };
    for (var _i = numberOfChecks; _i > 0; _i--) {
      var _ret = _loop(_i);
      if (_ret === "break")
        break;
    }
  }
  if (state.placement !== firstFittingPlacement) {
    state.modifiersData[name]._skip = true;
    state.placement = firstFittingPlacement;
    state.reset = true;
  }
}
var flip_default = {
  name: "flip",
  enabled: true,
  phase: "main",
  fn: flip,
  requiresIfExists: ["offset"],
  data: {
    _skip: false
  }
};

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/modifiers/hide.js
function getSideOffsets(overflow, rect, preventedOffsets) {
  if (preventedOffsets === void 0) {
    preventedOffsets = {
      x: 0,
      y: 0
    };
  }
  return {
    top: overflow.top - rect.height - preventedOffsets.y,
    right: overflow.right - rect.width + preventedOffsets.x,
    bottom: overflow.bottom - rect.height + preventedOffsets.y,
    left: overflow.left - rect.width - preventedOffsets.x
  };
}
function isAnySideFullyClipped(overflow) {
  return [top, right, bottom, left].some(function(side) {
    return overflow[side] >= 0;
  });
}
function hide(_ref) {
  var state = _ref.state, name = _ref.name;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var preventedOffsets = state.modifiersData.preventOverflow;
  var referenceOverflow = detectOverflow(state, {
    elementContext: "reference"
  });
  var popperAltOverflow = detectOverflow(state, {
    altBoundary: true
  });
  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);
  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);
  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);
  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);
  state.modifiersData[name] = {
    referenceClippingOffsets,
    popperEscapeOffsets,
    isReferenceHidden,
    hasPopperEscaped
  };
  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    "data-popper-reference-hidden": isReferenceHidden,
    "data-popper-escaped": hasPopperEscaped
  });
}
var hide_default = {
  name: "hide",
  enabled: true,
  phase: "main",
  requiresIfExists: ["preventOverflow"],
  fn: hide
};

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/modifiers/offset.js
function distanceAndSkiddingToXY(placement, rects, offset2) {
  var basePlacement = getBasePlacement(placement);
  var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;
  var _ref = typeof offset2 === "function" ? offset2(Object.assign({}, rects, {
    placement
  })) : offset2, skidding = _ref[0], distance = _ref[1];
  skidding = skidding || 0;
  distance = (distance || 0) * invertDistance;
  return [left, right].indexOf(basePlacement) >= 0 ? {
    x: distance,
    y: skidding
  } : {
    x: skidding,
    y: distance
  };
}
function offset(_ref2) {
  var state = _ref2.state, options = _ref2.options, name = _ref2.name;
  var _options$offset = options.offset, offset2 = _options$offset === void 0 ? [0, 0] : _options$offset;
  var data = placements.reduce(function(acc, placement) {
    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset2);
    return acc;
  }, {});
  var _data$state$placement = data[state.placement], x = _data$state$placement.x, y = _data$state$placement.y;
  if (state.modifiersData.popperOffsets != null) {
    state.modifiersData.popperOffsets.x += x;
    state.modifiersData.popperOffsets.y += y;
  }
  state.modifiersData[name] = data;
}
var offset_default = {
  name: "offset",
  enabled: true,
  phase: "main",
  requires: ["popperOffsets"],
  fn: offset
};

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/modifiers/popperOffsets.js
function popperOffsets(_ref) {
  var state = _ref.state, name = _ref.name;
  state.modifiersData[name] = computeOffsets({
    reference: state.rects.reference,
    element: state.rects.popper,
    strategy: "absolute",
    placement: state.placement
  });
}
var popperOffsets_default = {
  name: "popperOffsets",
  enabled: true,
  phase: "read",
  fn: popperOffsets,
  data: {}
};

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/utils/getAltAxis.js
function getAltAxis(axis) {
  return axis === "x" ? "y" : "x";
}

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/modifiers/preventOverflow.js
function preventOverflow(_ref) {
  var state = _ref.state, options = _ref.options, name = _ref.name;
  var _options$mainAxis = options.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options.altAxis, checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis, boundary = options.boundary, rootBoundary = options.rootBoundary, altBoundary = options.altBoundary, padding = options.padding, _options$tether = options.tether, tether = _options$tether === void 0 ? true : _options$tether, _options$tetherOffset = options.tetherOffset, tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
  var overflow = detectOverflow(state, {
    boundary,
    rootBoundary,
    padding,
    altBoundary
  });
  var basePlacement = getBasePlacement(state.placement);
  var variation = getVariation(state.placement);
  var isBasePlacement = !variation;
  var mainAxis = getMainAxisFromPlacement(basePlacement);
  var altAxis = getAltAxis(mainAxis);
  var popperOffsets2 = state.modifiersData.popperOffsets;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var tetherOffsetValue = typeof tetherOffset === "function" ? tetherOffset(Object.assign({}, state.rects, {
    placement: state.placement
  })) : tetherOffset;
  var normalizedTetherOffsetValue = typeof tetherOffsetValue === "number" ? {
    mainAxis: tetherOffsetValue,
    altAxis: tetherOffsetValue
  } : Object.assign({
    mainAxis: 0,
    altAxis: 0
  }, tetherOffsetValue);
  var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;
  var data = {
    x: 0,
    y: 0
  };
  if (!popperOffsets2) {
    return;
  }
  if (checkMainAxis) {
    var _offsetModifierState$;
    var mainSide = mainAxis === "y" ? top : left;
    var altSide = mainAxis === "y" ? bottom : right;
    var len = mainAxis === "y" ? "height" : "width";
    var offset2 = popperOffsets2[mainAxis];
    var min3 = offset2 + overflow[mainSide];
    var max3 = offset2 - overflow[altSide];
    var additive = tether ? -popperRect[len] / 2 : 0;
    var minLen = variation === start ? referenceRect[len] : popperRect[len];
    var maxLen = variation === start ? -popperRect[len] : -referenceRect[len];
    var arrowElement = state.elements.arrow;
    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {
      width: 0,
      height: 0
    };
    var arrowPaddingObject = state.modifiersData["arrow#persistent"] ? state.modifiersData["arrow#persistent"].padding : getFreshSideObject();
    var arrowPaddingMin = arrowPaddingObject[mainSide];
    var arrowPaddingMax = arrowPaddingObject[altSide];
    var arrowLen = within(0, referenceRect[len], arrowRect[len]);
    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;
    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;
    var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);
    var clientOffset = arrowOffsetParent ? mainAxis === "y" ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;
    var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;
    var tetherMin = offset2 + minOffset - offsetModifierValue - clientOffset;
    var tetherMax = offset2 + maxOffset - offsetModifierValue;
    var preventedOffset = within(tether ? min(min3, tetherMin) : min3, offset2, tether ? max(max3, tetherMax) : max3);
    popperOffsets2[mainAxis] = preventedOffset;
    data[mainAxis] = preventedOffset - offset2;
  }
  if (checkAltAxis) {
    var _offsetModifierState$2;
    var _mainSide = mainAxis === "x" ? top : left;
    var _altSide = mainAxis === "x" ? bottom : right;
    var _offset = popperOffsets2[altAxis];
    var _len = altAxis === "y" ? "height" : "width";
    var _min = _offset + overflow[_mainSide];
    var _max = _offset - overflow[_altSide];
    var isOriginSide = [top, left].indexOf(basePlacement) !== -1;
    var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;
    var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;
    var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;
    var _preventedOffset = tether && isOriginSide ? withinMaxClamp(_tetherMin, _offset, _tetherMax) : within(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);
    popperOffsets2[altAxis] = _preventedOffset;
    data[altAxis] = _preventedOffset - _offset;
  }
  state.modifiersData[name] = data;
}
var preventOverflow_default = {
  name: "preventOverflow",
  enabled: true,
  phase: "main",
  fn: preventOverflow,
  requiresIfExists: ["offset"]
};

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js
function getHTMLElementScroll(element) {
  return {
    scrollLeft: element.scrollLeft,
    scrollTop: element.scrollTop
  };
}

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js
function getNodeScroll(node) {
  if (node === getWindow(node) || !isHTMLElement(node)) {
    return getWindowScroll(node);
  } else {
    return getHTMLElementScroll(node);
  }
}

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js
function isElementScaled(element) {
  var rect = element.getBoundingClientRect();
  var scaleX = round(rect.width) / element.offsetWidth || 1;
  var scaleY = round(rect.height) / element.offsetHeight || 1;
  return scaleX !== 1 || scaleY !== 1;
}
function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {
  if (isFixed === void 0) {
    isFixed = false;
  }
  var isOffsetParentAnElement = isHTMLElement(offsetParent);
  var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);
  var documentElement = getDocumentElement(offsetParent);
  var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled, isFixed);
  var scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  var offsets = {
    x: 0,
    y: 0
  };
  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if (getNodeName(offsetParent) !== "body" || isScrollParent(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }
    if (isHTMLElement(offsetParent)) {
      offsets = getBoundingClientRect(offsetParent, true);
      offsets.x += offsetParent.clientLeft;
      offsets.y += offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = getWindowScrollBarX(documentElement);
    }
  }
  return {
    x: rect.left + scroll.scrollLeft - offsets.x,
    y: rect.top + scroll.scrollTop - offsets.y,
    width: rect.width,
    height: rect.height
  };
}

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/utils/orderModifiers.js
function order(modifiers) {
  var map = new Map();
  var visited = new Set();
  var result = [];
  modifiers.forEach(function(modifier) {
    map.set(modifier.name, modifier);
  });
  function sort(modifier) {
    visited.add(modifier.name);
    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);
    requires.forEach(function(dep) {
      if (!visited.has(dep)) {
        var depModifier = map.get(dep);
        if (depModifier) {
          sort(depModifier);
        }
      }
    });
    result.push(modifier);
  }
  modifiers.forEach(function(modifier) {
    if (!visited.has(modifier.name)) {
      sort(modifier);
    }
  });
  return result;
}
function orderModifiers(modifiers) {
  var orderedModifiers = order(modifiers);
  return modifierPhases.reduce(function(acc, phase) {
    return acc.concat(orderedModifiers.filter(function(modifier) {
      return modifier.phase === phase;
    }));
  }, []);
}

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/utils/debounce.js
function debounce(fn2) {
  var pending;
  return function() {
    if (!pending) {
      pending = new Promise(function(resolve) {
        Promise.resolve().then(function() {
          pending = void 0;
          resolve(fn2());
        });
      });
    }
    return pending;
  };
}

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/utils/mergeByName.js
function mergeByName(modifiers) {
  var merged = modifiers.reduce(function(merged2, current) {
    var existing = merged2[current.name];
    merged2[current.name] = existing ? Object.assign({}, existing, current, {
      options: Object.assign({}, existing.options, current.options),
      data: Object.assign({}, existing.data, current.data)
    }) : current;
    return merged2;
  }, {});
  return Object.keys(merged).map(function(key) {
    return merged[key];
  });
}

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/createPopper.js
var DEFAULT_OPTIONS = {
  placement: "bottom",
  modifiers: [],
  strategy: "absolute"
};
function areValidElements() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  return !args.some(function(element) {
    return !(element && typeof element.getBoundingClientRect === "function");
  });
}
function popperGenerator(generatorOptions) {
  if (generatorOptions === void 0) {
    generatorOptions = {};
  }
  var _generatorOptions = generatorOptions, _generatorOptions$def = _generatorOptions.defaultModifiers, defaultModifiers2 = _generatorOptions$def === void 0 ? [] : _generatorOptions$def, _generatorOptions$def2 = _generatorOptions.defaultOptions, defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;
  return function createPopper2(reference2, popper2, options) {
    if (options === void 0) {
      options = defaultOptions;
    }
    var state = {
      placement: "bottom",
      orderedModifiers: [],
      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),
      modifiersData: {},
      elements: {
        reference: reference2,
        popper: popper2
      },
      attributes: {},
      styles: {}
    };
    var effectCleanupFns = [];
    var isDestroyed = false;
    var instance = {
      state,
      setOptions: function setOptions(setOptionsAction) {
        var options2 = typeof setOptionsAction === "function" ? setOptionsAction(state.options) : setOptionsAction;
        cleanupModifierEffects();
        state.options = Object.assign({}, defaultOptions, state.options, options2);
        state.scrollParents = {
          reference: isElement(reference2) ? listScrollParents(reference2) : reference2.contextElement ? listScrollParents(reference2.contextElement) : [],
          popper: listScrollParents(popper2)
        };
        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers2, state.options.modifiers)));
        state.orderedModifiers = orderedModifiers.filter(function(m) {
          return m.enabled;
        });
        runModifierEffects();
        return instance.update();
      },
      forceUpdate: function forceUpdate() {
        if (isDestroyed) {
          return;
        }
        var _state$elements = state.elements, reference3 = _state$elements.reference, popper3 = _state$elements.popper;
        if (!areValidElements(reference3, popper3)) {
          return;
        }
        state.rects = {
          reference: getCompositeRect(reference3, getOffsetParent(popper3), state.options.strategy === "fixed"),
          popper: getLayoutRect(popper3)
        };
        state.reset = false;
        state.placement = state.options.placement;
        state.orderedModifiers.forEach(function(modifier) {
          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);
        });
        for (var index = 0; index < state.orderedModifiers.length; index++) {
          if (state.reset === true) {
            state.reset = false;
            index = -1;
            continue;
          }
          var _state$orderedModifie = state.orderedModifiers[index], fn2 = _state$orderedModifie.fn, _state$orderedModifie2 = _state$orderedModifie.options, _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2, name = _state$orderedModifie.name;
          if (typeof fn2 === "function") {
            state = fn2({
              state,
              options: _options,
              name,
              instance
            }) || state;
          }
        }
      },
      update: debounce(function() {
        return new Promise(function(resolve) {
          instance.forceUpdate();
          resolve(state);
        });
      }),
      destroy: function destroy() {
        cleanupModifierEffects();
        isDestroyed = true;
      }
    };
    if (!areValidElements(reference2, popper2)) {
      return instance;
    }
    instance.setOptions(options).then(function(state2) {
      if (!isDestroyed && options.onFirstUpdate) {
        options.onFirstUpdate(state2);
      }
    });
    function runModifierEffects() {
      state.orderedModifiers.forEach(function(_ref) {
        var name = _ref.name, _ref$options = _ref.options, options2 = _ref$options === void 0 ? {} : _ref$options, effect4 = _ref.effect;
        if (typeof effect4 === "function") {
          var cleanupFn = effect4({
            state,
            name,
            instance,
            options: options2
          });
          var noopFn = function noopFn2() {
          };
          effectCleanupFns.push(cleanupFn || noopFn);
        }
      });
    }
    function cleanupModifierEffects() {
      effectCleanupFns.forEach(function(fn2) {
        return fn2();
      });
      effectCleanupFns = [];
    }
    return instance;
  };
}

// node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/popper.js
var defaultModifiers = [eventListeners_default, popperOffsets_default, computeStyles_default, applyStyles_default, offset_default, flip_default, preventOverflow_default, arrow_default, hide_default];
var createPopper = /* @__PURE__ */ popperGenerator({
  defaultModifiers
});

// node_modules/.pnpm/github.com+SilentVoid13+Templater@0596dc2c756e8c581d55ca3fd897abcb01f6c271_iyipxpmfmyjdxjfl56nicbfbvm/node_modules/templater-obsidian/src/settings/suggesters/suggest.ts
var wrapAround = (value, size) => {
  return (value % size + size) % size;
};
var Suggest = class {
  constructor(owner, containerEl, scope) {
    this.owner = owner;
    this.containerEl = containerEl;
    containerEl.on("click", ".suggestion-item", this.onSuggestionClick.bind(this));
    containerEl.on("mousemove", ".suggestion-item", this.onSuggestionMouseover.bind(this));
    scope.register([], "ArrowUp", (event) => {
      if (!event.isComposing) {
        this.setSelectedItem(this.selectedItem - 1, true);
        return false;
      }
    });
    scope.register([], "ArrowDown", (event) => {
      if (!event.isComposing) {
        this.setSelectedItem(this.selectedItem + 1, true);
        return false;
      }
    });
    scope.register([], "Enter", (event) => {
      if (!event.isComposing) {
        this.useSelectedItem(event);
        return false;
      }
    });
  }
  onSuggestionClick(event, el) {
    event.preventDefault();
    const item = this.suggestions.indexOf(el);
    this.setSelectedItem(item, false);
    this.useSelectedItem(event);
  }
  onSuggestionMouseover(_event, el) {
    const item = this.suggestions.indexOf(el);
    this.setSelectedItem(item, false);
  }
  setSuggestions(values) {
    this.containerEl.empty();
    const suggestionEls = [];
    values.forEach((value) => {
      const suggestionEl = this.containerEl.createDiv("suggestion-item");
      this.owner.renderSuggestion(value, suggestionEl);
      suggestionEls.push(suggestionEl);
    });
    this.values = values;
    this.suggestions = suggestionEls;
    this.setSelectedItem(0, false);
  }
  useSelectedItem(event) {
    const currentValue = this.values[this.selectedItem];
    if (currentValue) {
      this.owner.selectSuggestion(currentValue, event);
    }
  }
  setSelectedItem(selectedIndex, scrollIntoView) {
    const normalizedIndex = wrapAround(selectedIndex, this.suggestions.length);
    const prevSelectedSuggestion = this.suggestions[this.selectedItem];
    const selectedSuggestion = this.suggestions[normalizedIndex];
    prevSelectedSuggestion?.removeClass("is-selected");
    selectedSuggestion?.addClass("is-selected");
    this.selectedItem = normalizedIndex;
    if (scrollIntoView) {
      selectedSuggestion.scrollIntoView(false);
    }
  }
};
var TextInputSuggest = class {
  constructor(inputEl) {
    this.inputEl = inputEl;
    this.scope = new import_obsidian3.Scope();
    this.suggestEl = createDiv("suggestion-container");
    const suggestion = this.suggestEl.createDiv("suggestion");
    this.suggest = new Suggest(this, suggestion, this.scope);
    this.scope.register([], "Escape", this.close.bind(this));
    this.inputEl.addEventListener("input", this.onInputChanged.bind(this));
    this.inputEl.addEventListener("focus", this.onInputChanged.bind(this));
    this.inputEl.addEventListener("blur", this.close.bind(this));
    this.suggestEl.on("mousedown", ".suggestion-container", (event) => {
      event.preventDefault();
    });
  }
  onInputChanged() {
    const inputStr = this.inputEl.value;
    const suggestions = this.getSuggestions(inputStr);
    if (!suggestions) {
      this.close();
      return;
    }
    if (suggestions.length > 0) {
      this.suggest.setSuggestions(suggestions);
      this.open(app.dom.appContainerEl, this.inputEl);
    } else {
      this.close();
    }
  }
  open(container, inputEl) {
    app.keymap.pushScope(this.scope);
    container.appendChild(this.suggestEl);
    this.popper = createPopper(inputEl, this.suggestEl, {
      placement: "bottom-start",
      modifiers: [
        {
          name: "sameWidth",
          enabled: true,
          fn: ({ state, instance }) => {
            const targetWidth = `${state.rects.reference.width}px`;
            if (state.styles.popper.width === targetWidth) {
              return;
            }
            state.styles.popper.width = targetWidth;
            instance.update();
          },
          phase: "beforeWrite",
          requires: ["computeStyles"]
        }
      ]
    });
  }
  close() {
    app.keymap.popScope(this.scope);
    this.suggest.setSuggestions([]);
    if (this.popper)
      this.popper.destroy();
    this.suggestEl.detach();
  }
};

// src/utils/suggestionRenderer.ts
var import_obsidian4 = __toModule(require("obsidian"));
var SuggestionRenderer = class {
  constructor(containerEl) {
    this.title = "";
    this.note = "";
    this.hasIcon = false;
    containerEl.addClass("fz-item");
    this.containerEl = containerEl;
    this.contentEl = this.containerEl.createEl("div", { cls: "fz-suggestion-content" });
    this.titleEl = this.contentEl.createEl("div", { cls: "fz-suggestion-title" });
    this.noteEl = this.contentEl.createEl("div", {
      cls: "fz-suggestion-note"
    });
    this.toHighlightEl = this.titleEl;
  }
  setToHighlightEl(name) {
    this.toHighlightEl = this[`${name}El`];
  }
  setIgnore() {
    this.containerEl.addClass("mod-downranked");
  }
  render(matchData) {
    let range = matchData.range, text, index = 0;
    if (this.title == "")
      this.setTitle(matchData.item.name);
    if (this.toHighlightEl == this.titleEl) {
      text = this.title;
      this.noteEl.innerText = this.note;
    } else {
      text = this.note;
      this.titleEl.innerText = this.title;
    }
    if (range) {
      for (const r of range) {
        this.toHighlightEl.appendText(text.slice(index, r[0]));
        this.toHighlightEl.createSpan({
          cls: "suggestion-highlight",
          text: text.slice(r[0], r[1] + 1)
        });
        index = r[1] + 1;
      }
    }
    this.toHighlightEl.appendText(text.slice(index));
  }
  setTitle(text) {
    this.title = text;
  }
  setNote(text) {
    this.note = text;
  }
  addIcon(icon) {
    if (!this.flairEl)
      this.flairEl = this.containerEl.createEl("span", {
        cls: "suggestion-flair"
      });
    this.flairEl.appendChild((0, import_obsidian4.getIcon)(icon));
    this.hasIcon = true;
  }
};

// src/utils/pinyinSuggest.ts
var PinyinSuggest = class extends TextInputSuggest {
  constructor(inputEl, plugin) {
    super(inputEl);
    this.plugin = plugin;
  }
  getSuggestions(inputStr) {
    if (this.getItemFunction === void 0)
      return [];
    return this.getItemFunction(inputStr);
  }
  renderSuggestion(matchData, el) {
    el.addClass("fz-item");
    new SuggestionRenderer(el).render(matchData);
  }
  selectSuggestion(matchData) {
    this.inputEl.value = matchData.item.name;
    this.inputEl.trigger("input");
    this.close();
  }
};

// src/utils/historyMatchDataNode.ts
var HistoryMatchDataNode = class {
  constructor(query) {
    this.init(query);
  }
  push(query) {
    let node = new HistoryMatchDataNode(query);
    this.next = node;
    return node;
  }
  index(index) {
    let node = this;
    for (let i = 0; i < index; i++) {
      if (node.next)
        node = node.next;
      else
        return;
    }
    return node;
  }
  init(query) {
    this.query = query;
    this.next = null;
    this.itemIndex = [];
    this.itemIndexByPath = [];
  }
};

// src/modal/fileModal.ts
var import_obsidian6 = __toModule(require("obsidian"));
var import_lodash = __toModule(require_lodash());

// src/modal/modal.ts
var import_obsidian5 = __toModule(require("obsidian"));
var FuzzyModal = class extends import_obsidian5.SuggestModal {
  constructor(app2, plugin) {
    super(app2);
    this.isPromiseCall = false;
    this.useInput = false;
    this.plugin = plugin;
    this.historyMatchData = new HistoryMatchDataNode("\0");
    this.scope.register([], "Backspace", async (e) => {
      if (this.plugin.settings.global.closeWithBackspace && this.inputEl.value === "") {
        this.close();
      }
    });
    this.scope.register(["Mod"], "N", async (e) => {
      if (this.chooser.selectedItem != this.chooser.values.length - 1)
        this.chooser.setSelectedItem(this.chooser.selectedItem + 1, e);
      else
        this.chooser.setSelectedItem(0, e);
    });
    this.scope.register(["Mod"], "P", async (e) => {
      if (this.chooser.selectedItem != 0) {
        this.chooser.setSelectedItem(this.chooser.selectedItem - 1, e);
      } else
        this.chooser.setSelectedItem(this.chooser.values.length - 1, e);
    });
  }
  onOpen() {
    this.inputEl.value = "";
    this.inputEl.focus();
    this.onInput();
  }
  getSuggestions(query) {
    if (query == "") {
      this.historyMatchData = new HistoryMatchDataNode("\0");
      return this.getEmptyInputSuggestions();
    }
    let matchData = [];
    let node = this.historyMatchData, lastNode, index = 0, _f = true;
    for (let i of query) {
      if (node) {
        if (i != node.query) {
          node.init(i);
          _f = false;
        }
      } else {
        node = lastNode.push(i);
      }
      lastNode = node;
      node = node.next;
      if (_f)
        index++;
    }
    let smathCase = /[A-Z]/.test(query) && this.plugin.settings.global.autoCaseSensitivity, indexNode = this.historyMatchData.index(index - 1), toMatchData = indexNode.itemIndex.length == 0 ? this.index.items : indexNode.itemIndex;
    for (let p of toMatchData) {
      let d = p.pinyin.match(query, p, smathCase);
      if (d)
        matchData.push(d);
    }
    matchData = matchData.sort((a, b) => b.score - a.score);
    if (!lastNode)
      lastNode = this.historyMatchData;
    lastNode.itemIndex = matchData.map((p) => p.item);
    return matchData;
  }
  renderSuggestion(matchData, el) {
    new SuggestionRenderer(el).render(matchData);
  }
  onNoSuggestion(value) {
    this.chooser.setSuggestions(null);
    if (this.useInput) {
      value = value != null ? value : {
        item: { name: this.inputEl.value, pinyin: null },
        score: -1,
        range: null
      };
      this.chooser.setSuggestions([value]);
    }
    this.chooser.addMessage(this.emptyStateText);
  }
  onClose() {
    this.contentEl.empty();
  }
  getChoosenMatchData() {
    return this.chooser.values[this.chooser.selectedItem];
  }
  getChoosenItem() {
    return this.chooser.values[this.chooser.selectedItem].item;
  }
  async openAndGetValue() {
    return await new Promise((resolve, reject) => {
      this.resolve = resolve;
      this.isPromiseCall = true;
      this.open();
    }).then((v) => {
      this.isPromiseCall = false;
      return v;
    });
  }
};

// src/modal/fileModal.ts
var DOCUMENT_EXTENSIONS = ["md", "canvas"];
var FileModal = class extends FuzzyModal {
  constructor(app2, plugin) {
    super(app2, plugin);
    this.tags = [];
    this.useInput = true;
    this.index = this.plugin.addChild(new PinyinIndex3(this.app, this.plugin));
    this.emptyStateText = "\u672A\u53D1\u73B0\u8BE5\u7B14\u8BB0\uFF0C\u6309\u4E0B\u56DE\u8F66\u521B\u5EFA\u3002";
    this.setPlaceholder("\u8F93\u5165\u4EE5\u5207\u6362\u6216\u521B\u5EFA\u6587\u4EF6\u2026\u2026");
    let i = {
      scope: this.scope,
      modifiers: null,
      key: "Enter",
      func: async (e) => {
        e.preventDefault();
        const modKey = e.ctrlKey || e.metaKey;
        const altKey = e.altKey;
        const shiftKey = e.shiftKey;
        if (shiftKey && this.inputEl.value == "")
          return;
        this.close();
        let leaf;
        let getKey = (key) => openFileKeyMap[this.plugin.settings.file[key]];
        if (modKey && altKey)
          leaf = getKey("keyCtrlAltEnter")();
        else if (modKey)
          leaf = getKey("keyCtrlEnter")();
        else if (altKey)
          leaf = getKey("keyAltEnter")();
        else
          leaf = getKey("keyEnter")();
        if (shiftKey) {
          let newFile = await createFile(this.inputEl.value);
          leaf.openFile(newFile);
        } else {
          let item = this.getChoosenItem();
          openItem(leaf, item);
        }
      }
    };
    this.scope.keys.unshift(i);
    let prompt = [
      {
        command: "ctrl \u21B5",
        purpose: this.plugin.settings.file["keyCtrlEnter"]
      },
      {
        command: "ctrl alt \u21B5",
        purpose: this.plugin.settings.file["keyCtrlAltEnter"]
      },
      {
        command: "alt \u21B5",
        purpose: this.plugin.settings.file["keyAltEnter"]
      },
      {
        command: "shift \u21B5",
        purpose: "\u521B\u5EFA\u65B0\u6587\u4EF6"
      },
      {
        command: "ctrl shift \u21B5",
        purpose: "\u521B\u5EFA\u65B0\u6587\u4EF6\u5230\u65B0\u6807\u7B7E\u9875"
      },
      {
        command: "shift alt \u21B5",
        purpose: "\u521B\u5EFA\u65B0\u6587\u4EF6\u5230\u5176\u4ED6\u9762\u677F"
      }
    ];
    if (app2.plugins.plugins["obsidian-hover-editor"]) {
      prompt.push({
        command: "ctrl o",
        purpose: "\u6253\u5F00\u5230\u65B0\u6D6E\u7A97"
      });
      this.scope.register(["Mod"], "o", (event) => {
        this.close();
        let item = this.getChoosenItem();
        const newLeaf = app2.plugins.plugins["obsidian-hover-editor"].spawnPopover(void 0, () => this.app.workspace.setActiveLeaf(newLeaf));
        openItem(newLeaf, item);
      });
    }
    this.setInstructions(prompt);
  }
  addTagInput() {
    let inputContainerEl = this.modalEl.querySelector(".prompt-input-container");
    this.tagInput = new TagInput(inputContainerEl, this.plugin);
    this.tagInput.onChange((value) => {
      if (value == "")
        this.tags = [];
      else
        this.tags = value.split(",").map((t) => t.trim());
      this.onInput();
    });
    if (this.plugin.settings.file.searchWithTag)
      this.tagInput.show();
  }
  onOpen() {
    super.onOpen();
    if (!this.tagInput)
      this.addTagInput();
  }
  onClose() {
    super.onClose();
    this.tags = [];
    this.tagInput.setValue("");
  }
  getEmptyInputSuggestions() {
    if (this.tags.length == 0) {
      this.historyMatchData = new HistoryMatchDataNode("\0");
      let items = this.index.items;
      let lastOpenFiles = this.app.workspace.getRecentFiles().map((p) => items.find((q) => q.type == "file" && q.path == p)).filter((p) => p).map((p) => ({
        item: p,
        score: 0,
        range: null,
        usePath: false,
        history: true
      }));
      return lastOpenFiles;
    } else {
      return this.index.items.filter((item) => {
        if (!item.file)
          return;
        let tagArray = getFileTagArray(item.file);
        return tagArray && tagArray.length != 0 && tagArray.every((tag) => this.tags.some((t) => tag.startsWith(t)));
      }).map((p) => ({
        item: p,
        score: 0,
        range: null,
        usePath: false
      }));
    }
  }
  getSuggestions(query) {
    if (query == "")
      return this.getEmptyInputSuggestions();
    if (query[0] == " " && this.plugin.settings.file.quicklySelectHistoryFiles) {
      let items = this.getEmptyInputSuggestions();
      this.selectSuggestion;
      switch (query.length) {
        case 1:
          return items;
        case 2:
          let index2 = (0, import_lodash.max)([
            "asdfjklgh".indexOf(query[1]),
            "1234567890".indexOf(query[1])
          ]);
          index2 = (0, import_lodash.min)([index2, items.length - 1]);
          if (index2 == -1)
            break;
          this.selectSuggestion(items[index2], new MouseEvent("click"));
      }
    }
    let matchData = [], matchData1 = [], matchData2 = [];
    let node = this.historyMatchData, lastNode, index = 0, _f = true;
    for (let i of query) {
      if (node) {
        if (i != node.query) {
          node.init(i);
          _f = false;
        }
      } else {
        node = lastNode.push(i);
      }
      lastNode = node;
      node = node.next;
      if (_f)
        index++;
    }
    let smathCase = /[A-Z]/.test(query) && this.plugin.settings.global.autoCaseSensitivity, indexNode = this.historyMatchData.index(index - 1), toMatchData = indexNode.itemIndex.length == 0 ? this.index.items : indexNode.itemIndex;
    for (let p of toMatchData) {
      let d = p.pinyin.match(query, p, smathCase);
      if (!d)
        continue;
      if (d.item.type == "unresolvedLink")
        d.score -= 15;
      if (app.metadataCache.userIgnoreFilterCache[p.path]) {
        d.score -= 1e3;
        d.ignore = true;
      }
      matchData1.push(d);
    }
    if (this.plugin.settings.file.usePathToSearch && matchData1.length <= 10) {
      toMatchData = indexNode.itemIndexByPath.length == 0 ? this.index.items : indexNode.itemIndexByPath;
      toMatchData = toMatchData.filter((p) => p.type == "file" && !matchData1.map((p2) => p2.item.path).includes(p.path));
      for (let p of toMatchData) {
        let d = p.pinyinOfPath.match(query, p, smathCase);
        if (!d)
          continue;
        if (app.metadataCache.userIgnoreFilterCache[p.path]) {
          d.score -= 1e3;
          d.ignore = true;
        }
        d.usePath = true;
        matchData2.push(d);
      }
    }
    matchData = matchData1.concat(matchData2);
    matchData = matchData.sort((a, b) => b.score - a.score);
    if (!lastNode)
      lastNode = this.historyMatchData;
    lastNode.itemIndex = matchData1.map((p) => p.item);
    lastNode.itemIndexByPath = matchData2.map((p) => p.item);
    let result = matchData.reduce((acc, cur) => {
      if (cur.item.type === "link") {
        acc.push(cur);
      } else {
        const existingItemIndex = acc.findIndex((item) => item.item.path === cur.item.path);
        if (existingItemIndex === -1) {
          acc.push(cur);
        } else if (cur.score > acc[existingItemIndex].score) {
          acc[existingItemIndex] = cur;
        }
      }
      return acc;
    }, []);
    if (this.plugin.settings.file.searchWithTag && this.tags.length > 0) {
      result = result.filter((matchData3) => {
        if (!matchData3.item.file)
          return;
        let tagArray = getFileTagArray(matchData3.item.file);
        return tagArray == null ? void 0 : tagArray.every((tag) => this.tags.some((t) => tag.startsWith(t)));
      });
    }
    return result;
  }
  renderSuggestion(matchData, el) {
    let renderer = new SuggestionRenderer(el);
    if (matchData.item.file)
      renderer.setNote(matchData.item.path);
    if (matchData.usePath)
      renderer.setToHighlightEl("note");
    if (matchData.ignore)
      renderer.setIgnore();
    if (matchData.history && this.plugin.settings.file.quicklySelectHistoryFiles) {
      let auxEl = el.createEl("span", { cls: "fz-suggestion-aux" });
      auxEl.createEl("kbd", {
        cls: "suggestion-command",
        text: this.plugin.settings.file.quicklySelectHistoryFilesHint[this.getEmptyInputSuggestions().findIndex((p) => p.item.path == matchData.item.path)]
      });
    }
    renderer.render(matchData);
    if (this.plugin.settings.file.showTags && matchData.item.file) {
      let tagArray = getFileTagArray(matchData.item.file);
      if (tagArray) {
        let tagEl = renderer.titleEl.createDiv({ cls: "fz-suggestion-tags" });
        tagArray.forEach((p) => tagEl.createEl("a", { cls: "tag", text: p }));
      }
    }
    let icon = { alias: "forward", link: "heading" };
    if (icon[matchData.item.type]) {
      renderer.addIcon(icon[matchData.item.type]);
      if (renderer.noteEl)
        renderer.noteEl.style.width = "calc(100% - 30px)";
    } else if (matchData.item.type == "unresolvedLink")
      renderer.addIcon("file-plus");
  }
  async onChooseSuggestion(matchData, e) {
    if (this.resolve) {
      this.resolve(matchData.item);
      return;
    }
    if (matchData.score == -1 || matchData.item.type == "unresolvedLink")
      matchData.item.file = await this.getChoosenItemFile(matchData);
    const modKey = e.ctrlKey || e.metaKey;
    const altKey = e.altKey;
    let leaf;
    let getKey = (key) => openFileKeyMap[this.plugin.settings.file[key]];
    if (modKey && altKey)
      leaf = getKey("keyCtrlAltEnter")();
    else if (modKey)
      leaf = getKey("keyCtrlEnter")();
    else if (altKey)
      leaf = getKey("keyAltEnter")();
    else
      leaf = getKey("keyEnter")();
    openItem(leaf, matchData.item);
  }
  onNoSuggestion() {
    super.onNoSuggestion({
      item: { type: "file", name: this.inputEl.value },
      score: -1,
      usePath: false
    });
  }
  async getChoosenItemFile(matchData) {
    matchData = matchData != null ? matchData : this.chooser.values[this.chooser.selectedItem];
    return matchData.score == -1 || matchData.item.type == "unresolvedLink" ? await createFile(matchData.item.name) : matchData.item.file;
  }
};
var getNewOrAdjacentLeaf = (leaf = app.workspace.getMostRecentLeaf()) => {
  const layout = app.workspace.getLayout();
  const getLeaves = (l) => l.children.filter((c) => c.type !== "leaf").map((c) => getLeaves(c)).flat().concat(l.children.filter((c) => c.type === "leaf").map((c) => c.id));
  const mainLeavesIds = getLeaves(layout.main);
  const getMainLeaf = () => {
    var _a;
    let mainLeaf = app.workspace.getMostRecentLeaf();
    if (mainLeaf && mainLeaf !== leaf && ((_a = mainLeaf.view) == null ? void 0 : _a.containerEl.ownerDocument) === document) {
      return mainLeaf;
    }
    mainLeavesIds.forEach((id) => {
      var _a2;
      const l = app.workspace.getLeafById(id);
      if (leaf.parent.id == l.parent.id && mainLeaf || !((_a2 = l.view) == null ? void 0 : _a2.navigation) || leaf === l)
        return;
      mainLeaf = l;
    });
    let newLeaf;
    if (mainLeaf.parent.id == leaf.parent.id)
      newLeaf = app.workspace.getLeaf("split");
    else
      newLeaf = app.workspace.createLeafInTabGroup(mainLeaf.parent);
    return newLeaf;
  };
  const ml = getMainLeaf();
  return ml != null ? ml : app.workspace.getLeaf(true);
};
var PinyinIndex3 = class extends PinyinIndex {
  constructor(app2, plugin) {
    super(app2, plugin);
    this.fileItems = [];
    this.aliasItems = [];
    this.linkItems = [];
    this.unresolvedLinkItems = [];
    this.id = "file";
  }
  get items() {
    let items = [];
    items = items.concat(this.fileItems);
    items = items.concat(this.aliasItems);
    items = items.concat(this.linkItems);
    if (this.plugin.settings.file.showUnresolvedLink)
      items = items.concat(this.unresolvedLinkItems);
    return items;
  }
  set items(value) {
    this.fileItems = [];
    this.aliasItems = [];
    this.linkItems = [];
    this.unresolvedLinkItems = [];
    for (const item of value) {
      switch (item.type) {
        case "file":
          this.fileItems.push(item);
          break;
        case "alias":
          this.aliasItems.push(item);
          break;
        case "unresolvedLink":
          this.unresolvedLinkItems.push(item);
          break;
        case "link":
          this.linkItems.push(item);
          break;
      }
    }
  }
  initIndex() {
    let files = this.app.vault.getFiles().filter((f) => this.isEffectiveFile(f));
    this.fileItems = files.map((file) => TFile2Item(file, this.plugin));
    this.aliasItems = [];
    this.linkItems = [];
    this.unresolvedLinkItems = [];
    for (let file of files) {
      if (file.extension != "md")
        continue;
      let [a, b] = CachedMetadata2Item(file, this.plugin, this.fileItems);
      this.aliasItems.push(...a);
      this.linkItems.push(...b);
    }
    this.updateUnresolvedLinkItems();
  }
  initEvent() {
    this.registerEvent(this.metadataCache.on("changed", (file, _, cache) => this.update("changed", file, cache)));
    this.registerEvent(this.metadataCache.on("resolved", () => this.updateUnresolvedLinkItems()));
    this.registerEvent(this.vault.on("rename", (file, oldPath) => this.update("rename", file, oldPath)));
    this.registerEvent(this.vault.on("create", (file) => this.update("create", file)));
    this.registerEvent(this.vault.on("delete", (file) => this.update("delete", file)));
  }
  update(type, file, args) {
    if (!this.isEffectiveFile(file))
      return;
    switch (type) {
      case "changed": {
        let [a, b] = CachedMetadata2Item(file, this.plugin, this.fileItems, args);
        this.aliasItems = this.aliasItems.filter((item) => item.path != file.path).concat(a);
        this.linkItems = this.linkItems.filter((item) => item.path != file.path).concat(b);
        break;
      }
      case "create": {
        this.fileItems.push(TFile2Item(file, this.plugin));
        break;
      }
      case "rename": {
        this.fileItems = this.fileItems.filter((item) => item.path != args);
        this.fileItems.push(TFile2Item(file, this.plugin));
        let [a, b] = CachedMetadata2Item(file, this.plugin, this.aliasItems);
        this.aliasItems = this.aliasItems.filter((item) => item.path != args).concat(a);
        this.linkItems = this.linkItems.filter((item) => item.path != args).concat(b);
        break;
      }
      case "delete": {
        this.fileItems = this.fileItems.filter((item) => item.path != file.path);
        this.aliasItems = this.aliasItems.filter((item) => item.path != file.path);
        this.linkItems = this.linkItems.filter((item) => item.path != file.path);
        break;
      }
    }
  }
  updateUnresolvedLinkItems() {
    this.unresolvedLinkItems = incrementalUpdate(this.unresolvedLinkItems, () => {
      let unresolvedLinks = new Set();
      Object.values(this.metadataCache.unresolvedLinks).map((p) => Object.keys(p)).filter((p) => p.length > 0).forEach((p) => p.forEach((q) => unresolvedLinks.add(q)));
      return Array.from(unresolvedLinks);
    }, (name) => ({
      type: "unresolvedLink",
      name,
      pinyin: new Pinyin(name, this.plugin),
      path: null,
      pinyinOfPath: null,
      file: null
    }));
  }
  isEffectiveFile(file) {
    if (!(file instanceof import_obsidian6.TFile))
      return false;
    if (this.plugin.settings.file.showAllFileTypes)
      return true;
    else if (DOCUMENT_EXTENSIONS.includes(file.extension))
      return true;
    else if (this.plugin.settings.file.showAttachments && this.plugin.settings.file.attachmentExtensions.includes(file.extension))
      return true;
    else
      return false;
  }
};
function TFile2Item(file, plugin) {
  var _a;
  let name = file.extension != "md" ? file.name : file.basename;
  let folderIndex = plugin.folderModal.index.items;
  let fileNamePinyin = new Pinyin(name, plugin);
  let folderPathPinyin;
  let pathPinyin;
  if (file.parent.path == "/") {
    pathPinyin = fileNamePinyin;
  } else {
    folderPathPinyin = (_a = folderIndex.find((folder) => folder.path == file.parent.path)) == null ? void 0 : _a.pinyin;
    if (folderPathPinyin)
      pathPinyin = folderPathPinyin.concat(new Pinyin("/", plugin)).concat(fileNamePinyin);
    else
      pathPinyin = new Pinyin(file.parent.path + "/" + name, plugin);
  }
  return {
    type: "file",
    file,
    name,
    pinyin: fileNamePinyin,
    path: file.path,
    pinyinOfPath: pathPinyin
  };
}
function CachedMetadata2Item(file, plugin, items, cache) {
  var _a, _b, _c, _d, _e, _f;
  cache = cache != null ? cache : plugin.app.metadataCache.getFileCache(file);
  let alias = ((_a = cache == null ? void 0 : cache.frontmatter) == null ? void 0 : _a.alias) || ((_b = cache == null ? void 0 : cache.frontmatter) == null ? void 0 : _b.aliases) || ((_c = cache == null ? void 0 : cache.frontmatter) == null ? void 0 : _c.Alias) || ((_d = cache == null ? void 0 : cache.frontmatter) == null ? void 0 : _d.Aliases);
  let linkText = (_e = cache == null ? void 0 : cache.frontmatter) == null ? void 0 : _e.linkText;
  let item = items.find((item2) => item2.path == file.path);
  let pinyinOfPath = (_f = item == null ? void 0 : item.pinyinOfPath) != null ? _f : new Pinyin(file.path, plugin);
  let aliasItems = [], linkItems = [];
  if (alias) {
    alias = Array.isArray(alias) ? alias.map((p) => String(p)) : String(alias).split(/, ?/);
    aliasItems = alias.map((p) => ({
      type: "alias",
      name: p,
      pinyin: new Pinyin(p, plugin),
      path: file.path,
      pinyinOfPath,
      file
    }));
  }
  if (linkText) {
    let link = Array.isArray(linkText) ? linkText.map((p) => String(p)) : String(linkText).split(/, ?/);
    linkItems = link.map((p) => {
      let [link2, name] = p.split("|");
      name = name || link2;
      return {
        type: "link",
        name,
        pinyin: new Pinyin(name, plugin),
        path: file.path,
        pinyinOfPath,
        file,
        link: link2
      };
    });
  }
  return [aliasItems, linkItems];
}
var TagInput = class extends import_obsidian6.TextComponent {
  constructor(inputEl, plugin) {
    super(inputEl);
    this.hide();
    this.setPlaceholder("\u6807\u7B7E");
    this.inputEl.classList.add("prompt-input");
    this.inputEl.style.width = "30%";
    this.inputEl.style.borderLeft = "2px solid var(--background-primary)";
    let tagSuggest = new PinyinSuggest(this.inputEl, plugin);
    tagSuggest.getItemFunction = (query) => plugin.tagEditorSuggest.getSuggestionsByString(query);
  }
  hide() {
    this.inputEl.style.display = "none";
  }
  show() {
    this.inputEl.style.display = "block";
  }
};
function openItem(leaf, item) {
  if (item.type == "link") {
    leaf.openLinkText(item.file.path + "#" + item.link, "");
  } else
    leaf.openFile(item.file);
}
function getFileTagArray(file) {
  var _a, _b, _c, _d;
  let tags = ((_b = (_a = app.metadataCache.getFileCache(file)) == null ? void 0 : _a.frontmatter) == null ? void 0 : _b.tags) || ((_d = (_c = app.metadataCache.getFileCache(file)) == null ? void 0 : _c.frontmatter) == null ? void 0 : _d.tag), tagArray;
  if (tags)
    tagArray = Array.isArray(tags) ? tags : tags.split(",").filter((p) => p).map((p) => p.trim());
  return tagArray;
}
var openFileKeyMap = {
  \u6253\u5F00: () => app.workspace.getMostRecentLeaf(),
  \u6253\u5F00\u5230\u65B0\u6807\u7B7E\u9875: () => app.workspace.getLeaf("tab"),
  \u6253\u5F00\u5230\u5176\u4ED6\u9762\u677F: () => getNewOrAdjacentLeaf(),
  \u6253\u5F00\u5230\u65B0\u9762\u677F: () => app.workspace.getLeaf("split"),
  \u6253\u5F00\u5230\u65B0\u7A97\u53E3: () => app.workspace.getLeaf("window")
};

// src/modal/folderModal.ts
var import_obsidian7 = __toModule(require("obsidian"));
var FolderModal = class extends FuzzyModal {
  constructor(app2, plugin) {
    super(app2, plugin);
    this.useInput = true;
    this.index = this.plugin.addChild(new PinyinIndex4(this.app, this.plugin));
    this.emptyStateText = "\u672A\u627E\u5230\u76F8\u5173\u6587\u4EF6\u5939\u3002";
    this.setPlaceholder("\u8F93\u5165\u6587\u4EF6\u5939\u540D\u79F0");
    let prompt = [
      {
        command: "\u2191\u2193",
        purpose: "\u5BFC\u822A"
      },
      {
        command: "\u21B5",
        purpose: "\u79FB\u52A8"
      },
      {
        command: "shift \u21B5",
        purpose: "\u521B\u5EFA"
      },
      {
        command: "esc",
        purpose: "\u9000\u51FA"
      }
    ];
    this.setInstructions(prompt);
    this.scope.register(["Shift"], "Enter", async (e) => {
      await app2.vault.createFolder(this.inputEl.value);
      let file = app2.workspace.getActiveFile();
      app2.vault.rename(file, this.inputEl.value + "/" + file.name);
      this.close();
    });
    this.scope.register([], "Tab", (e) => {
      e.preventDefault();
      let item = this.getChoosenItem();
      if (item.path == "/")
        return;
      this.inputEl.value = item.path;
      this.onInput();
    });
    this.toMoveFiles = null;
  }
  getSuggestions(query) {
    if (query == "") {
      return this.getEmptyInputSuggestions();
    }
    let matchData = [], matchData1 = [], matchData2 = [];
    let node = this.historyMatchData, lastNode, index = 0, _f = true;
    for (let i of query) {
      if (node) {
        if (i != node.query) {
          node.init(i);
          _f = false;
        }
      } else {
        node = lastNode.push(i);
      }
      lastNode = node;
      node = node.next;
      if (_f)
        index++;
    }
    let smathCase = /[A-Z]/.test(query) && this.plugin.settings.global.autoCaseSensitivity, indexNode = this.historyMatchData.index(index - 1), toMatchData = indexNode.itemIndex.length == 0 ? this.index.items : indexNode.itemIndex;
    for (let p of toMatchData) {
      let d = p.pinyin.match(query, p, smathCase);
      if (!d)
        continue;
      const l = d.item.path.lastIndexOf("/") + 1;
      d.range = d.range.map((p2) => p2.map((q) => q + l));
      matchData1.push(d);
    }
    toMatchData = indexNode.itemIndexByPath.length == 0 ? this.index.items : indexNode.itemIndexByPath;
    for (let p of toMatchData.filter((p2) => !matchData1.map((p3) => p3.item.path).includes(p2.path))) {
      let d = p.pinyinOfPath.match(query, p, smathCase);
      if (d)
        matchData2.push(d);
    }
    matchData = matchData1.concat(matchData2);
    matchData = matchData.sort((a, b) => b.score - a.score);
    if (!lastNode)
      lastNode = this.historyMatchData;
    lastNode.itemIndex = matchData1.map((p) => p.item);
    lastNode.itemIndexByPath = matchData2.map((p) => p.item);
    let result = matchData.reduce((acc, cur) => {
      let index2 = acc.findIndex((item) => item.item.path === cur.item.path);
      if (index2 !== -1) {
        if (cur.score > acc[index2].score) {
          acc[index2] = cur;
        }
      } else {
        acc.push(cur);
      }
      return acc;
    }, []);
    return result;
  }
  getEmptyInputSuggestions() {
    let root = app.vault.getRoot();
    let result = [];
    let item = this.index.items.find((item2) => item2.name == "/");
    result.push({
      item,
      score: 0,
      range: null
    });
    let quene = [root];
    while (result.length < 20 && quene.length > 0) {
      let folder = quene.shift();
      for (let child of folder.children) {
        if (child instanceof import_obsidian7.TFolder) {
          let item2 = this.index.items.find((item3) => item3.path == child.path);
          result.push({
            item: item2,
            score: 0,
            range: null
          });
          quene.push(child);
        }
      }
    }
    return result.slice(0, 20);
  }
  async onChooseSuggestion(matchData, evt) {
    if (matchData.score == -1)
      await app.vault.createFolder(matchData.item.path);
    if (!this.toMoveFiles)
      this.toMoveFiles = app.workspace.getActiveFile();
    if (Array.isArray(this.toMoveFiles))
      this.toMoveFiles.forEach((file) => app.vault.rename(file, matchData.item.path + "/" + file.name));
    else
      app.vault.rename(this.toMoveFiles, matchData.item.path + "/" + this.toMoveFiles.name);
    this.toMoveFiles = null;
  }
  openWithFiles(files) {
    this.toMoveFiles = files;
    this.open();
  }
  renderSuggestion(matchData, el) {
    let renderer = new SuggestionRenderer(el);
    renderer.setTitle(matchData.item.path);
    renderer.render(matchData);
  }
};
var PinyinIndex4 = class extends PinyinIndex {
  constructor(app2, plugin) {
    super(app2, plugin);
    this.id = "folder";
  }
  initIndex() {
    this.items = [];
    let root = this.app.vault.getRoot();
    let iterate = (node, nodePinyin) => {
      let children = node.children;
      for (let child of children) {
        if (child instanceof import_obsidian7.TFolder) {
          let name = child.name;
          let pinyinOfName = new Pinyin(name, this.plugin);
          let pinyinOfPath = node.path == "/" ? pinyinOfName : nodePinyin.concat(new Pinyin("/", this.plugin)).concat(new Pinyin(name, this.plugin));
          this.items.push({
            name,
            pinyin: pinyinOfName,
            path: child.path,
            pinyinOfPath
          });
          iterate(child, pinyinOfPath);
        }
      }
    };
    this.items.push({
      name: "/",
      pinyin: new Pinyin("/", this.plugin),
      path: root.path,
      pinyinOfPath: new Pinyin(root.path, this.plugin)
    });
    iterate(root, new Pinyin("", this.plugin));
  }
  initEvent() {
    this.registerEvent(this.vault.on("rename", (folder, oldPath) => this.update("rename", folder, oldPath)));
    this.registerEvent(this.vault.on("create", (folder) => this.update("create", folder)));
    this.registerEvent(this.vault.on("delete", (folder) => this.update("delete", folder)));
  }
  update(type, f, oldPath) {
    if (f instanceof import_obsidian7.TFile)
      return;
    let folder = f;
    switch (type) {
      case "create":
        this.items.push({
          name: folder.name,
          pinyin: new Pinyin(folder.name, this.plugin),
          path: folder.path,
          pinyinOfPath: new Pinyin(folder.path, this.plugin)
        });
        break;
      case "delete":
        this.items = this.items.filter((item) => item.name != folder.path);
        break;
      case "rename":
        this.items = this.items.filter((item) => item.name != oldPath);
        this.items.push({
          name: folder.name,
          pinyin: new Pinyin(folder.name, this.plugin),
          path: folder.path,
          pinyinOfPath: new Pinyin(folder.path, this.plugin)
        });
        break;
    }
  }
};

// src/modal/commandModal.ts
var import_obsidian8 = __toModule(require("obsidian"));
var BASIC_MODIFIER_ICONS = {
  Mod: "Ctrl +",
  Ctrl: "Ctrl +",
  Meta: "Win +",
  Alt: "Alt +",
  Shift: "Shift +",
  Hyper: "Caps +"
};
var MAC_MODIFIER_ICONS = {
  Mod: "\u2318",
  Ctrl: "^",
  Meta: "\u2318",
  Alt: "\u2325",
  Shift: "\u21E7",
  Hyper: "\u21EA"
};
var SPECIAL_KEYS = {
  TAB: "\u21B9",
  ENTER: "\u21B5",
  ARROWLEFT: "\u2190",
  ARROWRIGHT: "\u2192",
  ARROWUP: "\u2191",
  ARROWDOWN: "\u2193",
  BACKSPACE: "\u232B",
  ESC: "Esc"
};
function generateHotKeyText(hotkey) {
  let modifierIcons = import_obsidian8.Platform.isMacOS ? MAC_MODIFIER_ICONS : BASIC_MODIFIER_ICONS;
  const hotKeyStrings = [];
  hotkey.modifiers.forEach((mod) => {
    hotKeyStrings.push(modifierIcons[mod]);
  });
  const key = hotkey.key.toUpperCase();
  hotKeyStrings.push(SPECIAL_KEYS[key] || key);
  return hotKeyStrings.join(" ");
}
var CommandModal = class extends FuzzyModal {
  constructor(app2, plugin) {
    super(app2, plugin);
    this.index = this.plugin.addChild(new PinyinIndex5(this.app, this.plugin));
    this.historyCommands = [];
    this.emptyStateText = "\u672A\u53D1\u73B0\u547D\u4EE4\u3002";
    this.setPlaceholder("\u8F93\u5165\u547D\u4EE4\u2026\u2026");
    this.scope.register(["Alt"], "N", async (e) => {
      let command = this.getChoosenItem().command;
      copy(command.name);
    });
    this.scope.register(["Alt"], "I", async (e) => {
      let command = this.getChoosenItem().command;
      copy(command.id);
    });
    this.scope.register(["Mod"], "O", async (e) => {
      app2.setting.open();
      let settingTab = app2.setting.openTabById("hotkeys");
      let command = this.getChoosenItem().command;
      settingTab.setQuery(command.name);
    });
    let prompt = [
      {
        command: "alt n",
        purpose: "\u590D\u5236\u540D\u5B57"
      },
      {
        command: "alt i",
        purpose: "\u590D\u5236 ID"
      },
      {
        command: "ctrl o",
        purpose: "\u6253\u5F00\u5FEB\u6377\u952E\u8BBE\u7F6E"
      }
    ];
    this.setInstructions(prompt);
  }
  onOpen() {
    super.onOpen();
    this.index.update();
  }
  getEmptyInputSuggestions() {
    let pinnedCommands = this.plugin.settings.command.pinnedCommands.map((p) => ({
      item: this.index.items.find((q) => q.name == p),
      score: -2,
      range: null
    })), historyCommands = this.historyCommands.filter((p) => !this.plugin.settings.command.pinnedCommands.includes(p.name)).map((p) => ({
      item: this.index.items.find((q) => q.name == p.name),
      score: -1,
      range: null
    })), commonCommands = this.index.items.filter((p) => !this.plugin.settings.command.pinnedCommands.includes(p.name) && !this.historyCommands.includes(p)).map((p) => ({
      item: p,
      score: 0,
      range: null
    }));
    return pinnedCommands.concat(historyCommands).concat(commonCommands).filter((p) => p.item).slice(0, 100);
  }
  onChooseSuggestion(matchData, evt) {
    this.historyCommands = this.historyCommands.filter((p) => p.command.id != matchData.item.command.id);
    this.historyCommands.unshift(matchData.item);
    this.app.commands.executeCommand(matchData.item.command);
  }
  renderSuggestion(matchData, el) {
    let renderer = new SuggestionRenderer(el);
    renderer.render(matchData);
    let auxEl = el.createEl("span", { cls: "fz-suggestion-aux" });
    const customHotkeys = this.app.hotkeyManager.getHotkeys(matchData.item.command.id);
    const defaultHotkeys = this.app.hotkeyManager.getDefaultHotkeys(matchData.item.command.id);
    const hotkeys = customHotkeys || defaultHotkeys || [];
    hotkeys.forEach((hotkey) => {
      auxEl.createEl("kbd", {
        cls: "suggestion-command",
        text: generateHotKeyText(hotkey)
      });
    });
    if (matchData.score == -2)
      renderer.addIcon("pin");
    else if (matchData.score == -1)
      renderer.addIcon("history");
    if (renderer.hasIcon)
      renderer.flairEl.style.marginLeft = "10px";
  }
};
var PinyinIndex5 = class extends PinyinIndex {
  constructor(app2, plugin) {
    super(app2, plugin);
    this.id = "command";
  }
  initEvent() {
  }
  initIndex() {
    let commands = this.app.commands.listCommands();
    this.items = commands.map((command) => ({
      name: command.name,
      pinyin: new Pinyin(command.name, this.plugin),
      command
    }));
  }
  update() {
    let commands = this.app.commands.listCommands();
    this.items = incrementalUpdate(this.items, () => commands.map((command) => command.name), (name) => ({
      name,
      pinyin: new Pinyin(name, this.plugin),
      command: commands.find((p) => p.name == name)
    }));
  }
};

// src/modal/suggestModal.ts
var SuggestModal2 = class extends FuzzyModal {
  constructor(app2, plugin, text_items, items) {
    super(app2, plugin);
    this.items = items;
    this.index = {
      items: text_items.map((p) => ({
        name: p,
        pinyin: new Pinyin(p, plugin)
      }))
    };
  }
  getEmptyInputSuggestions() {
    return this.index.items.map((p) => ({ item: p, score: 0, range: null }));
  }
  onChooseSuggestion(matchData, evt) {
    let i = this.index.items.indexOf(matchData.item);
    this.resolve(this.items[i]);
  }
};

// src/modal/headingModal.ts
var HeadingModal = class extends FuzzyModal {
  constructor(app2, plugin) {
    super(app2, plugin);
    this.index = {};
  }
  setFile(file) {
    var _a;
    this.file = file;
    let heading = (_a = app.metadataCache.getFileCache(file)) == null ? void 0 : _a.headings;
    if (!heading)
      return;
    if (!this.plugin.settings.heading.showFirstLevelHeading)
      heading = heading.filter((h) => h.level > 1);
    this.index.items = heading.map((h) => ({
      name: h.heading,
      pinyin: new Pinyin(h.heading, this.plugin),
      level: h.level
    }));
  }
  getEmptyInputSuggestions() {
    return this.index.items.map((p) => ({
      item: p,
      score: -1,
      range: null
    }));
  }
  onChooseSuggestion(matchData, evt) {
    const leaf = app.workspace.getMostRecentLeaf();
    leaf.openLinkText("#" + matchData.item.name, this.file.path);
  }
  renderSuggestion(matchData, el) {
    let renderer = new SuggestionRenderer(el);
    renderer.render(matchData);
    renderer.addIcon("heading-" + matchData.item.level);
    if (this.plugin.settings.heading.headingIndent) {
      let indent = this.plugin.settings.heading.showFirstLevelHeading ? matchData.item.level - 1 : matchData.item.level - 2;
      indent *= 15;
      renderer.titleEl.style.marginLeft = indent + "px";
    }
  }
};

// src/modal/templatesModal.ts
var TemplatesModal = class extends FuzzyModal {
  constructor(app2, plugin) {
    super(app2, plugin);
    this.index = {};
    runOnLayoutReady(() => {
      this.updateIndex();
    });
  }
  onOpen() {
    super.onOpen();
    this.updateIndex();
  }
  getEmptyInputSuggestions() {
    return this.index.items.map((p) => ({
      item: p,
      score: -1,
      range: null
    }));
  }
  onChooseSuggestion(matchData, evt) {
    let plugin = this.getOriginPlugin();
    plugin.insertTemplate(matchData.item.file);
  }
  getOriginPlugin() {
    return this.app.internalPlugins.plugins.templates.instance;
  }
  updateIndex() {
    let plugin = this.getOriginPlugin();
    let folder = plugin.options.folder;
    let templateFiles = this.app.vault.getFiles().filter((file) => file.path.startsWith(folder) && file.extension === "md");
    this.index.items = templateFiles.map((file) => ({
      name: file.basename,
      pinyin: new Pinyin(file.basename, this.plugin),
      file
    }));
  }
};

// src/editorSuggest/fileEditorSuggest.ts
var import_obsidian9 = __toModule(require("obsidian"));
var FileEditorSuggest = class extends import_obsidian9.EditorSuggest {
  constructor(app2, plugin) {
    super(app2);
    this.tempItems = [];
    this.originEditorSuggest = app2.workspace.editorSuggest.suggests.find((p) => p == null ? void 0 : p.suggestManager);
    this.plugin = plugin;
    this.index = this.plugin.fileModal.index;
    this.scope.register([], "Tab", (e) => {
      e.preventDefault();
      this.suggestions.useSelectedItem(e);
    });
    let prompt = [
      {
        command: "\u8F93\u5165 #",
        purpose: "\u53EF\u4EE5\u94FE\u63A5\u5230\u6807\u9898"
      },
      {
        command: "\u8F93\u5165 ^",
        purpose: "\u94FE\u63A5\u6587\u672C\u5757"
      },
      {
        command: "\u8F93\u5165 |",
        purpose: "\u6307\u5B9A\u663E\u793A\u7684\u6587\u672C"
      }
    ];
    this.setInstructions(prompt);
  }
  onTrigger(cursor, editor, file) {
    const cursorLine = cursor.line;
    const lineText = editor.getLine(cursorLine).substr(0, cursor.ch);
    const openBracketIndex = lineText.lastIndexOf("[[");
    const closeBracketIndex = lineText.lastIndexOf("]]");
    if (this.findLastSymbol(lineText.slice(openBracketIndex)) == "^")
      return;
    if (openBracketIndex !== -1 && closeBracketIndex < openBracketIndex) {
      return {
        start: {
          line: cursorLine,
          ch: openBracketIndex + 2
        },
        end: {
          line: cursorLine,
          ch: cursor.ch
        },
        query: lineText.substr(openBracketIndex + 2)
      };
    } else {
      return null;
    }
  }
  async getSuggestions(context) {
    this.context = context;
    let e = this.originEditorSuggest;
    let query = context.query, matchData;
    switch (this.findLastSymbol(query)) {
      case "|": {
        matchData = this.getFileAliases(query);
        break;
      }
      case "#": {
        e.context = context;
        let result = await e.getSuggestions(context);
        matchData = this.getHeadings(query, result);
        break;
      }
      case "^": {
        this.close();
        break;
      }
      default: {
        matchData = this.plugin.fileModal.getSuggestions(query);
      }
    }
    return matchData;
  }
  getFileAliases(query) {
    let [name, q] = query.split("|");
    let items = this.index.items.filter((p) => p.type == "alias" && p.file.basename == name);
    return this.match(q, items);
  }
  getHeadings(query, items) {
    let [_, q] = query.split("#");
    if (q == "") {
      this.tempItems = items.map((p) => ({
        type: "heading",
        file: p.file,
        name: p.heading,
        pinyin: new Pinyin(p.heading, this.plugin),
        path: p.file.basename,
        pinyinOfPath: null
      }));
    }
    return this.match(q, this.tempItems);
  }
  match(query, items) {
    if (query == "")
      return items.map((p) => ({ item: p, score: -1, range: null, usePath: false }));
    query = query.toLocaleLowerCase();
    let matchData = [];
    for (let p of items) {
      let d = p.pinyin.match(query, p);
      if (d)
        matchData.push(d);
    }
    matchData = matchData.sort((a, b) => b.score - a.score);
    return matchData;
  }
  findLastSymbol(str) {
    let index1 = str.lastIndexOf("#");
    let index2 = str.lastIndexOf("|");
    let index3 = str.lastIndexOf("^");
    let maxIndex = Math.max(index1, index2, index3);
    switch (maxIndex) {
      case -1:
        return "";
      case index1:
        return "#";
      case index2:
        return "|";
      case index3:
        return "^";
    }
  }
  renderSuggestion(matchData, el) {
    this.plugin.fileModal.renderSuggestion(matchData, el);
  }
  selectSuggestion(matchData, evt) {
    let item = matchData.item;
    let result;
    let file = app.workspace.getActiveFile();
    switch (item.type) {
      case "heading":
      case "link":
        result = {
          heading: isLinkItem(item) ? item.link : item.name,
          type: "heading",
          path: item.file == file ? "" : item.file.basename,
          file: item.file,
          subpath: `#${isLinkItem(item) ? item.link : item.name}`,
          level: 1,
          matches: null,
          score: 0
        };
        break;
      case "alias":
        result = {
          type: "alias",
          alias: item.name,
          path: item.path,
          file: item.file,
          matches: null,
          score: 0
        };
        break;
      case "file":
        result = {
          type: "file",
          path: item.path,
          file: item.file,
          matches: null,
          score: 0
        };
        break;
      case "unresolvedLink":
        result = {
          type: "linktext",
          path: item.name,
          matches: null,
          score: 0
        };
        break;
    }
    this.originEditorSuggest.context = this.context;
    this.originEditorSuggest.selectSuggestion(result, evt);
  }
};
function isLinkItem(item) {
  return item.type === "link";
}

// src/editorSuggest/tagEditorSuggest.ts
var import_obsidian10 = __toModule(require("obsidian"));
var TagEditorSuggest = class extends import_obsidian10.EditorSuggest {
  constructor(app2, plugin) {
    super(app2);
    this.plugin = plugin;
    this.index = this.plugin.addChild(new PinyinIndex7(app2, this.plugin));
    this.historyMatchData = new HistoryMatchDataNode("\0");
  }
  onTrigger(cursor, editor, file) {
    var _a, _b, _c, _d, _e, _f, _g;
    var lineIndex = cursor.line, lineContent = editor.getLine(lineIndex), sub = lineContent.substr(0, cursor.ch);
    if (sub.match(/(^|\s)#[^\u2000-\u206F\u2E00-\u2E7F'!"#$%&()*+,.:;<=>?@^`{|}~\[\]\\\s]*$/g) && lineContent.substr(cursor.ch, 1) !== "#") {
      this.isYaml = false;
      var a = sub.lastIndexOf("#"), s = sub.substr(a + 1);
      return {
        start: {
          line: lineIndex,
          ch: a
        },
        end: cursor,
        query: s
      };
    }
    if (!file)
      return null;
    let frontmatterPosition = (_a = app.metadataCache.getFileCache(file)) == null ? void 0 : _a.frontmatterPosition, start2 = (frontmatterPosition == null ? void 0 : frontmatterPosition.start.line) || 0, end2 = (frontmatterPosition == null ? void 0 : frontmatterPosition.end.line) || 0;
    if (frontmatterPosition && lineIndex > start2 && lineIndex < end2) {
      this.isYaml = true;
      if (sub.match(/^tags?: /)) {
        let match = (_c = (_b = sub.match(/(\S+)$/)) == null ? void 0 : _b[1]) != null ? _c : "";
        if (this.index.has(match))
          return null;
        return {
          end: cursor,
          start: {
            ch: sub.lastIndexOf(match),
            line: cursor.line
          },
          query: match
        };
      }
      let content = editor.getValue().split("\n").slice(start2 + 1, end2);
      let yaml = [];
      content.forEach((p, i) => {
        if (p.match(/^\w+:/))
          yaml.push([i + 1 + start2, p.split(":")[0]]);
      });
      if (lineContent.match(/^ *- /) && ((_e = (_d = yaml[yaml.findLastIndex((p) => lineIndex > p[0])]) == null ? void 0 : _d[1]) == null ? void 0 : _e.match(/^tags?/))) {
        let match = (_g = (_f = lineContent.match(/^ *- (.+)$/)) == null ? void 0 : _f[1]) != null ? _g : "";
        if (this.index.has(match))
          return null;
        return {
          end: {
            ch: lineContent.length,
            line: lineIndex
          },
          start: {
            ch: lineContent.lastIndexOf(match),
            line: lineIndex
          },
          query: match
        };
      }
    }
    return null;
  }
  getSuggestionsByString(query) {
    return this.getSuggestions({ query });
  }
  getSuggestions(content) {
    this.index.update();
    let query = content.query;
    if (query == "") {
      this.historyMatchData = new HistoryMatchDataNode("\0");
      return this.index.items.map((p) => {
        return { item: p, score: 0, range: null };
      });
    }
    let matchData = [];
    let node = this.historyMatchData, lastNode, index = 0, _f = true;
    for (let i of query) {
      if (node) {
        if (i != node.query) {
          node.init(i);
          _f = false;
        }
      } else {
        node = lastNode.push(i);
      }
      lastNode = node;
      node = node.next;
      if (_f)
        index++;
    }
    let smathCase = /[A-Z]/.test(query) && this.plugin.settings.global.autoCaseSensitivity, indexNode = this.historyMatchData.index(index - 1), toMatchData = indexNode.itemIndex.length == 0 ? this.index.items : indexNode.itemIndex;
    for (let p of toMatchData) {
      let d = p.pinyin.match(query, p, smathCase);
      if (d)
        matchData.push(d);
    }
    matchData = matchData.sort((a, b) => b.score - a.score);
    if (!lastNode)
      lastNode = this.historyMatchData;
    lastNode.itemIndex = matchData.map((p) => p.item);
    return matchData;
  }
  renderSuggestion(matchData, el) {
    new SuggestionRenderer(el).render(matchData);
  }
  selectSuggestion(matchData) {
    var context = this.context;
    if (context) {
      var editor = context.editor, start2 = context.start, end2 = context.end, text = this.isYaml ? matchData.item.name : "#" + matchData.item.name + " ";
      editor.transaction({
        changes: [
          {
            from: start2,
            to: end2,
            text
          }
        ]
      });
      editor.setCursor({ line: start2.line, ch: start2.ch + text.length });
    }
  }
};
var PinyinIndex7 = class extends PinyinIndex {
  constructor(app2, plugin) {
    super(app2, plugin);
    this.id = "tag";
  }
  initIndex() {
    let tags = Object.keys(this.app.metadataCache.getTags()).map((p) => p.slice(1));
    this.items = tags.map((tag) => {
      let item = {
        name: tag,
        pinyin: new Pinyin(tag, this.plugin)
      };
      return item;
    });
  }
  initEvent() {
  }
  update() {
    this.items = incrementalUpdate(this.items, () => Object.keys(this.app.metadataCache.getTags()).map((p) => p.slice(1)), (name) => ({
      name,
      pinyin: new Pinyin(name, this.plugin)
    }));
  }
};

// src/dict/simplified_dict.ts
var SimplifiedDict = {
  a: "\u963F\u554A\u5475\u814C\u55C4\u5416\u9515",
  e: "\u989D\u963F\u4FC4\u6076\u9E45\u904F\u9102\u5384\u997F\u5CE8\u627C\u5A25\u9CC4\u54E6\u86FE\u5669\u6115\u8BB9\u9537\u57A9\u5A40\u9E57\u843C\u8C14\u83AA\u816D\u9507\u989A\u5443\u960F\u5C59\u82CA\u8F6D",
  ai: "\u7231\u57C3\u827E\u788D\u764C\u54C0\u6328\u77EE\u9698\u853C\u5509\u7691\u54CE\u972D\u6371\u66A7\u5AD2\u55F3\u7477\u55CC\u953F\u7839",
  ei: "\u8BF6",
  xi: "\u7CFB\u897F\u5E2D\u606F\u5E0C\u4E60\u5438\u559C\u7EC6\u6790\u620F\u6D17\u6089\u9521\u6EAA\u60DC\u7A00\u88AD\u5915\u6D12\u6670\u6614\u727A\u814A\u70EF\u7199\u5AB3\u6816\u819D\u9699\u7280\u8E4A\u7852\u516E\u7184\u66E6\u79A7\u5B09\u73BA\u595A\u6C50\u5F99\u7FB2\u94E3\u6DC5\u563B\u6B59\u71B9\u77FD\u87CB\u90D7\u550F\u7699\u96B0\u6A28\u6D60\u5FFE\u8725\u6A84\u90C4\u7FD5\u960B\u9CC3\u823E\u5C63\u8478\u8785\u54AD\u7C9E\u89CB\u6B37\u50D6\u91AF\u9F37\u88FC\u7A78\u9969\u8204\u798A\u8BF6\u83E5\u84F0",
  yi: "\u4E00\u4EE5\u5DF2\u610F\u8BAE\u4E49\u76CA\u4EBF\u6613\u533B\u827A\u98DF\u4F9D\u79FB\u8863\u5F02\u4F0A\u4EEA\u5B9C\u5C04\u9057\u7591\u6BC5\u8C0A\u4EA6\u75AB\u5F79\u5FC6\u6291\u5C3E\u4E59\u8BD1\u7FFC\u86C7\u6EA2\u6905\u6C82\u6CC4\u9038\u8681\u5937\u9091\u6021\u7ECE\u5F5D\u88D4\u59E8\u71A0\u8D3B\u77E3\u5C79\u9890\u501A\u8BE3\u80F0\u5955\u7FCC\u7599\u5F08\u8F76\u86FE\u9A7F\u58F9\u7317\u81C6\u5F0B\u94F1\u65D6\u6F2A\u8FE4\u4F5A\u7FCA\u8BD2\u603F\u75CD\u61FF\u9974\u5CC4\u63D6\u7719\u9552\u4EE1\u9EDF\u8084\u54BF\u7FF3\u6339\u7F22\u5453\u5208\u54A6\u5DB7\u7FBF\u9487\u6BAA\u8351\u858F\u8734\u9571\u566B\u7654\u82E1\u6092\u55CC\u7617\u8864\u4F7E\u57F8\u572F\u8223\u914F\u5293",
  an: "\u5B89\u6848\u6309\u5CB8\u6697\u978D\u6C28\u4FFA\u80FA\u94F5\u8C19\u5EB5\u9EEF\u9E4C\u6849\u57EF\u72B4\u63DE\u5382\u5E7F",
  han: "\u5382\u6C49\u97E9\u542B\u65F1\u5BD2\u6C57\u6DB5\u51FD\u558A\u61BE\u7F55\u710A\u7FF0\u90AF\u64BC\u701A\u61A8\u634D\u9163\u608D\u9F3E\u9097\u9894\u86B6\u6657\u83E1\u65F0\u9878\u72B4\u7113\u6496",
  ang: "\u6602\u4EF0\u76CE\u80AE",
  ao: "\u5965\u6FB3\u50B2\u71AC\u51F9\u9CCC\u6556\u9068\u93D6\u8884\u5773\u7FF1\u55F7\u62D7\u61CA\u5C99\u87AF\u9A9C\u7352\u93CA\u8279\u5AAA\u5ED2\u8071",
  wa: "\u74E6\u6316\u5A03\u6D3C\u889C\u86D9\u51F9\u54C7\u4F64\u5A32\u5459\u817D",
  yu: "\u4E8E\u4E0E\u80B2\u4F59\u9884\u57DF\u4E88\u9047\u5965\u8BED\u8A89\u7389\u9C7C\u96E8\u6E14\u88D5\u6108\u5A31\u6B32\u5401\u8206\u5B87\u7FBD\u903E\u8C6B\u90C1\u5BD3\u543E\u72F1\u55BB\u5FA1\u6D74\u6109\u79B9\u4FDE\u90AA\u6986\u611A\u6E1D\u5C09\u6DE4\u865E\u5C7F\u5CEA\u7CA5\u9A6D\u745C\u79BA\u6BD3\u94B0\u9685\u828B\u71A8\u7600\u8FC2\u715C\u6631\u6C69\u65BC\u81FE\u76C2\u807F\u7AFD\u8438\u59AA\u8174\u5704\u8C15\u89CE\u63C4\u9F89\u8C00\u4FE3\u9980\u5EBE\u59A4\u7610\u9B3B\u6B24\u9E6C\u9608\u5D5B\u96E9\u9E46\u5709\u872E\u4F1B\u7EA1\u7AAC\u7AB3\u996B\u84E3\u72F3\u8080\u8201\u8753\u71E0",
  niu: "\u725B\u7EBD\u626D\u94AE\u62D7\u599E\u5FF8\u72C3",
  o: "\u54E6\u5662\u5594",
  ba: "\u628A\u516B\u5DF4\u62D4\u4F2F\u5427\u575D\u7238\u9738\u7F62\u82AD\u8DCB\u6252\u53ED\u9776\u75A4\u7B06\u8019\u9C85\u7C91\u5C9C\u705E\u94AF\u634C\u83DD\u9B43\u8307",
  pa: "\u6015\u5E15\u722C\u6252\u8DB4\u7436\u556A\u8469\u8019\u6777\u94AF\u7B62",
  pi: "\u88AB\u6279\u526F\u5426\u76AE\u574F\u8F9F\u5564\u5339\u62AB\u75B2\u7F62\u50FB\u6BD7\u576F\u813E\u8B6C\u5288\u5AB2\u5C41\u7435\u90B3\u88E8\u75DE\u7656\u9642\u4E15\u6787\u567C\u9739\u5421\u7EB0\u7812\u94CD\u6DE0\u90EB\u57E4\u6FDE\u7765\u8298\u868D\u572E\u9F19\u7F74\u8731\u758B\u8C94\u4EF3\u5E80\u64D7\u7513\u9674",
  bi: "\u6BD4\u5FC5\u5E01\u7B14\u6BD5\u79D8\u907F\u95ED\u4F5B\u8F9F\u58C1\u5F0A\u5F7C\u903C\u78A7\u9F3B\u81C2\u853D\u62C2\u6CCC\u74A7\u5E87\u75F9\u6BD9\u5F3C\u5315\u9119\u965B\u88E8\u8D32\u655D\u84D6\u5421\u7BE6\u7EB0\u4FFE\u94CB\u6BD6\u7B5A\u8378\u859C\u5A62\u54D4\u8DF8\u6FDE\u79D5\u835C\u610E\u7765\u59A3\u8298\u7B85\u9AC0\u7540\u6ED7\u72F4\u8406\u5B16\u895E\u822D",
  bai: "\u767E\u767D\u8D25\u6446\u4F2F\u62DC\u67CF\u4F70\u63B0\u5457\u64D8\u636D\u7A17",
  bo: "\u6CE2\u535A\u64AD\u52C3\u62E8\u8584\u4F5B\u4F2F\u73BB\u640F\u67CF\u6CCA\u8236\u5265\u6E24\u535C\u9A73\u7C3F\u8116\u818A\u7C38\u83E0\u7934\u7B94\u94C2\u4EB3\u94B5\u5E1B\u64D8\u997D\u8DDB\u94B9\u8DB5\u6A97\u5575\u9E41\u64D7\u8E23",
  bei: "\u5317\u88AB\u5907\u500D\u80CC\u676F\u52C3\u8D1D\u8F88\u60B2\u7891\u81C2\u5351\u6096\u60EB\u84D3\u9642\u94A1\u72C8\u5457\u7119\u789A\u8919\u5EB3\u97B4\u5B5B\u9E4E\u90B6\u943E",
  ban: "\u529E\u7248\u534A\u73ED\u822C\u677F\u9881\u4F34\u642C\u6591\u626E\u62CC\u6273\u74E3\u5742\u962A\u7ECA\u94A3\u7622\u8228\u764D",
  pan: "\u5224\u76D8\u756A\u6F58\u6500\u76FC\u62DA\u7554\u80D6\u53DB\u62CC\u8E52\u78D0\u723F\u87E0\u6CEE\u88A2\u897B\u4E2C",
  bin: "\u4EFD\u5BBE\u9891\u6EE8\u658C\u5F6C\u6FD2\u6BA1\u7F24\u9B13\u69DF\u6448\u8191\u73A2\u9554\u8C73\u9ACC\u50A7",
  bang: "\u5E2E\u90A6\u5F6D\u65C1\u699C\u68D2\u8180\u9551\u7ED1\u508D\u78C5\u868C\u8C24\u6886\u6D5C\u84A1",
  pang: "\u65C1\u5E9E\u4E53\u78C5\u8783\u5F77\u6EC2\u9004\u802A",
  beng: "\u6CF5\u5D29\u868C\u8E66\u8FF8\u7EF7\u752D\u5623\u750F\u580B",
  bao: "\u62A5\u4FDD\u5305\u5B9D\u66B4\u80DE\u8584\u7206\u70AE\u9971\u62B1\u5821\u5265\u9C8D\u66DD\u8446\u7011\u8C79\u5228\u8912\u96F9\u5B62\u82DE\u7172\u8913\u8DB5\u9E28\u9F85\u52F9",
  bu: "\u4E0D\u90E8\u6B65\u5E03\u8865\u6355\u5821\u57D4\u535C\u57E0\u7C3F\u54FA\u6016\u949A\u535F\u74FF\u900B\u6661\u91AD\u94B8",
  pu: "\u666E\u66B4\u94FA\u6D66\u6734\u5821\u8461\u8C31\u57D4\u6251\u4EC6\u84B2\u66DD\u7011\u6EA5\u8386\u5703\u749E\u6FEE\u83E9\u8E7C\u530D\u5657\u6C06\u6535\u9568\u6534\u9564",
  mian: "\u9762\u68C9\u514D\u7EF5\u7F05\u52C9\u7720\u5195\u5A29\u817C\u6E11\u6E4E\u6C94\u9EFE\u5B80\u7704",
  po: "\u7834\u7E41\u5761\u8FEB\u9887\u6734\u6CCA\u5A46\u6CFC\u9B44\u7C95\u9131\u73C0\u9642\u53F5\u7B38\u6CFA\u76A4\u948B\u94B7",
  fan: "\u53CD\u8303\u72AF\u7E41\u996D\u6CDB\u7FFB\u51E1\u8FD4\u756A\u8D29\u70E6\u62DA\u5E06\u6A0A\u85E9\u77FE\u68B5\u8543\u9492\u5E61\u7548\u8629\u8E6F\u71D4",
  fu: "\u5E9C\u670D\u526F\u8D1F\u5BCC\u590D\u798F\u592B\u5987\u5E45\u4ED8\u6276\u7236\u7B26\u9644\u8150\u8D74\u4F5B\u6D6E\u8986\u8F85\u5085\u4F0F\u629A\u8D4B\u8F90\u8179\u5F17\u80A4\u961C\u88B1\u7F1A\u752B\u6C1F\u65A7\u5B5A\u6577\u4FEF\u62C2\u4FD8\u5490\u8151\u5B75\u8299\u6DAA\u91DC\u812F\u832F\u99A5\u5B93\u7EC2\u8BA3\u544B\u7F58\u9EB8\u8760\u5310\u82BE\u8709\u8DD7\u51EB\u6ECF\u876E\u9A78\u7ECB\u86A8\u7829\u6874\u8D59\u83D4\u5452\u8DBA\u82FB\u62CA\u961D\u9C8B\u602B\u7A03\u90DB\u83A9\u5E5E\u7953\u8274\u9EFB\u9EFC\u9CC6",
  ben: "\u672C\u4F53\u5954\u82EF\u7B28\u592F\u8D32\u951B\u755A\u574C",
  feng: "\u98CE\u4E30\u5C01\u5CF0\u5949\u51E4\u950B\u51AF\u9022\u7F1D\u8702\u67AB\u75AF\u8BBD\u70FD\u4FF8\u6CA3\u9146\u781C\u8451\u552A",
  bian: "\u53D8\u4FBF\u8FB9\u7F16\u904D\u8FA9\u97AD\u8FA8\u8D2C\u533E\u6241\u535E\u6C74\u8FAB\u782D\u82C4\u8759\u9CCA\u5F01\u7A86\u7B3E\u7178\u890A\u78A5\u5FED\u7F0F",
  pian: "\u4FBF\u7247\u7BC7\u504F\u9A97\u7FE9\u6241\u9A88\u80FC\u8E41\u8C1D\u728F\u7F0F",
  zhen: "\u9547\u771F\u9488\u5733\u632F\u9707\u73CD\u9635\u8BCA\u586B\u4FA6\u81FB\u8D1E\u6795\u6862\u8D48\u796F\u5E27\u7504\u659F\u7F1C\u7BB4\u75B9\u7827\u699B\u9E29\u8F78\u7A39\u6EB1\u84C1\u80D7\u6939\u6715\u755B\u6D48",
  biao: "\u8868\u6807\u5F6A\u9556\u88F1\u98DA\u8198\u98D9\u9573\u5A4A\u9AA0\u98D1\u6753\u9ADF\u9CD4\u706C\u762D",
  piao: "\u7968\u6734\u6F02\u98D8\u5AD6\u74E2\u527D\u7F25\u6B8D\u779F\u9AA0\u560C\u83A9\u87B5",
  huo: "\u548C\u6D3B\u6216\u8D27\u83B7\u706B\u4F19\u60D1\u970D\u7978\u8C41\u56AF\u85FF\u952A\u8816\u94AC\u8020\u956C\u5925\u706C\u5290\u6509",
  bie: "\u522B\u9CD6\u618B\u762A\u8E69",
  min: "\u6C11\u654F\u95FD\u95F5\u76BF\u6CEF\u5CB7\u60AF\u73C9\u62BF\u9EFE\u7F17\u739F\u610D\u82E0\u9CD8",
  fen: "\u5206\u4EFD\u7EB7\u594B\u7C89\u6C1B\u82AC\u6124\u7CAA\u575F\u6C7E\u711A\u915A\u5429\u5FFF\u68FC\u73A2\u9F22\u7035\u507E\u9CBC",
  bing: "\u5E76\u75C5\u5175\u51B0\u5C4F\u997C\u70B3\u79C9\u4E19\u6452\u67C4\u69DF\u7980\u678B\u90B4\u51AB",
  geng: "\u66F4\u8015\u9888\u5E9A\u803F\u6897\u57C2\u7FB9\u54FD\u8D53\u7EE0\u9CA0",
  fang: "\u65B9\u653E\u623F\u9632\u8BBF\u7EBA\u82B3\u4EFF\u574A\u59A8\u80AA\u90A1\u822B\u5F77\u678B\u9C82\u531A\u94AB",
  xian: "\u73B0\u5148\u53BF\u89C1\u7EBF\u9650\u663E\u9669\u732E\u9C9C\u6D17\u5BAA\u7EA4\u9677\u95F2\u8D24\u4ED9\u8854\u6380\u54B8\u5ACC\u63BA\u7FA1\u5F26\u817A\u75EB\u5A34\u8237\u9985\u9170\u94E3\u51BC\u6D8E\u66B9\u7C7C\u9528\u82CB\u86AC\u8DF9\u5C98\u85D3\u71F9\u9E47\u6C19\u83B6\u9730\u8DE3\u7303\u5F61\u7946\u7B45",
  fou: "\u4E0D\u5426\u7F36",
  ca: "\u62C6\u64E6\u5693\u7924",
  cha: "\u67E5\u5BDF\u5DEE\u8336\u63D2\u53C9\u5239\u832C\u6942\u5C94\u8BE7\u78B4\u5693\u55B3\u59F9\u6748\u6C4A\u8869\u643D\u69CE\u9572\u82F4\u6AAB\u9987\u9538\u7339",
  cai: "\u624D\u91C7\u8D22\u6750\u83DC\u5F69\u88C1\u8521\u731C\u8E29\u776C",
  can: "\u53C2\u6B8B\u9910\u707F\u60E8\u8695\u63BA\u74A8\u60ED\u7CB2\u5B71\u9A96\u9EEA",
  shen: "\u4FE1\u6DF1\u53C2\u8EAB\u795E\u4EC0\u5BA1\u7533\u751A\u6C88\u4F38\u614E\u6E17\u80BE\u7EC5\u8398\u547B\u5A76\u5A20\u7837\u8703\u54C2\u6939\u845A\u5432\u7CC1\u6E16\u8BDC\u8C02\u77E7\u80C2",
  cen: "\u53C2\u5C91\u6D94",
  san: "\u4E09\u53C2\u6563\u4F1E\u53C1\u7CC1\u9993\u6BF5",
  cang: "\u85CF\u4ED3\u82CD\u6CA7\u8231\u81E7\u4F27",
  zang: "\u85CF\u810F\u846C\u8D43\u81E7\u5958\u9A75",
  chen: "\u79F0\u9648\u6C88\u6C89\u6668\u741B\u81E3\u5C18\u8FB0\u886C\u8D81\u5FF1\u90F4\u5BB8\u8C0C\u789C\u55D4\u62BB\u6987\u4F27\u8C36\u9F80\u809C",
  cao: "\u8349\u64CD\u66F9\u69FD\u7CD9\u5608\u6F15\u87AC\u825A\u5C6E",
  ce: "\u7B56\u6D4B\u518C\u4FA7\u5395\u6805\u607B",
  ze: "\u8D23\u5219\u6CFD\u62E9\u4FA7\u548B\u5567\u4EC4\u7BA6\u8D5C\u7B2E\u8234\u6603\u8FEE\u5E3B",
  zhai: "\u503A\u62E9\u9F50\u5B85\u5BE8\u4FA7\u6458\u7A84\u658B\u796D\u7FDF\u7826\u7635\u54DC",
  dao: "\u5230\u9053\u5BFC\u5C9B\u5012\u5200\u76D7\u7A3B\u8E48\u60BC\u6363\u53E8\u7977\u7118\u6C18\u7E9B\u5202\u5E31\u5FC9",
  ceng: "\u5C42\u66FE\u8E6D\u564C",
  zha: "\u67E5\u624E\u70B8\u8BC8\u95F8\u6E23\u548B\u4E4D\u69A8\u6942\u672D\u6805\u7728\u54A4\u67DE\u55B3\u558B\u94E1\u86B1\u5412\u600D\u781F\u63F8\u75C4\u54F3\u9F44",
  chai: "\u5DEE\u62C6\u67F4\u9497\u8C7A\u4FAA\u867F\u7625",
  ci: "\u6B21\u6B64\u5DEE\u8BCD\u8F9E\u523A\u74F7\u78C1\u5179\u6148\u8328\u8D50\u7960\u4F3A\u96CC\u75B5\u9E5A\u7CCD\u5472\u7CA2",
  zi: "\u8D44\u81EA\u5B50\u5B57\u9F50\u54A8\u6ECB\u4ED4\u59FF\u7D2B\u5179\u5B5C\u6DC4\u7C7D\u6893\u9CBB\u6E0D\u59CA\u5431\u79ED\u6063\u753E\u5B73\u8A3E\u6ED3\u9531\u8F8E\u8D91\u9F87\u8D40\u7726\u7F01\u5472\u7B2B\u8C18\u5D6B\u9AED\u8308\u7CA2\u89DC\u8014",
  cuo: "\u63AA\u9519\u78CB\u632B\u6413\u64AE\u8E49\u9509\u539D\u5D6F\u75E4\u77EC\u7625\u811E\u9E7E",
  chan: "\u4EA7\u5355\u9610\u5D2D\u7F20\u63BA\u7985\u98A4\u94F2\u8749\u6400\u6F7A\u87FE\u998B\u5FCF\u5A75\u5B71\u89C7\u5EDB\u8C04\u8C17\u6FB6\u9AA3\u7FBC\u8E94\u8487\u5181",
  shan: "\u5C71\u5355\u5584\u9655\u95EA\u886B\u64C5\u6C55\u6247\u63BA\u73CA\u7985\u5220\u81B3\u7F2E\u8D61\u912F\u6805\u717D\u59D7\u8DDA\u9CDD\u5B17\u6F78\u8BAA\u8222\u82EB\u759D\u63B8\u81BB\u9490\u5261\u87EE\u829F\u57CF\u5F61\u9A9F",
  zhan: "\u5C55\u6218\u5360\u7AD9\u5D2D\u7C98\u6E5B\u6CBE\u77BB\u98A4\u8A79\u65A9\u76CF\u8F97\u7EFD\u6BE1\u6808\u8638\u65C3\u8C35\u640C",
  xin: "\u65B0\u5FC3\u4FE1\u8F9B\u6B23\u85AA\u99A8\u946B\u82AF\u950C\u5FFB\u8398\u6615\u8845\u6B46\u56DF\u5FC4\u9561",
  lian: "\u8054\u8FDE\u7EC3\u5EC9\u70BC\u8138\u83B2\u604B\u94FE\u5E18\u601C\u6D9F\u655B\u740F\u9570\u6FC2\u695D\u9CA2\u6B93\u6F4B\u88E2\u88E3\u81C1\u5941\u83B6\u880A\u8539",
  chang: "\u573A\u957F\u5382\u5E38\u507F\u660C\u5531\u7545\u5021\u5C1D\u80A0\u655E\u5018\u7316\u5A3C\u6DCC\u88F3\u5F9C\u6636\u6005\u5AE6\u83D6\u9CB3\u960A\u4F25\u82CC\u6C05\u60DD\u9B2F",
  zhang: "\u957F\u5F20\u7AE0\u969C\u6DA8\u638C\u5E10\u80C0\u5F70\u4E08\u4ED7\u6F33\u6A1F\u8D26\u6756\u748B\u5D82\u4EC9\u7634\u87D1\u7350\u5E5B\u9123\u5ADC",
  chao: "\u8D85\u671D\u6F6E\u7092\u949E\u6284\u5DE2\u5435\u527F\u7EF0\u5632\u6641\u712F\u8016\u600A",
  zhao: "\u7740\u7167\u62DB\u627E\u53EC\u671D\u8D75\u5146\u662D\u8087\u7F69\u948A\u6CBC\u5632\u722A\u8BCF\u6FEF\u5541\u68F9\u7B0A",
  zhou: "\u8C03\u5DDE\u5468\u6D32\u821F\u9AA4\u8F74\u663C\u5B99\u7CA5\u76B1\u8098\u5492\u5E1A\u80C4\u7EC9\u7EA3\u59AF\u5541\u8BCC\u7E47\u78A1\u7C40\u914E\u836E",
  che: "\u8F66\u5F7B\u64A4\u5C3A\u626F\u6F88\u63A3\u577C\u7817\u5C6E",
  ju: "\u8F66\u5C40\u636E\u5177\u4E3E\u4E14\u5C45\u5267\u5DE8\u805A\u6E20\u8DDD\u53E5\u62D2\u4FF1\u67DC\u83CA\u62D8\u70AC\u6854\u60E7\u77E9\u97A0\u9A79\u952F\u8E1E\u5480\u77BF\u67B8\u63AC\u6CAE\u8392\u6A58\u98D3\u75BD\u949C\u8D84\u8E3D\u907D\u741A\u9F83\u6910\u82E3\u88FE\u6998\u72D9\u5028\u6989\u82F4\u8BB5\u96CE\u9514\u7AAD\u97AB\u728B\u5C66\u91B5",
  cheng: "\u6210\u7A0B\u57CE\u627F\u79F0\u76DB\u62A2\u4E58\u8BDA\u5448\u51C0\u60E9\u6491\u6F84\u79E4\u6A59\u9A8B\u901E\u77A0\u4E1E\u665F\u94DB\u57D5\u584D\u86CF\u67FD\u94D6\u9172\u88CE\u67A8",
  rong: "\u5BB9\u8363\u878D\u7ED2\u6EB6\u84C9\u7194\u620E\u6995\u8338\u5197\u5D58\u809C\u72E8\u877E",
  sheng: "\u751F\u58F0\u5347\u80DC\u76DB\u4E58\u5723\u5269\u7272\u7538\u7701\u7EF3\u7B19\u7525\u5D4A\u665F\u6E11\u771A",
  deng: "\u7B49\u767B\u9093\u706F\u6F84\u51F3\u77AA\u8E6C\u5654\u78F4\u5D9D\u956B\u7C26\u6225",
  zhi: "\u5236\u4E4B\u6CBB\u8D28\u804C\u53EA\u5FD7\u81F3\u6307\u7EC7\u652F\u503C\u77E5\u8BC6\u76F4\u81F4\u6267\u7F6E\u6B62\u690D\u7EB8\u62D3\u667A\u6B96\u79E9\u65E8\u5740\u6EDE\u6C0F\u679D\u829D\u8102\u5E1C\u6C41\u80A2\u631A\u7A1A\u916F\u63B7\u5CD9\u7099\u6809\u4F84\u82B7\u7A92\u54AB\u5431\u8DBE\u75D4\u8718\u90C5\u684E\u96C9\u7949\u90E6\u965F\u75E3\u86ED\u5E19\u67B3\u8E2F\u5FB5\u80DD\u6800\u8D3D\u7957\u8C78\u9E37\u646D\u8F75\u536E\u8F7E\u5F58\u89EF\u7D77\u8DD6\u57F4\u5902\u9EF9\u5FEE\u9A98\u81A3\u8E2C",
  zheng: "\u653F\u6B63\u8BC1\u4E89\u6574\u5F81\u90D1\u4E01\u75C7\u6323\u84B8\u7741\u94EE\u7B5D\u62EF\u5CE5\u6014\u8BE4\u72F0\u5FB5\u94B2",
  tang: "\u5802\u5510\u7CD6\u6C64\u5858\u8EBA\u8D9F\u5018\u68E0\u70EB\u6DCC\u819B\u642A\u9557\u50A5\u87B3\u6E8F\u5E11\u7FB0\u6A18\u91A3\u8797\u8025\u94F4\u746D",
  chi: "\u6301\u5403\u6C60\u8FDF\u8D64\u9A70\u5C3A\u65A5\u9F7F\u7FC5\u5319\u75F4\u803B\u70BD\u4F88\u5F1B\u53F1\u557B\u577B\u7719\u55E4\u5880\u54E7\u830C\u8C49\u6555\u7B1E\u996C\u8E1F\u86A9\u67E2\u5AB8\u9B51\u7BEA\u892B\u5F73\u9E31\u87AD\u761B\u7735\u50BA",
  shi: "\u662F\u65F6\u5B9E\u4E8B\u5E02\u5341\u4F7F\u4E16\u65BD\u5F0F\u52BF\u89C6\u8BC6\u5E08\u53F2\u793A\u77F3\u98DF\u59CB\u58EB\u5931\u9002\u8BD5\u4EC0\u6CFD\u5BA4\u4F3C\u8BD7\u9970\u6B96\u91CA\u9A76\u6C0F\u7855\u901D\u6E7F\u8680\u72EE\u8A93\u62FE\u5C38\u5319\u4ED5\u67FF\u77E2\u5CD9\u4F8D\u566C\u55DC\u6805\u62ED\u5618\u5C4E\u6043\u8F7C\u8671\u8006\u8210\u83B3\u94C8\u8C25\u70BB\u8C55\u9CA5\u9963\u87AB\u917E\u7B6E\u57D8\u5F11\u793B\u84CD\u9CBA\u8D33",
  qi: "\u4F01\u5176\u8D77\u671F\u6C14\u4E03\u5668\u6C7D\u5947\u9F50\u542F\u65D7\u68CB\u59BB\u5F03\u63ED\u679D\u6B67\u6B3A\u9A91\u5951\u8FC4\u4E9F\u6F06\u621A\u5C82\u7A3D\u5C90\u7426\u6816\u7F09\u742A\u6CE3\u4E5E\u780C\u7941\u5D0E\u7EEE\u797A\u7948\u51C4\u6DC7\u675E\u8110\u9E92\u573B\u61A9\u82AA\u4F0E\u4FDF\u7566\u8006\u847A\u6C8F\u840B\u9A90\u9CCD\u7DA6\u8BAB\u8572\u5C7A\u9880\u4E93\u789B\u67D2\u5550\u6C54\u7DAE\u8401\u5601\u86F4\u69ED\u6B39\u8291\u6864\u4E0C\u871E",
  chuai: "\u63E3\u8E39\u555C\u640B\u81AA",
  tuo: "\u6258\u8131\u62D3\u62D6\u59A5\u9A7C\u9640\u6CB1\u9E35\u9A6E\u553E\u692D\u5768\u4F57\u7823\u8DCE\u5EB9\u67C1\u6A50\u4E47\u94CA\u6CB2\u9161\u9F0D\u7BA8\u67DD",
  duo: "\u591A\u5EA6\u593A\u6735\u8EB2\u94CE\u968B\u5484\u5815\u8235\u579B\u60F0\u54C6\u8E31\u8DFA\u6387\u5241\u67C1\u7F0D\u6CB2\u88F0\u54DA\u96B3",
  xue: "\u5B66\u8840\u96EA\u524A\u859B\u7A74\u9774\u8C11\u5671\u9CD5\u8E05\u6CF6\u5F50",
  chong: "\u91CD\u79CD\u5145\u51B2\u6D8C\u5D07\u866B\u5BA0\u5FE1\u61A7\u8202\u833A\u94F3\u825F",
  chou: "\u7B79\u62BD\u7EF8\u916C\u6101\u4E11\u81ED\u4EC7\u7574\u7A20\u7785\u8E0C\u60C6\u4FE6\u7633\u96E0\u5E31",
  qiu: "\u6C42\u7403\u79CB\u4E18\u90B1\u4EC7\u914B\u88D8\u9F9F\u56DA\u9052\u9CC5\u866C\u86AF\u6CC5\u6978\u6E6B\u72B0\u9011\u5DEF\u827D\u4FC5\u8764\u8D47\u9F3D\u7CD7",
  xiu: "\u4FEE\u79C0\u4F11\u5BBF\u8896\u7EE3\u81ED\u673D\u9508\u7F9E\u55C5\u5CAB\u6EB4\u5EA5\u9990\u54BB\u9AF9\u9E3A\u8C85",
  chu: "\u51FA\u5904\u7840\u521D\u52A9\u9664\u50A8\u755C\u89E6\u695A\u53A8\u96CF\u77D7\u6A71\u9504\u6EC1\u8E87\u6035\u7ECC\u6410\u520D\u870D\u9EDC\u6775\u8E70\u4E8D\u6A17\u61B7\u696E",
  tuan: "\u56E2\u63E3\u6E4D\u7583\u629F\u5F56",
  zhui: "\u8FFD\u5760\u7F00\u63E3\u690E\u9525\u8D58\u60F4\u96B9\u9A93\u7F12",
  chuan: "\u4F20\u5DDD\u8239\u7A7F\u4E32\u5598\u693D\u821B\u948F\u9044\u6C1A\u5DDB\u8221",
  zhuan: "\u4E13\u8F6C\u4F20\u8D5A\u7816\u64B0\u7BC6\u9994\u556D\u989B",
  yuan: "\u5143\u5458\u9662\u539F\u6E90\u8FDC\u613F\u56ED\u63F4\u5706\u7F18\u8881\u6028\u6E0A\u82D1\u5B9B\u51A4\u5A9B\u733F\u57A3\u6C85\u586C\u57B8\u9E33\u8F95\u9E22\u7457\u571C\u7230\u82AB\u9F0B\u6A7C\u8788\u7722\u7BA2\u63BE",
  cuan: "\u7A9C\u6512\u7BE1\u8E7F\u64BA\u7228\u6C46\u9569",
  chuang: "\u521B\u5E8A\u7A97\u95EF\u5E62\u75AE\u6006",
  zhuang: "\u88C5\u72B6\u5E84\u58EE\u649E\u5986\u5E62\u6869\u5958\u50EE\u6206",
  chui: "\u5439\u5782\u9524\u708A\u690E\u9672\u69CC\u6376\u68F0",
  chun: "\u6625\u7EAF\u9187\u6DF3\u5507\u693F\u8822\u9E51\u6710\u83BC\u80AB\u877D",
  zhun: "\u51C6\u5C6F\u6DF3\u8C06\u80AB\u7A80",
  cu: "\u4FC3\u8D8B\u8DA3\u7C97\u7C07\u918B\u5352\u8E74\u731D\u8E59\u851F\u6B82\u5F82",
  dun: "\u5428\u987F\u76FE\u6566\u8E72\u58A9\u56E4\u6C8C\u949D\u7096\u76F9\u9041\u8DB8\u7818\u7905",
  qu: "\u533A\u53BB\u53D6\u66F2\u8D8B\u6E20\u8DA3\u9A71\u5C48\u8EAF\u8862\u5A36\u795B\u77BF\u5C96\u9F8B\u89D1\u6710\u86D0\u766F\u86C6\u82E3\u9612\u8BCE\u52AC\u8556\u8627\u6C0D\u9EE2\u883C\u74A9\u9EB4\u9E32\u78F2",
  xu: "\u9700\u8BB8\u7EED\u987B\u5E8F\u5F90\u4F11\u84C4\u755C\u865A\u5401\u7EEA\u53D9\u65ED\u90AA\u6064\u589F\u6829\u7D6E\u5729\u5A7F\u620C\u80E5\u5618\u6D52\u7166\u9157\u8BE9\u6710\u76F1\u84FF\u6E86\u6D2B\u987C\u52D6\u7CC8\u7809\u9191",
  chuo: "\u8F8D\u7EF0\u6233\u6DD6\u555C\u9F8A\u8E14\u8FB6",
  zu: "\u7EC4\u65CF\u8DB3\u7956\u79DF\u963B\u5352\u4FCE\u8BC5\u955E\u83F9",
  ji: "\u6D4E\u673A\u5176\u6280\u57FA\u8BB0\u8BA1\u7CFB\u671F\u9645\u53CA\u96C6\u7EA7\u51E0\u7ED9\u79EF\u6781\u5DF1\u7EAA\u5373\u7EE7\u51FB\u65E2\u6FC0\u7EE9\u6025\u5947\u5409\u5B63\u9F50\u75BE\u8FF9\u9E21\u5242\u8F91\u7C4D\u5BC4\u6324\u573E\u5180\u4E9F\u5BC2\u66A8\u810A\u8DFB\u808C\u7A3D\u5FCC\u9965\u796D\u7F09\u68D8\u77F6\u6C72\u7578\u59EC\u85C9\u7620\u9AA5\u7F81\u5993\u8BA5\u7A37\u84DF\u60B8\u5AC9\u5C8C\u53FD\u4F0E\u9CAB\u8BD8\u696B\u8360\u621F\u7B95\u9701\u5D47\u89CA\u9E82\u757F\u7391\u7B08\u7284\u82A8\u5527\u5C50\u9AFB\u6222\u4F76\u5048\u7B04\u8DFD\u84BA\u4E69\u54AD\u8D4D\u5D74\u866E\u638E\u9F51\u6B9B\u9C9A\u525E\u6D0E\u4E0C\u58BC\u857A\u5F50\u82B0\u54DC",
  cong: "\u4ECE\u4E1B\u5306\u806A\u8471\u56F1\u742E\u6DD9\u679E\u9AA2\u82C1\u7481",
  zong: "\u603B\u4ECE\u7EFC\u5B97\u7EB5\u8E2A\u68D5\u7CBD\u9B03\u506C\u679E\u8159",
  cou: "\u51D1\u8F8F\u8160\u6971",
  cui: "\u8870\u50AC\u5D14\u8106\u7FE0\u8403\u7CB9\u6467\u7480\u7601\u60B4\u6DEC\u5550\u96B9\u6BF3\u69B1",
  wei: "\u4E3A\u4F4D\u59D4\u672A\u7EF4\u536B\u56F4\u8FDD\u5A01\u4F1F\u5371\u5473\u5FAE\u552F\u8C13\u4F2A\u6170\u5C3E\u9B4F\u97E6\u80C3\u754F\u5E37\u5582\u5DCD\u840E\u851A\u7EAC\u6F4D\u5C09\u6E2D\u60DF\u8587\u82C7\u709C\u5729\u5A13\u8BFF\u73AE\u5D34\u6845\u504E\u9036\u502D\u7325\u56D7\u8473\u9697\u75FF\u732C\u6DA0\u5D6C\u97EA\u7168\u8249\u96B9\u5E0F\u95F1\u6D27\u6CA9\u9688\u9C94\u8ECE",
  cun: "\u6751\u5B58\u5BF8\u5FD6\u76B4",
  zuo: "\u4F5C\u505A\u5EA7\u5DE6\u5750\u6628\u4F50\u7422\u64AE\u795A\u67DE\u5511\u562C\u9162\u600D\u7B2E\u963C\u80D9",
  zuan: "\u94BB\u7E82\u6525\u7F35\u8E9C",
  da: "\u5927\u8FBE\u6253\u7B54\u642D\u6C93\u7629\u60EE\u55D2\u54D2\u8037\u9791\u977C\u8921\u7B2A\u601B\u59B2",
  dai: "\u5927\u4EE3\u5E26\u5F85\u8D37\u6BD2\u6234\u888B\u6B79\u5446\u96B6\u902E\u5CB1\u50A3\u68E3\u6020\u6B86\u9EDB\u7519\u57ED\u8BD2\u7ED0\u73B3\u5454\u8FE8",
  tai: "\u53F0\u592A\u6001\u6CF0\u62AC\u80CE\u6C70\u949B\u82D4\u85B9\u80BD\u8DC6\u90B0\u9C90\u915E\u9A80\u70B1",
  ta: "\u4ED6\u5B83\u5979\u62D3\u5854\u8E0F\u584C\u69BB\u6C93\u6F2F\u736D\u55D2\u631E\u8E4B\u8DBF\u9062\u94CA\u9CCE\u6EBB\u95FC",
  dan: "\u4F46\u5355\u77F3\u62C5\u4E39\u80C6\u65E6\u5F39\u86CB\u6DE1\u8BDE\u6C2E\u90F8\u803D\u6B9A\u60EE\u510B\u7708\u75B8\u6FB9\u63B8\u81BB\u5556\u7BAA\u8043\u840F\u7605\u8D55",
  lu: "\u8DEF\u516D\u9646\u5F55\u7EFF\u9732\u9C81\u5362\u7089\u9E7F\u7984\u8D42\u82A6\u5E90\u788C\u9E93\u9885\u6CF8\u5364\u6F5E\u9E6D\u8F98\u864F\u7490\u6F09\u565C\u622E\u9C88\u63B3\u6A79\u8F73\u902F\u6E0C\u84FC\u64B8\u9E2C\u680C\u6C07\u80EA\u9565\u7C0F\u823B\u8F82\u5786",
  tan: "\u8C08\u63A2\u5766\u644A\u5F39\u70AD\u575B\u6EE9\u8D2A\u53F9\u8C2D\u6F6D\u78B3\u6BEF\u762B\u6A80\u75F0\u8892\u574D\u8983\u5FD0\u6619\u90EF\u6FB9\u94BD\u952C",
  ren: "\u4EBA\u4EFB\u8BA4\u4EC1\u5FCD\u97E7\u5203\u7EAB\u996A\u598A\u834F\u7A14\u58EC\u4EDE\u8F6B\u4EBB\u887D",
  jie: "\u5BB6\u7ED3\u89E3\u4EF7\u754C\u63A5\u8282\u5979\u5C4A\u4ECB\u9636\u8857\u501F\u6770\u6D01\u622A\u59D0\u63ED\u6377\u52AB\u6212\u7686\u7AED\u6854\u8BEB\u6977\u79F8\u776B\u85C9\u62EE\u82A5\u8BD8\u78A3\u55DF\u9889\u86A7\u5B51\u5A55\u7596\u6840\u8BA6\u75A5\u5048\u7FAF\u88B7\u54DC\u5588\u5369\u9C92\u9AB1",
  yan: "\u7814\u4E25\u9A8C\u6F14\u8A00\u773C\u70DF\u6CBF\u5EF6\u76D0\u708E\u71D5\u5CA9\u5BB4\u8273\u989C\u6BB7\u5F66\u63A9\u6DF9\u960E\u884D\u94C5\u96C1\u54BD\u538C\u7130\u5830\u781A\u5501\u7109\u664F\u6A90\u8712\u5944\u4FE8\u814C\u598D\u8C1A\u5156\u7B75\u7131\u5043\u95EB\u5AE3\u9122\u6E6E\u8D5D\u80ED\u7430\u6EDF\u9609\u9B47\u917D\u90FE\u6079\u5D26\u82AB\u5261\u9F39\u83F8\u990D\u57CF\u8C33\u8BA0\u53A3\u7F68",
  dang: "\u5F53\u515A\u6863\u8361\u6321\u5B95\u7800\u94DB\u88C6\u51FC\u83EA\u8C20",
  tao: "\u5957\u8BA8\u8DF3\u9676\u6D9B\u9003\u6843\u8404\u6DD8\u638F\u6ED4\u97EC\u53E8\u6D2E\u5555\u7EE6\u9955\u9F17",
  tiao: "\u6761\u8C03\u6311\u8DF3\u8FE2\u773A\u82D5\u7A95\u7B24\u4F7B\u5541\u7C9C\u9AEB\u94EB\u7967\u9F86\u8729\u9CA6",
  te: "\u7279\u5FD1\u5FD2\u94FD\u615D",
  de: "\u7684\u5730\u5F97\u5FB7\u5E95\u951D",
  dei: "\u5F97",
  di: "\u7684\u5730\u7B2C\u63D0\u4F4E\u5E95\u62B5\u5F1F\u8FEA\u9012\u5E1D\u654C\u5824\u8482\u7F14\u6EF4\u6DA4\u7FDF\u5A23\u7B1B\u68E3\u837B\u8C1B\u72C4\u90B8\u5600\u7825\u577B\u8BCB\u5AE1\u955D\u78B2\u9AB6\u6C10\u67E2\u7C74\u7F9D\u7747\u89CC",
  ti: "\u4F53\u63D0\u9898\u5F1F\u66FF\u68AF\u8E22\u60D5\u5254\u8E44\u68E3\u557C\u5C49\u5243\u6D95\u9511\u501C\u608C\u9016\u568F\u8351\u918D\u7EE8\u9E48\u7F07\u88FC",
  tui: "\u63A8\u9000\u5F1F\u817F\u892A\u9893\u8715\u5FD2\u717A",
  you: "\u6709\u7531\u53C8\u4F18\u6E38\u6CB9\u53CB\u53F3\u90AE\u5C24\u5FE7\u5E7C\u72B9\u8BF1\u60A0\u5E7D\u4F51\u91C9\u67DA\u94C0\u9C7F\u56FF\u9149\u6538\u9EDD\u83A0\u7337\u8763\u75A3\u5466\u86B4\u83B8\u839C\u94D5\u5BA5\u7E47\u5363\u7256\u9F2C\u5C22\u86B0\u4F91",
  dian: "\u7535\u70B9\u5E97\u5178\u5960\u7538\u7898\u6DC0\u6BBF\u57AB\u98A0\u6EC7\u766B\u5DC5\u60E6\u6382\u765C\u73B7\u4F43\u8E2E\u975B\u94BF\u7C1F\u576B\u963D",
  tian: "\u5929\u7530\u6DFB\u586B\u751C\u7538\u606C\u8146\u4F43\u8214\u94BF\u9617\u5FDD\u6B84\u754B\u681D\u63AD",
  zhu: "\u4E3B\u672F\u4F4F\u6CE8\u52A9\u5C5E\u9010\u5B81\u8457\u7B51\u9A7B\u6731\u73E0\u795D\u732A\u8BF8\u67F1\u7AF9\u94F8\u682A\u77A9\u5631\u8D2E\u716E\u70DB\u82CE\u891A\u86DB\u62C4\u94E2\u6D19\u7AFA\u86C0\u6E1A\u4F2B\u677C\u4F8F\u6F8D\u8BDB\u8331\u7BB8\u70B7\u8E85\u7FE5\u6F74\u90BE\u69E0\u8233\u6A65\u4E36\u7603\u9E88\u75B0",
  nian: "\u5E74\u5FF5\u917F\u8F97\u78BE\u5EFF\u637B\u64B5\u62C8\u852B\u9CB6\u57DD\u9C87\u8F87\u9ECF",
  diao: "\u8C03\u6389\u96D5\u540A\u9493\u5201\u8C82\u51CB\u7889\u9CB7\u53FC\u94EB\u94DE",
  yao: "\u8981\u4E48\u7EA6\u836F\u9080\u6447\u8000\u8170\u9065\u59DA\u7A91\u7476\u54AC\u5C27\u94A5\u8C23\u80B4\u592D\u4FA5\u5406\u759F\u5996\u5E7A\u6773\u8200\u7A95\u7A88\u66DC\u9E5E\u723B\u7E47\u5FAD\u8F7A\u94EB\u9CD0\u5D3E\u73E7",
  die: "\u8DCC\u53E0\u8776\u8FED\u789F\u7239\u8C0D\u7252\u800B\u4F5A\u558B\u581E\u74DE\u9CBD\u57A4\u63F2\u8E40",
  she: "\u8BBE\u793E\u6444\u6D89\u5C04\u6298\u820D\u86C7\u62FE\u820C\u5962\u6151\u8D66\u8D4A\u4F58\u9E9D\u6B59\u7572\u538D\u731E\u63F2\u6EE0",
  ye: "\u4E1A\u4E5F\u591C\u53F6\u5C04\u91CE\u6DB2\u51B6\u559D\u9875\u7237\u8036\u90AA\u54BD\u6930\u70E8\u6396\u62FD\u66F3\u6654\u8C12\u814B\u564E\u63F6\u9765\u90BA\u94D8\u63F2",
  xie: "\u4E9B\u89E3\u534F\u5199\u8840\u53F6\u8C22\u68B0\u978B\u80C1\u659C\u643A\u61C8\u5951\u5378\u8C10\u6CC4\u87F9\u90AA\u6B47\u6CFB\u5C51\u631F\u71EE\u69AD\u874E\u64B7\u5055\u4EB5\u6954\u9889\u7F2C\u9082\u9C91\u7023\u52F0\u698D\u85A4\u7EC1\u6E2B\u5EE8\u736C\u8E9E",
  zhe: "\u8FD9\u8005\u7740\u8457\u6D59\u6298\u54F2\u8517\u906E\u8F99\u8F84\u67D8\u9517\u8936\u8707\u86F0\u9E67\u8C2A\u8D6D\u647A\u4E47\u78D4\u87AB",
  ding: "\u5B9A\u8BA2\u9876\u4E01\u9F0E\u76EF\u9489\u952D\u53EE\u4EC3\u94E4\u753A\u914A\u5576\u7887\u815A\u7594\u738E\u8035",
  diu: "\u4E22\u94E5",
  ting: "\u542C\u5EAD\u505C\u5385\u5EF7\u633A\u4EAD\u8247\u5A77\u6C40\u94E4\u70C3\u9706\u753A\u8713\u8476\u6883\u839B",
  dong: "\u52A8\u4E1C\u8463\u51AC\u6D1E\u61C2\u51BB\u680B\u4F97\u549A\u5CD2\u6C21\u606B\u80F4\u7850\u578C\u9E2B\u5CBD\u80E8",
  tong: "\u540C\u901A\u7EDF\u7AE5\u75DB\u94DC\u6876\u6850\u7B52\u5F64\u4F97\u4F5F\u6F7C\u6345\u916E\u783C\u77B3\u6078\u5CD2\u4EDD\u55F5\u50EE\u578C\u833C",
  zhong: "\u4E2D\u91CD\u79CD\u4F17\u7EC8\u949F\u5FE0\u4EF2\u8877\u80BF\u8E35\u51A2\u76C5\u86A3\u5FEA\u953A\u822F\u87BD\u5902",
  dou: "\u90FD\u6597\u8BFB\u8C46\u6296\u515C\u9661\u9017\u7AA6\u6E0E\u86AA\u75D8\u8538\u94AD\u7BFC",
  du: "\u5EA6\u90FD\u72EC\u7763\u8BFB\u6BD2\u6E21\u675C\u5835\u8D4C\u7779\u809A\u9540\u6E0E\u7B03\u7AFA\u561F\u728A\u5992\u724D\u8839\u691F\u9EE9\u828F\u9AD1",
  duan: "\u65AD\u6BB5\u77ED\u7AEF\u953B\u7F0E\u7145\u6934\u7C16",
  dui: "\u5BF9\u961F\u8FFD\u6566\u5151\u5806\u7893\u9566\u603C\u619D",
  rui: "\u745E\u5151\u9510\u777F\u82AE\u854A\u8564\u868B\u6798",
  yue: "\u6708\u8BF4\u7EA6\u8D8A\u4E50\u8DC3\u5151\u9605\u5CB3\u7CA4\u60A6\u66F0\u94A5\u680E\u94BA\u6A3E\u7039\u9FA0\u54D5\u5216",
  tun: "\u541E\u5C6F\u56E4\u892A\u8C5A\u81C0\u9968\u66BE\u6C3D",
  hui: "\u4F1A\u56DE\u6325\u6C47\u60E0\u8F89\u6062\u5FBD\u7ED8\u6BC1\u6167\u7070\u8D3F\u5349\u6094\u79FD\u6E83\u835F\u6656\u5F57\u8BB3\u8BF2\u73F2\u5815\u8BD9\u8559\u6666\u7762\u9EBE\u70E9\u8334\u5599\u6867\u86D4\u6D04\u6D4D\u867A\u605A\u87EA\u54B4\u96B3\u7F0B\u54D5",
  wu: "\u52A1\u7269\u65E0\u4E94\u6B66\u5348\u5434\u821E\u4F0D\u6C61\u4E4C\u8BEF\u4EA1\u6076\u5C4B\u6664\u609F\u543E\u96FE\u829C\u68A7\u52FF\u5DEB\u4FAE\u575E\u6BCB\u8BEC\u545C\u94A8\u90AC\u6342\u9E5C\u5140\u5A7A\u59A9\u65BC\u620A\u9E49\u6D6F\u8708\u5514\u9A9B\u4EF5\u7110\u82B4\u92C8\u5E91\u9F2F\u727E\u6003\u572C\u5FE4\u75E6\u8FD5\u674C\u5BE4\u9622",
  ya: "\u4E9A\u538B\u96C5\u7259\u62BC\u9E2D\u5440\u8F67\u6DAF\u5D16\u90AA\u82BD\u54D1\u8BB6\u9E26\u5A05\u8859\u4E2B\u869C\u78A3\u57AD\u4F22\u6C29\u6860\u740A\u63E0\u5416\u775A\u75D6\u758B\u8FD3\u5C88\u7811",
  he: "\u548C\u5408\u6CB3\u4F55\u6838\u76D6\u8D3A\u559D\u8D6B\u8377\u76D2\u9E64\u5413\u5475\u82DB\u79BE\u83CF\u58D1\u8910\u6DB8\u9602\u9616\u52BE\u8BC3\u988C\u55EC\u8C89\u66F7\u7FEE\u7EA5\u76CD",
  wo: "\u6211\u63E1\u7A9D\u6C83\u5367\u631D\u6DA1\u65A1\u6E25\u5E44\u8717\u5594\u502D\u83B4\u9F8C\u809F\u786A",
  en: "\u6069\u6441\u84BD",
  n: "\u55EF\u5514",
  er: "\u800C\u4E8C\u5C14\u513F\u8033\u8FE9\u9975\u6D31\u8D30\u94D2\u73E5\u4F74\u9E38\u9C95",
  fa: "\u53D1\u6CD5\u7F5A\u4E4F\u4F10\u9600\u7B4F\u781D\u57A1\u73D0",
  quan: "\u5168\u6743\u5238\u6CC9\u5708\u62F3\u529D\u72AC\u94E8\u75CA\u8BE0\u8343\u919B\u8737\u98A7\u7EFB\u72AD\u7B4C\u9B08\u609B\u8F81\u754E",
  fei: "\u8D39\u975E\u98DE\u80A5\u5E9F\u83F2\u80BA\u5561\u6CB8\u532A\u6590\u871A\u5983\u8BFD\u6249\u7FE1\u970F\u5420\u7EEF\u8153\u75F1\u82BE\u6DDD\u60B1\u72D2\u69A7\u7829\u9CB1\u7BDA\u9544",
  pei: "\u914D\u57F9\u574F\u8D54\u4F69\u966A\u6C9B\u88F4\u80DA\u5983\u9708\u6DE0\u65C6\u5E14\u5478\u9185\u8F94\u952B",
  ping: "\u5E73\u8BC4\u51ED\u74F6\u51AF\u5C4F\u840D\u82F9\u4E52\u576A\u67B0\u5A09\u4FDC\u9C86",
  fo: "\u4F5B",
  hu: "\u548C\u62A4\u6237\u6838\u6E56\u4E92\u4E4E\u547C\u80E1\u620F\u5FFD\u864E\u6CAA\u7CCA\u58F6\u846B\u72D0\u8774\u5F27\u745A\u6D52\u9E44\u7425\u6248\u552C\u6EF9\u60DA\u795C\u56EB\u659B\u7B0F\u82B4\u9190\u7322\u6019\u553F\u623D\u69F2\u89F3\u7173\u9E55\u51B1\u74E0\u864D\u5CB5\u9E71\u70C0\u8F77",
  ga: "\u5939\u5496\u560E\u5C2C\u5676\u65EE\u4F3D\u5C15\u9486\u5C1C",
  ge: "\u4E2A\u5408\u5404\u9769\u683C\u6B4C\u54E5\u76D6\u9694\u5272\u9601\u6208\u845B\u9E3D\u6401\u80F3\u8238\u7599\u94EC\u9ABC\u86E4\u54AF\u572A\u9549\u988C\u4EE1\u784C\u55DD\u9B32\u8188\u7EA5\u88BC\u643F\u5865\u54FF\u867C",
  ha: "\u54C8\u86E4\u94EA",
  xia: "\u4E0B\u590F\u5CE1\u53A6\u8F96\u971E\u5939\u867E\u72ED\u5413\u4FA0\u6687\u9050\u778E\u5323\u7455\u552C\u5477\u9EE0\u7856\u7F45\u72CE\u7615\u67D9",
  gai: "\u6539\u8BE5\u76D6\u6982\u6E89\u9499\u4E10\u82A5\u8D45\u5793\u9654\u6224",
  hai: "\u6D77\u8FD8\u5BB3\u5B69\u4EA5\u54B3\u9AB8\u9A87\u6C26\u55E8\u80F2\u91A2",
  gan: "\u5E72\u611F\u8D76\u6562\u7518\u809D\u6746\u8D63\u4E7E\u67D1\u5C34\u7AFF\u79C6\u6A44\u77F8\u6DE6\u82F7\u64C0\u9150\u7EC0\u6CD4\u5769\u65F0\u75B3\u6F89",
  gang: "\u6E2F\u94A2\u521A\u5C97\u7EB2\u5188\u6760\u7F38\u625B\u809B\u7F61\u6206\u7B7B",
  jiang: "\u5C06\u5F3A\u6C5F\u6E2F\u5956\u8BB2\u964D\u7586\u848B\u59DC\u6D46\u5320\u9171\u50F5\u6868\u7EDB\u7F30\u729F\u8C47\u7913\u6D1A\u8333\u7CE8\u8029",
  hang: "\u884C\u822A\u676D\u5DF7\u592F\u542D\u6841\u6C86\u7ED7\u9883",
  gong: "\u5DE5\u516C\u5171\u4F9B\u529F\u7EA2\u8D21\u653B\u5BAB\u5DE9\u9F9A\u606D\u62F1\u8EAC\u5F13\u6C5E\u86A3\u73D9\u89E5\u80B1\u5EFE",
  hong: "\u7EA2\u5B8F\u6D2A\u8F70\u8679\u9E3F\u5F18\u54C4\u70D8\u6CD3\u8A07\u857B\u95F3\u8BA7\u836D\u9EC9\u85A8",
  guang: "\u5E7F\u5149\u901B\u6F62\u72B7\u80F1\u54A3\u6844",
  qiong: "\u7A77\u743C\u7A79\u909B\u8315\u7B47\u8DEB\u86E9\u928E",
  gao: "\u9AD8\u544A\u641E\u7A3F\u818F\u7CD5\u9550\u768B\u7F94\u9506\u6772\u90DC\u777E\u8BF0\u85C1\u7BD9\u7F1F\u69C1\u69D4",
  hao: "\u597D\u53F7\u6BEB\u8C6A\u8017\u6D69\u90DD\u7693\u660A\u768B\u84BF\u58D5\u704F\u568E\u6FE0\u869D\u8C89\u98A2\u55E5\u8585\u5686",
  li: "\u7406\u529B\u5229\u7ACB\u91CC\u674E\u5386\u4F8B\u79BB\u52B1\u793C\u4E3D\u9ECE\u7483\u5389\u5398\u7C92\u8389\u68A8\u96B6\u6817\u8354\u6CA5\u7281\u6F13\u54E9\u72F8\u85DC\u7F79\u7BF1\u9CA4\u783A\u540F\u6FA7\u4FD0\u9A8A\u6EA7\u783E\u8385\u9502\u7B20\u8821\u86CE\u75E2\u96F3\u4FEA\u5088\u91B4\u680E\u90E6\u4FDA\u67A5\u55B1\u9026\u5A0C\u9E42\u623E\u782C\u5533\u575C\u75A0\u870A\u9EE7\u7301\u9B32\u7C9D\u84E0\u5456\u8DDE\u75AC\u7F21\u9CA1\u9CE2\u5AE0\u8A48\u609D\u82C8\u7BE5\u8F79",
  jia: "\u5BB6\u52A0\u4EF7\u5047\u4F73\u67B6\u7532\u5609\u8D3E\u9A7E\u5AC1\u5939\u7A3C\u94BE\u631F\u62EE\u8FE6\u4F3D\u988A\u6D43\u67B7\u621B\u835A\u75C2\u9889\u9553\u7B33\u73C8\u5CAC\u80DB\u8888\u90CF\u846D\u88B7\u7615\u94D7\u8DCF\u86F1\u605D\u54FF",
  luo: "\u843D\u7F57\u7EDC\u6D1B\u903B\u87BA\u9523\u9A86\u841D\u88F8\u6F2F\u70D9\u645E\u9AA1\u54AF\u7BA9\u73DE\u634B\u8366\u784C\u96D2\u6924\u9559\u8DDE\u7630\u6CFA\u8136\u7321\u502E\u8803",
  ke: "\u53EF\u79D1\u514B\u5BA2\u523B\u8BFE\u9897\u6E34\u58F3\u67EF\u68F5\u5475\u5777\u606A\u82DB\u54B3\u78D5\u73C2\u7A1E\u778C\u6E98\u8F72\u7AA0\u55D1\u75B4\u874C\u5CA2\u94EA\u988F\u9AC1\u86B5\u7F02\u6C2A\u9A92\u94B6\u951E",
  qia: "\u5361\u6070\u6D3D\u6390\u9AC2\u88B7\u54AD\u845C",
  gei: "\u7ED9",
  gen: "\u6839\u8DDF\u4E98\u826E\u54CF\u831B",
  hen: "\u5F88\u72E0\u6068\u75D5\u54CF",
  gou: "\u6784\u8D2D\u591F\u53E5\u6C9F\u72D7\u94A9\u62D8\u52FE\u82DF\u57A2\u67B8\u7BDD\u4F5D\u5ABE\u8BDF\u5CA3\u5F40\u7F11\u7B31\u97B2\u89CF\u9058",
  kou: "\u53E3\u6263\u5BC7\u53E9\u62A0\u4F5D\u853B\u82A4\u770D\u7B58",
  gu: "\u80A1\u53E4\u987E\u6545\u56FA\u9F13\u9AA8\u4F30\u8C37\u8D3E\u59D1\u5B64\u96C7\u8F9C\u83C7\u6CBD\u5495\u5471\u9522\u94B4\u7B8D\u6C69\u688F\u75FC\u5D2E\u8F71\u9E2A\u726F\u86CA\u8BC2\u6BC2\u9E58\u83F0\u7F5F\u560F\u81CC\u89DA\u77BD\u86C4\u9164\u727F\u9CB4",
  pai: "\u724C\u6392\u6D3E\u62CD\u8FEB\u5F98\u6E43\u4FF3\u54CC\u848E",
  gua: "\u62EC\u6302\u74DC\u522E\u5BE1\u5366\u5471\u8902\u5250\u80CD\u8BD6\u9E39\u681D\u5459",
  tou: "\u6295\u5934\u900F\u5077\u6109\u9AB0\u4EA0",
  guai: "\u602A\u62D0\u4E56",
  kuai: "\u4F1A\u5FEB\u5757\u7B77\u810D\u84AF\u4FA9\u6D4D\u90D0\u8489\u72EF\u54D9",
  guan: "\u5173\u7BA1\u89C2\u9986\u5B98\u8D2F\u51A0\u60EF\u704C\u7F50\u839E\u7EB6\u68FA\u65A1\u77DC\u500C\u9E73\u9CCF\u76E5\u63BC\u6DAB",
  wan: "\u4E07\u5B8C\u665A\u6E7E\u73A9\u7897\u987D\u633D\u5F2F\u8513\u4E38\u839E\u7696\u5B9B\u5A49\u8155\u873F\u60CB\u70F7\u742C\u7579\u8C4C\u525C\u7EA8\u7EFE\u8118\u83C0\u8284\u7BA2",
  ne: "\u5462\u54EA\u5450\u8BB7\u7592",
  gui: "\u89C4\u8D35\u5F52\u8F68\u6842\u67DC\u572D\u9B3C\u7845\u7470\u8DEA\u9F9F\u532E\u95FA\u8BE1\u7678\u9CDC\u6867\u7688\u9C91\u523D\u6677\u5080\u772D\u59AB\u7085\u5E8B\u7C0B\u523F\u5B84\u5326",
  jun: "\u519B\u5747\u4FCA\u541B\u5CFB\u83CC\u7AE3\u94A7\u9A8F\u9F9F\u6D5A\u96BD\u90E1\u7B60\u76B2\u9E87\u6343",
  jiong: "\u7A98\u70AF\u8FE5\u7085\u5182\u6243",
  jue: "\u51B3\u7EDD\u89D2\u89C9\u6398\u5D1B\u8BC0\u7357\u6289\u7235\u56BC\u5014\u53A5\u8568\u652B\u73CF\u77CD\u8E76\u8C32\u9562\u9CDC\u5671\u6877\u5658\u6485\u6A5B\u5B53\u89D6\u5282\u721D",
  gun: "\u6EDA\u68CD\u8F8A\u886E\u78D9\u9CA7\u7EF2\u4E28",
  hun: "\u5A5A\u6DF7\u9B42\u6D51\u660F\u68CD\u73F2\u8364\u9984\u8BE8\u6EB7\u960D",
  guo: "\u56FD\u8FC7\u679C\u90ED\u9505\u88F9\u5E3C\u6DA1\u6901\u56D7\u8748\u8662\u8052\u57DA\u63B4\u7313\u5D1E\u873E\u5459\u9998",
  hei: "\u9ED1\u563F\u55E8",
  kan: "\u770B\u520A\u52D8\u582A\u574E\u780D\u4F83\u5D4C\u69DB\u77B0\u961A\u9F9B\u6221\u51F5\u83B0",
  heng: "\u8861\u6A2A\u6052\u4EA8\u54FC\u73E9\u6841\u8605",
  mo: "\u4E07\u6CA1\u4E48\u6A21\u672B\u5192\u83AB\u6469\u58A8\u9ED8\u78E8\u6478\u6F20\u8109\u819C\u9B54\u6CAB\u964C\u62B9\u5BDE\u8611\u6479\u84E6\u998D\u8309\u563F\u8C1F\u79E3\u87C6\u8C89\u5AEB\u9546\u6B81\u8031\u5B37\u9EBD\u763C\u8C8A\u8C98",
  peng: "\u9E4F\u670B\u5F6D\u81A8\u84EC\u78B0\u82F9\u68DA\u6367\u4EA8\u70F9\u7BF7\u6F8E\u62A8\u787C\u6026\u7830\u562D\u87DB\u580B",
  hou: "\u540E\u5019\u539A\u4FAF\u7334\u5589\u543C\u9005\u7BCC\u7CC7\u9ABA\u5F8C\u9C8E\u760A\u5820",
  hua: "\u5316\u534E\u5212\u8BDD\u82B1\u753B\u6ED1\u54D7\u8C41\u9A85\u6866\u733E\u94E7\u7809",
  huai: "\u6000\u574F\u6DEE\u5F8A\u69D0\u8E1D",
  huan: "\u8FD8\u73AF\u6362\u6B22\u60A3\u7F13\u5524\u7115\u5E7B\u75EA\u6853\u5BF0\u6DA3\u5BA6\u57B8\u6D39\u6D63\u8C62\u5942\u90C7\u571C\u737E\u9CA9\u9B1F\u8411\u902D\u6F36\u953E\u7F33\u64D0",
  xun: "\u8BAF\u8BAD\u8FC5\u5B59\u5BFB\u8BE2\u5FAA\u65EC\u5DE1\u6C5B\u52CB\u900A\u718F\u5F87\u6D5A\u6B89\u9A6F\u9C9F\u85B0\u8340\u6D54\u6D35\u5CCB\u57D9\u5DFD\u90C7\u91BA\u6042\u8368\u7AA8\u8548\u66DB\u736F",
  huang: "\u9EC4\u8352\u714C\u7687\u51F0\u614C\u6643\u6F62\u8C0E\u60F6\u7C27\u749C\u604D\u5E4C\u6E5F\u8757\u78FA\u968D\u5FA8\u9051\u8093\u7BC1\u9CC7\u87E5\u7640",
  nai: "\u80FD\u4E43\u5976\u8010\u5948\u9F10\u8418\u6C16\u67F0\u4F74\u827F",
  luan: "\u4E71\u5375\u6EE6\u5CE6\u9E3E\u683E\u92AE\u631B\u5B6A\u8114\u5A08",
  qie: "\u5207\u4E14\u5951\u7A83\u8304\u780C\u9532\u602F\u4F3D\u60EC\u59BE\u8D84\u6308\u90C4\u7BA7\u614A",
  jian: "\u5EFA\u95F4\u4EF6\u89C1\u575A\u68C0\u5065\u76D1\u51CF\u7B80\u8270\u8DF5\u517C\u9274\u952E\u6E10\u67EC\u5251\u5C16\u80A9\u8230\u8350\u7BAD\u6D45\u526A\u4FED\u78B1\u8327\u5978\u6B7C\u62E3\u6361\u714E\u8D31\u6E85\u69DB\u6DA7\u5811\u7B3A\u8C0F\u996F\u950F\u7F04\u7751\u8B07\u8E47\u8171\u83C5\u7FE6\u622C\u6BFD\u7B15\u728D\u7877\u97AF\u726E\u67A7\u6E54\u9CA3\u56DD\u88E5\u8E3A\u641B\u7F23\u9E63\u84B9\u8C2B\u50ED\u620B\u8DBC\u6957",
  nan: "\u5357\u96BE\u7537\u6960\u5583\u56E1\u8D67\u8169\u56DD\u877B",
  qian: "\u524D\u5343\u94B1\u7B7E\u6F5C\u8FC1\u6B20\u7EA4\u7275\u6D45\u9063\u8C26\u4E7E\u94C5\u6B49\u9ED4\u8C34\u5D4C\u5029\u94B3\u831C\u8654\u5811\u948E\u9A9E\u9621\u63AE\u94A4\u6266\u828A\u728D\u8368\u4EDF\u82A1\u60AD\u7F31\u4F65\u6106\u8930\u51F5\u80B7\u5C8D\u6434\u7B9D\u614A\u6920",
  qiang: "\u5F3A\u62A2\u7586\u5899\u67AA\u8154\u9535\u545B\u7F8C\u8537\u8941\u7F9F\u8DC4\u6A2F\u6215\u5AF1\u6217\u709D\u956A\u9516\u8723",
  xiang: "\u5411\u9879\u76F8\u60F3\u4E61\u8C61\u54CD\u9999\u964D\u50CF\u4EAB\u7BB1\u7F8A\u7965\u6E58\u8BE6\u6A61\u5DF7\u7FD4\u8944\u53A2\u9576\u98E8\u9977\u7F03\u9AA7\u8297\u5EA0\u9C9E\u8459\u87D3",
  jiao: "\u6559\u4EA4\u8F83\u6821\u89D2\u89C9\u53EB\u811A\u7F34\u80F6\u8F7F\u90CA\u7126\u9A84\u6D47\u6912\u7901\u4F7C\u8549\u5A07\u77EB\u6405\u7EDE\u9175\u527F\u56BC\u997A\u7A96\u8DE4\u86DF\u4FA5\u72E1\u59E3\u768E\u832D\u5CE4\u94F0\u91AE\u9C9B\u6E6B\u5FBC\u9E6A\u50EC\u564D\u827D\u6322\u656B",
  zhuo: "\u7740\u8457\u7F34\u684C\u5353\u6349\u7422\u707C\u6D4A\u914C\u62D9\u8301\u6DBF\u956F\u6DD6\u5544\u6FEF\u712F\u502C\u64E2\u65AB\u68F9\u8BFC\u6D5E\u799A",
  qiao: "\u6865\u4E54\u4FA8\u5DE7\u6084\u6572\u4FCF\u58F3\u96C0\u77A7\u7FD8\u7A8D\u5CED\u9539\u64AC\u835E\u8DF7\u6A35\u6194\u9798\u6A47\u5CE4\u8BEE\u8C2F\u6100\u9792\u7857\u5281\u7F32",
  xiao: "\u5C0F\u6548\u9500\u6D88\u6821\u6653\u7B11\u8096\u524A\u5B5D\u8427\u4FCF\u6F47\u785D\u5BB5\u5578\u56A3\u9704\u6DC6\u54EE\u7B71\u900D\u59E3\u7BAB\u9A81\u67AD\u54D3\u7EE1\u86F8\u5D24\u67B5\u9B48",
  si: "\u53F8\u56DB\u601D\u65AF\u98DF\u79C1\u6B7B\u4F3C\u4E1D\u9972\u5BFA\u8086\u6495\u6CD7\u4F3A\u55E3\u7940\u53AE\u9A77\u5636\u9536\u4FDF\u5DF3\u86F3\u549D\u801C\u7B25\u7E9F\u7CF8\u9E36\u7F0C\u6F8C\u59D2\u6C5C\u53B6\u5155",
  kai: "\u5F00\u51EF\u6168\u5C82\u6977\u607A\u63E9\u9534\u94E0\u5FFE\u57B2\u5240\u950E\u8488",
  jin: "\u8FDB\u91D1\u4ECA\u8FD1\u4EC5\u7D27\u5C3D\u6D25\u65A4\u7981\u9526\u52B2\u664B\u8C28\u7B4B\u5DFE\u6D78\u895F\u9773\u747E\u70EC\u7F19\u9485\u77DC\u89D0\u5807\u9991\u8369\u5664\u5ED1\u5997\u69FF\u8D46\u887F\u537A",
  qin: "\u4EB2\u52E4\u4FB5\u79E6\u94A6\u7434\u79BD\u82B9\u6C81\u5BDD\u64D2\u8983\u5659\u77DC\u55EA\u63FF\u6EB1\u82A9\u887E\u5ED1\u9513\u5423\u6A8E\u8793",
  jing: "\u7ECF\u4EAC\u7CBE\u5883\u7ADE\u666F\u8B66\u7ADF\u4E95\u60CA\u5F84\u9759\u52B2\u656C\u51C0\u955C\u775B\u6676\u9888\u8346\u5162\u9756\u6CFE\u61AC\u9CB8\u830E\u8148\u83C1\u80EB\u9631\u65CC\u7CB3\u9753\u75C9\u7B90\u5106\u8FF3\u5A67\u80BC\u522D\u5F2A\u734D",
  ying: "\u5E94\u8425\u5F71\u82F1\u666F\u8FCE\u6620\u786C\u76C8\u8D62\u9896\u5A74\u9E70\u8367\u83B9\u6A31\u745B\u8747\u8426\u83BA\u988D\u81BA\u7F28\u701B\u6979\u7F42\u8365\u8424\u9E66\u6EE2\u84E5\u90E2\u8314\u5624\u748E\u5B34\u763F\u5AB5\u6484\u6F46",
  jiu: "\u5C31\u7A76\u4E5D\u9152\u4E45\u6551\u65E7\u7EA0\u8205\u7078\u759A\u63EA\u548E\u97ED\u7396\u81FC\u67E9\u8D73\u9E20\u9E6B\u53A9\u557E\u9604\u6855\u50E6\u9B0F",
  zui: "\u6700\u7F6A\u5634\u9189\u5480\u855E\u89DC",
  juan: "\u5377\u6350\u5708\u7737\u5A1F\u5026\u7EE2\u96BD\u954C\u6D93\u9E43\u9104\u8832\u72F7\u9529\u684A",
  suan: "\u7B97\u9178\u849C\u72FB",
  yun: "\u5458\u8FD0\u4E91\u5141\u5B55\u8574\u97F5\u915D\u8018\u6655\u5300\u82B8\u9668\u7EAD\u90E7\u7B60\u607D\u97EB\u90D3\u6C32\u6B92\u6120\u6600\u83C0\u72C1",
  qun: "\u7FA4\u88D9\u9021\u9E87",
  ka: "\u5361\u5580\u5496\u5494\u54AF\u4F67\u80E9",
  kang: "\u5EB7\u6297\u625B\u6177\u7095\u4EA2\u7CE0\u4F09\u94AA\u95F6",
  keng: "\u5751\u94FF\u542D",
  kao: "\u8003\u9760\u70E4\u62F7\u94D0\u6832\u5C3B\u7292",
  ken: "\u80AF\u57A6\u6073\u5543\u9F88\u88C9",
  yin: "\u56E0\u5F15\u94F6\u5370\u97F3\u996E\u9634\u9690\u59FB\u6BB7\u6DEB\u5C39\u836B\u541F\u763E\u5BC5\u8335\u573B\u57A0\u911E\u6E6E\u8693\u6C24\u80E4\u9F88\u7AA8\u5591\u94DF\u6D07\u72FA\u5924\u5EF4\u5432\u972A\u831A\u5819",
  kong: "\u7A7A\u63A7\u5B54\u6050\u5025\u5D06\u7B9C",
  ku: "\u82E6\u5E93\u54ED\u9177\u88E4\u67AF\u7A9F\u630E\u9AB7\u5800\u7ED4\u5233\u55BE",
  kua: "\u8DE8\u5938\u57AE\u630E\u80EF\u4F89",
  kui: "\u4E8F\u594E\u6127\u9B41\u9988\u6E83\u532E\u8475\u7AA5\u76D4\u9035\u777D\u9997\u8069\u559F\u5914\u7BD1\u5CBF\u55B9\u63C6\u9697\u5080\u668C\u8DEC\u8489\u6126\u609D\u8770",
  kuan: "\u6B3E\u5BBD\u9ACB",
  kuang: "\u51B5\u77FF\u6846\u72C2\u65F7\u7736\u5321\u7B50\u909D\u5739\u54D0\u8D36\u593C\u8BF3\u8BD3\u7EA9",
  que: "\u786E\u5374\u7F3A\u96C0\u9E4A\u9619\u7638\u69B7\u7094\u9615\u60AB",
  kun: "\u56F0\u6606\u5764\u6346\u7428\u951F\u9CB2\u918C\u9AE1\u6083\u9603",
  kuo: "\u6269\u62EC\u9614\u5ED3\u86DE",
  la: "\u62C9\u843D\u5783\u814A\u5566\u8FA3\u8721\u5587\u524C\u65EF\u782C\u908B\u760C",
  lai: "\u6765\u83B1\u8D56\u7750\u5F95\u7C41\u6D9E\u8D49\u6FD1\u765E\u5D03\u75A0\u94FC",
  lan: "\u5170\u89C8\u84DD\u7BEE\u680F\u5C9A\u70C2\u6EE5\u7F06\u63FD\u6F9C\u62E6\u61D2\u6984\u6593\u5A6A\u9611\u8934\u7F71\u5549\u8C30\u9567\u6F24",
  lin: "\u6797\u4E34\u90BB\u8D41\u7433\u78F7\u6DCB\u9E9F\u9716\u9CDE\u51DB\u62CE\u9074\u853A\u541D\u7CBC\u5D99\u8E8F\u5EEA\u6AA9\u5549\u8F9A\u81A6\u77B5\u61D4",
  lang: "\u6D6A\u6717\u90CE\u5ECA\u72FC\u7405\u6994\u8782\u9606\u9512\u83A8\u5577\u8497\u7A02",
  liang: "\u91CF\u4E24\u7CAE\u826F\u8F86\u4EAE\u6881\u51C9\u8C05\u7CB1\u667E\u9753\u8E09\u83A8\u690B\u9B49\u589A",
  lao: "\u8001\u52B3\u843D\u7EDC\u7262\u635E\u6D9D\u70D9\u59E5\u4F6C\u5D02\u5520\u916A\u6F66\u75E8\u91AA\u94D1\u94F9\u6833\u8022",
  mu: "\u76EE\u6A21\u6728\u4EA9\u5E55\u6BCD\u7267\u83AB\u7A46\u59C6\u5893\u6155\u725F\u7261\u52DF\u7766\u7F2A\u6C90\u66AE\u62C7\u59E5\u94BC\u82DC\u4EEB\u6BEA\u5776",
  le: "\u4E86\u4E50\u52D2\u808B\u53FB\u9CD3\u561E\u4EC2\u6CD0",
  lei: "\u7C7B\u7D2F\u96F7\u52D2\u6CEA\u857E\u5792\u78CA\u64C2\u956D\u808B\u7FB8\u8012\u5121\u5AD8\u7F27\u9179\u561E\u8BD4\u6A91",
  sui: "\u968F\u5C81\u867D\u788E\u5C3F\u96A7\u9042\u9AD3\u7A57\u7EE5\u968B\u9083\u7762\u795F\u6FC9\u71E7\u8C07\u772D\u837D",
  lie: "\u5217\u70C8\u52A3\u88C2\u730E\u51BD\u54A7\u8D94\u6D0C\u9B23\u57D2\u6369\u8E90",
  leng: "\u51B7\u6123\u68F1\u695E\u5844",
  ling: "\u9886\u4EE4\u53E6\u96F6\u7075\u9F84\u9675\u5CAD\u51CC\u73B2\u94C3\u83F1\u68F1\u4F36\u7F9A\u82D3\u8046\u7FCE\u6CE0\u74F4\u56F9\u7EEB\u5464\u68C2\u86C9\u9143\u9CAE\u67C3",
  lia: "\u4FE9",
  liao: "\u4E86\u6599\u7597\u8FBD\u5ED6\u804A\u5BE5\u7F2A\u50DA\u71CE\u7F2D\u6482\u64A9\u5639\u6F66\u9563\u5BEE\u84FC\u7360\u948C\u5C25\u9E69",
  liu: "\u6D41\u5218\u516D\u7559\u67F3\u7624\u786B\u6E9C\u788C\u6D4F\u69B4\u7409\u998F\u905B\u938F\u9A9D\u7EFA\u954F\u65D2\u7198\u9E68\u950D",
  lun: "\u8BBA\u8F6E\u4F26\u4ED1\u7EB6\u6CA6\u62A1\u56F5",
  lv: "\u7387\u5F8B\u65C5\u7EFF\u8651\u5C65\u5415\u94DD\u5C61\u6C2F\u7F15\u6EE4\u4FA3\u9A74\u6988\u95FE\u507B\u891B\u634B\u8182\u7A06",
  lou: "\u697C\u9732\u6F0F\u964B\u5A04\u6402\u7BD3\u55BD\u9542\u507B\u7618\u9AC5\u8027\u877C\u5D5D\u848C",
  mao: "\u8D38\u6BDB\u77DB\u5192\u8C8C\u8302\u8305\u5E3D\u732B\u9AE6\u951A\u61CB\u88A4\u7266\u536F\u94C6\u8004\u5CC1\u7441\u87CA\u8306\u8765\u65C4\u6CD6\u6634\u7780",
  long: "\u9F99\u9686\u5F04\u5784\u7B3C\u62E2\u804B\u9647\u80E7\u73D1\u7ABF\u830F\u5499\u783B\u5785\u6CF7\u680A\u7643",
  nong: "\u519C\u6D53\u5F04\u8113\u4FAC\u54DD",
  shuang: "\u53CC\u723D\u971C\u5B40\u6CF7",
  shu: "\u672F\u4E66\u6570\u5C5E\u6811\u8F93\u675F\u8FF0\u7F72\u719F\u6B8A\u852C\u8212\u758F\u9F20\u6DD1\u53D4\u6691\u67A2\u5885\u4FDE\u66D9\u6292\u7AD6\u8700\u85AF\u68B3\u620D\u6055\u5B70\u6CAD\u8D4E\u5EB6\u6F31\u587E\u500F\u6F8D\u7EBE\u59DD\u83FD\u9ECD\u8167\u79EB\u6BF9\u6BB3\u758B\u6445",
  shuai: "\u7387\u8870\u5E05\u6454\u7529\u87C0",
  lve: "\u7565\u63A0\u950A",
  ma: "\u4E48\u9A6C\u5417\u6469\u9EBB\u7801\u5988\u739B\u561B\u9A82\u62B9\u8682\u551B\u87C6\u72B8\u6769",
  me: "\u4E48\u9EBD",
  mai: "\u4E70\u5356\u9EA6\u8FC8\u8109\u57CB\u973E\u836C\u52A2",
  man: "\u6EE1\u6162\u66FC\u6F2B\u57CB\u8513\u7792\u86EE\u9CD7\u9992\u5E54\u8C29\u87A8\u71B3\u7F26\u9558\u989F\u5881\u9794\u5ADA",
  mi: "\u7C73\u5BC6\u79D8\u8FF7\u5F25\u871C\u8C1C\u89C5\u9761\u6CCC\u772F\u9E8B\u7315\u8C27\u54AA\u7CDC\u5B93\u6C68\u919A\u5627\u5F2D\u8112\u5196\u5E42\u7962\u7E3B\u863C\u8288\u7CF8\u6549",
  men: "\u4EEC\u95E8\u95F7\u7792\u6C76\u626A\u7116\u61D1\u9794\u9494",
  mang: "\u5FD9\u76F2\u832B\u8292\u6C13\u83BD\u87D2\u9099\u786D\u6F2D",
  meng: "\u8499\u76DF\u68A6\u731B\u5B5F\u840C\u6C13\u6726\u9530\u6AAC\u52D0\u61F5\u87D2\u8722\u867B\u9EFE\u8813\u8268\u750D\u824B\u77A2\u791E",
  miao: "\u82D7\u79D2\u5999\u63CF\u5E99\u7784\u7F2A\u6E3A\u6DFC\u85D0\u7F08\u9088\u9E4B\u676A\u7707\u55B5",
  mou: "\u67D0\u8C0B\u725F\u7F2A\u7738\u54DE\u936A\u86D1\u4F94\u53B6",
  miu: "\u7F2A\u8C2C",
  mei: "\u7F8E\u6CA1\u6BCF\u7164\u6885\u5A92\u679A\u59B9\u7709\u9B45\u9709\u6627\u5A9A\u73AB\u9176\u9541\u6E44\u5BD0\u8393\u8882\u6963\u7CDC\u5D4B\u9545\u6D7C\u7338\u9E5B",
  wen: "\u6587\u95EE\u95FB\u7A33\u6E29\u7EB9\u543B\u868A\u96EF\u7D0A\u761F\u6C76\u97EB\u520E\u74BA\u739F\u960C",
  mie: "\u706D\u8511\u7BFE\u4E5C\u54A9\u881B",
  ming: "\u660E\u540D\u547D\u9E23\u94ED\u51A5\u8317\u6E9F\u9169\u7791\u879F\u669D",
  na: "\u5185\u5357\u90A3\u7EB3\u62FF\u54EA\u5A1C\u94A0\u5450\u637A\u8872\u954E\u80AD",
  nei: "\u5185\u90A3\u54EA\u9981",
  nuo: "\u96BE\u8BFA\u632A\u5A1C\u7CEF\u61E6\u50A9\u558F\u6426\u9518",
  ruo: "\u82E5\u5F31\u504C\u7BAC",
  nang: "\u56CA\u9995\u56D4\u66E9\u652E",
  nao: "\u8111\u95F9\u607C\u6320\u7459\u6DD6\u5B6C\u57B4\u94D9\u6861\u5476\u7847\u7331\u86F2",
  ni: "\u4F60\u5C3C\u5462\u6CE5\u7591\u62DF\u9006\u502A\u59AE\u817B\u533F\u9713\u6EBA\u65CE\u6635\u576D\u94CC\u9CB5\u4F32\u6029\u7768\u730A",
  nen: "\u5AE9\u6041",
  neng: "\u80FD",
  nin: "\u60A8\u6041",
  niao: "\u9E1F\u5C3F\u6EBA\u8885\u8132\u8311\u5B32",
  nie: "\u6444\u8042\u634F\u6D85\u954D\u5B7D\u637B\u8616\u556E\u8E51\u55EB\u81EC\u954A\u989E\u4E5C\u9667",
  niang: "\u5A18\u917F",
  ning: "\u5B81\u51DD\u62E7\u6CDE\u67E0\u549B\u72DE\u4F5E\u804D\u752F",
  nu: "\u52AA\u6012\u5974\u5F29\u9A7D\u5E11\u5B65\u80EC",
  nv: "\u5973\u9495\u8844\u6067",
  ru: "\u5165\u5982\u5973\u4E73\u5112\u8FB1\u6C5D\u8339\u8925\u5B7A\u6FE1\u8815\u5685\u7F1B\u6EBD\u94F7\u6D33\u85B7\u8966\u98A5\u84D0",
  nuan: "\u6696",
  nve: "\u8650\u759F",
  re: "\u70ED\u82E5\u60F9\u558F",
  ou: "\u533A\u6B27\u5076\u6BB4\u5455\u79BA\u85D5\u8BB4\u9E25\u74EF\u6CA4\u8026\u6004",
  pao: "\u8DD1\u70AE\u6CE1\u629B\u5228\u888D\u5486\u75B1\u5E96\u72CD\u530F\u812C",
  pou: "\u5256\u638A\u88D2",
  pen: "\u55B7\u76C6\u6E53",
  pie: "\u77A5\u6487\u82E4\u6C15\u4E3F",
  pin: "\u54C1\u8D2B\u8058\u9891\u62FC\u62DA\u98A6\u59D8\u5AD4\u6980\u725D",
  se: "\u8272\u585E\u745F\u6DA9\u556C\u7A51\u94EF\u69ED",
  qing: "\u60C5\u9752\u6E05\u8BF7\u4EB2\u8F7B\u5E86\u503E\u9877\u537F\u6674\u6C22\u64CE\u6C30\u7F44\u78EC\u873B\u7B90\u9CAD\u7DAE\u82D8\u9EE5\u570A\u6AA0\u8B26",
  zan: "\u8D5E\u6682\u6512\u5811\u661D\u7C2A\u7CCC\u74D2\u933E\u8DB1\u62F6",
  shao: "\u5C11\u7ECD\u53EC\u70E7\u7A0D\u90B5\u54E8\u97F6\u634E\u52FA\u68A2\u9798\u828D\u82D5\u52AD\u8244\u7B72\u6753\u6F72",
  sao: "\u626B\u9A9A\u5AC2\u68A2\u7F2B\u6414\u7619\u81CA\u57FD\u7F32\u9CCB",
  sha: "\u6C99\u53A6\u6740\u7EB1\u7802\u5565\u838E\u5239\u6749\u50BB\u715E\u9CA8\u970E\u55C4\u75E7\u88DF\u6332\u94E9\u553C\u6B43",
  xuan: "\u53BF\u9009\u5BA3\u5238\u65CB\u60AC\u8F69\u55A7\u7384\u7EDA\u6E32\u7487\u70AB\u8431\u7663\u6F29\u7729\u6684\u714A\u94C9\u6966\u6CEB\u8C16\u75C3\u78B9\u63CE\u955F\u5107",
  ran: "\u7136\u67D3\u71C3\u5189\u82D2\u9AEF\u86BA",
  rang: "\u8BA9\u58E4\u6518\u56B7\u74E4\u7A70\u79B3",
  rao: "\u7ED5\u6270\u9976\u5A06\u6861\u835B",
  reng: "\u4ECD\u6254",
  ri: "\u65E5",
  rou: "\u8089\u67D4\u63C9\u7CC5\u97A3\u8E42",
  ruan: "\u8F6F\u962E\u670A",
  run: "\u6DA6\u95F0",
  sa: "\u8428\u6D12\u6492\u98D2\u5345\u4EE8\u810E",
  suo: "\u6240\u4E9B\u7D22\u7F29\u9501\u838E\u68AD\u7410\u55E6\u5506\u5522\u5A11\u84D1\u7FA7\u6332\u686B\u55CD\u7743",
  sai: "\u601D\u8D5B\u585E\u816E\u567B\u9CC3",
  shui: "\u8BF4\u6C34\u7A0E\u8C01\u7761\u6C35",
  sang: "\u6851\u4E27\u55D3\u6421\u98A1\u78C9",
  sen: "\u68EE",
  seng: "\u50E7",
  shai: "\u7B5B\u6652",
  shang: "\u4E0A\u5546\u5C1A\u4F24\u8D4F\u6C64\u88F3\u5892\u664C\u57A7\u89DE\u6B87\u71B5\u7EF1",
  xing: "\u884C\u7701\u661F\u8165\u7329\u60FA\u5174\u5211\u578B\u5F62\u90A2\u9967\u9192\u5E78\u674F\u6027\u59D3\u9649\u8347\u8365\u64E4\u60BB\u784E",
  shou: "\u6536\u624B\u53D7\u9996\u552E\u6388\u5B88\u5BFF\u7626\u517D\u72E9\u7EF6\u824F\u624C",
  shuo: "\u8BF4\u6570\u7855\u70C1\u6714\u94C4\u5981\u69CA\u84B4\u6420",
  su: "\u901F\u7D20\u82CF\u8BC9\u7F29\u5851\u8083\u4FD7\u5BBF\u7C9F\u6EAF\u9165\u5919\u612B\u7C0C\u7A23\u50F3\u8C21\u6D91\u850C\u55C9\u89EB",
  shua: "\u5237\u800D\u5530",
  shuan: "\u6813\u62F4\u6DAE\u95E9",
  shun: "\u987A\u77AC\u821C\u542E",
  song: "\u9001\u677E\u5B8B\u8BBC\u9882\u8038\u8BF5\u5D69\u6DDE\u6002\u609A\u5D27\u51C7\u5FEA\u7AE6\u83D8",
  sou: "\u8258\u641C\u64DE\u55FD\u55D6\u53DF\u998A\u85AE\u98D5\u55FE\u6EB2\u953C\u878B\u778D",
  sun: "\u635F\u5B59\u7B0B\u836A\u69AB\u96BC\u72F2\u98E7",
  teng: "\u817E\u75BC\u85E4\u6ED5\u8A8A",
  tie: "\u94C1\u8D34\u5E16\u992E\u841C",
  tu: "\u571F\u7A81\u56FE\u9014\u5F92\u6D82\u5410\u5C60\u5154\u79C3\u51F8\u837C\u948D\u83DF\u580D\u9174",
  wai: "\u5916\u6B6A\u5D34",
  wang: "\u738B\u671B\u5F80\u7F51\u5FD8\u4EA1\u65FA\u6C6A\u6789\u5984\u60D8\u7F54\u8F8B\u9B4D",
  weng: "\u7FC1\u55E1\u74EE\u84CA\u8579",
  zhua: "\u6293\u631D\u722A",
  yang: "\u6837\u517B\u592E\u9633\u6D0B\u626C\u6768\u7F8A\u8BE6\u6C27\u4EF0\u79E7\u75D2\u6F3E\u75A1\u6CF1\u6B83\u6059\u9E2F\u5F89\u4F6F\u600F\u7080\u70CA\u9785\u86D8",
  xiong: "\u96C4\u5144\u718A\u80F8\u51F6\u5308\u6C79\u828E",
  yo: "\u54DF\u5537",
  yong: "\u7528\u6C38\u62E5\u52C7\u6D8C\u6CF3\u5EB8\u4FD1\u8E0A\u4F63\u548F\u96CD\u752C\u955B\u81C3\u9095\u86F9\u607F\u6175\u58C5\u75C8\u9CD9\u5889\u9954\u5581",
  za: "\u6742\u624E\u54B1\u7838\u548B\u531D\u5482\u62F6",
  zai: "\u5728\u518D\u707E\u8F7D\u683D\u4ED4\u5BB0\u54C9\u5D3D\u753E",
  zao: "\u9020\u65E9\u906D\u67A3\u566A\u7076\u71E5\u7CDF\u51FF\u8E81\u85FB\u7682\u6FA1\u86A4\u5523",
  zei: "\u8D3C",
  zen: "\u600E\u8C2E",
  zeng: "\u589E\u66FE\u7EFC\u8D60\u618E\u9503\u7511\u7F7E\u7F2F",
  zhei: "\u8FD9",
  zou: "\u8D70\u90B9\u594F\u63CD\u8BF9\u9A7A\u966C\u6971\u9139\u9CB0",
  zhuai: "\u8F6C\u62FD",
  zun: "\u5C0A\u9075\u9CDF\u6A3D\u6499",
  dia: "\u55F2",
  nou: "\u8028"
};
var simplified_dict_default = SimplifiedDict;

// src/dict/traditional_dict.ts
var TraditionalDict = {
  yi: "\u4E00\u4E3F\u4E41\u4E42\u4E49\u4E59\u4E5F\u4E84\u4EA6\u4EBF\u4EE1\u4EE5\u4EEA\u4F07\u4F0A\u4F3F\u4F41\u4F57\u4F5A\u4F7E\u4F87\u4F9D\u4FCB\u501A\u506F\u5100\u5104\u5117\u517F\u519D\u5208\u5293\u52AE\u52DA\u52E9\u5307\u531C\u533B\u5370\u53C6\u53D5\u53F0\u53F9\u541A\u542C\u5453\u546D\u5479\u54A6\u54BF\u5508\u55CC\u564E\u566B\u56C8\u571B\u572A\u572F\u5744\u5768\u57BC\u57F6\u57F8\u58BF\u58F1\u58F9\u5901\u5915\u5931\u5937\u5947\u5955\u59B7\u59E8\u59EC\u5A90\u5AD5\u5ADB\u5B04\u5B11\u5B1F\u5B74\u5B83\u5B90\u5B9C\u5BA7\u5BF1\u5BF2\u5C04\u5C3E\u5C79\u5CC4\u5CD3\u5D0E\u5D3A\u5DA7\u5DAC\u5DB7\u5DF2\u5DF3\u5DF8\u5E1F\u5E20\u5E46\u5EA1\u5ED9\u5F02\u5F08\u5F0B\u5F0C\u5F2C\u5F5B\u5F5C\u5F5D\u5F5E\u5F75\u5F79\u5FC6\u5FD4\u6008\u6020\u6021\u603F\u605E\u6092\u6098\u60A5\u610F\u61B6\u61CC\u61FF\u623A\u6245\u6246\u6261\u6291\u62E9\u62F8\u6339\u638E\u639C\u63D6\u640B\u6424\u648E\u64C7\u653A\u6561\u657C\u6581\u65BD\u65D1\u65D6\u6613\u6633\u6679\u6686\u66C0\u66CE\u66F5\u6759\u675D\u678D\u67BB\u67C2\u6818\u6827\u683A\u684B\u68ED\u6905\u692C\u6938\u698F\u69F7\u69F8\u6A34\u6A8D\u6AA5\u6AB9\u6AC2\u6B25\u6B2D\u6B39\u6B56\u6B5D\u6B94\u6BAA\u6BB9\u6BC5\u6BC9\u6C7D\u6C82\u6CB6\u6CBB\u6CC4\u6CC6\u6D22\u6D29\u6D2B\u6D42\u6D65\u6D73\u6E2B\u6E59\u6EA2\u6F2A\u6F69\u6FA4\u6FBA\u7037\u7088\u7109\u712C\u7131\u7132\u7188\u7199\u71A0\u71A4\u71AA\u71BC\u71DA\u71E1\u71F1\u7284\u72CB\u72CF\u7317\u7348\u73B4\u73C6\u747F\u74F5\u7569\u7570\u7591\u7599\u75AB\u75CD\u75EC\u7617\u761E\u7631\u7654\u76CA\u7719\u776A\u7796\u77E3\u786A\u7912\u7919\u794E\u7995\u79C7\u79FB\u7A26\u7A53\u7AE9\u7B16\u7BB7\u7C03\u7C4E\u7D32\u7D4F\u7DAD\u7DBA\u7E0A\u7E44\u7E76\u7E79\u7EC1\u7ECE\u7EEE\u7EF4\u7F22\u7F9B\u7FA0\u7FA1\u7FA8\u7FA9\u7FBF\u7FCA\u7FCC\u7FF3\u7FFC\u801B\u8034\u8084\u808A\u80F0\u8189\u81C6\u8223\u8257\u8264\u827A\u827E\u8285\u82C5\u82E1\u82E2\u8351\u8413\u841F\u84FA\u858F\u85D9\u85DD\u8619\u8649\u8681\u86C7\u86DC\u86E1\u86E6\u86FE\u8734\u8794\u8798\u87A0\u87FB\u8863\u8864\u886A\u8875\u8882\u8886\u8898\u88A3\u88D4\u88DB\u88FF\u8918\u8939\u8957\u897C\u89FA\u8A11\u8A32\u8A33\u8A4D\u8A51\u8A52\u8A63\u8A83\u8A92\u8ABC\u8B1A\u8B3B\u8B69\u8B6F\u8B70\u8B7A\u8B89\u8B9B\u8BAE\u8BD1\u8BD2\u8BE3\u8BF6\u8C0A\u8C25\u8C59\u8C5B\u8C77\u8C96\u8CA4\u8CBD\u8CF9\u8D00\u8D3B\u8DC7\u8DE0\u8E26\u8EFC\u8F17\u8F22\u8F59\u8F76\u8FA5\u8FB7\u8FC6\u8FE4\u8FED\u8FF1\u8FFB\u9018\u9038\u9057\u907A\u9091\u90FC\u914F\u91AB\u91B3\u91B7\u91CA\u91CB\u91D4\u91F4\u91F6\u9218\u9220\u9247\u9248\u926F\u9295\u92A5\u9321\u93B0\u93D4\u943F\u9480\u9487\u94CA\u94F1\u951C\u9552\u9571\u9623\u9624\u9641\u966D\u96B6\u96BF\u96C9\u9705\u972C\u9749\u977E\u9809\u9824\u9825\u984A\u9857\u9890\u98DF\u98F4\u9950\u9974\u99C5\u9A5B\u9A7F\u9AAE\u9BA7\u9BA8\u9BE3\u9CE6\u9D3A\u9D82\u9D83\u9D8D\u9DC1\u9DCA\u9DD6\u9DE7\u9DFE\u9E03\u9E5D\u9E62\u9E65\u9ED3\u9EDD\u9EDF\u9EF3\u9F6E\u9F78",
  ding: "\u4E01\u4EC3\u53EE\u5576\u5960\u5975\u5B9A\u5D7F\u5E04\u5FCA\u639F\u6917\u6C40\u6FCE\u706F\u738E\u753A\u753C\u7594\u76EF\u77F4\u7887\u78A0\u78F8\u8035\u8062\u815A\u827C\u8423\u8476\u85A1\u8670\u8A02\u8BA2\u914A\u91D8\u92CC\u9320\u9424\u9489\u94E4\u952D\u976A\u9802\u9841\u9876\u98E3\u9964\u9F0E",
  zheng: "\u4E01\u4E1E\u4E89\u4F25\u4F42\u5000\u51E7\u57E5\u57E9\u5863\u59C3\u5A9C\u5CE5\u5D1D\u5D22\u5D92\u5E27\u5E40\u5F81\u5F8E\u5FB0\u5FB4\u5FB5\u6014\u6138\u6195\u627F\u628D\u62EF\u6323\u6399\u639F\u63C1\u649C\u653F\u655E\u6574\u6678\u6B62\u6B63\u6C36\u6D67\u6E5E\u70A1\u70DD\u722D\u72F0\u7319\u753A\u75C7\u7665\u7710\u7741\u775C\u77A0\u7B5D\u7B8F\u7BDC\u7CFD\u7DAA\u8047\u8100\u84B8\u8A3C\u8ACD\u8B49\u8BC1\u8BE4\u8D9F\u8E2D\u90D1\u912D\u9266\u931A\u94B2\u94EE\u9B07\u9B8F\u9BD6\u9BF9\u9CAD\u9D0A",
  kao: "\u4E02\u5C3B\u5D6A\u5F40\u62F7\u6322\u641E\u649F\u6537\u6832\u69C0\u69C1\u6D18\u70E4\u7105\u7187\u71FA\u7292\u7A3E\u8003\u85A7\u85F3\u8A04\u92AC\u94D0\u9760\u9ADB\u9BB3\u9BCC\u9C93",
  yu: "\u4E02\u4E0E\u4E88\u4E8E\u4E8F\u4E90\u4F03\u4F1B\u4F59\u4FC1\u4FDE\u4FE3\u4FFC\u504A\u50B4\u50EA\u5125\u516A\u532C\u53DE\u5401\u5433\u543E\u5537\u5539\u5581\u5585\u5590\u55A9\u55BB\u564A\u5662\u5673\u5704\u5709\u572B\u57DF\u5809\u5823\u582C\u58BA\u5915\u5965\u59A4\u59AA\u5A1B\u5A2A\u5A2F\u5A31\u5A7E\u5A80\u5AAE\u5AD7\u5B29\u5B87\u5B9B\u5BD3\u5BD9\u5C09\u5C7F\u5CEA\u5CFF\u5D1B\u5D33\u5D4E\u5D5B\u5D8E\u5DBC\u5EBD\u5EBE\u5F67\u5FA1\u5FEC\u6086\u6087\u60CC\u60D0\u6108\u6109\u611A\u617E\u61CA\u61D9\u6216\u622B\u625C\u6275\u62D7\u6327\u6353\u63C4\u6554\u6594\u659E\u65BC\u65DF\u6619\u6631\u6745\u6829\u682F\u6859\u68A7\u68DB\u68DC\u68EB\u6940\u6961\u6970\u6986\u6AF2\u6B0E\u6B1D\u6B24\u6B32\u6B48\u6B5F\u6B76\u6BD3\u6C59\u6C5A\u6C61\u6C69\u6D74\u6DE2\u6DE4\u6DEF\u6E14\u6E1D\u6E61\u6EEA\u6F01\u6F9A\u6F9E\u6FA6\u6FB3\u706A\u7079\u7134\u715C\u7168\u71A8\u71CF\u71E0\u71F0\u7229\u724F\u72F1\u72F3\u7344\u735D\u7389\u738B\u7397\u7399\u7419\u741F\u7440\u745C\u74B5\u756C\u756D\u75CF\u7600\u7609\u7610\u7652\u76C2\u76D3\u776E\u77DE\u7821\u7862\u7907\u7916\u791C\u7964\u79A6\u79B9\u79BA\u79D7\u7A22\u7A36\u7A65\u7A7B\u7AAC\u7AB3\u7AFD\u7B8A\u7BFD\u7C45\u7C5E\u7C72\u7CA5\u7D06\u7DCE\u7E58\u7EA1\u7F6D\u7FAD\u7FBD\u7FD1\u807F\u8080\u80B2\u8167\u8174\u81FE\u8201\u8206\u8207\u8212\u8245\u828B\u828C\u82D1\u831F\u8330\u8362\u83C0\u83F8\u842D\u842E\u8438\u84AE\u84E3\u84F9\u851A\u854D\u8577\u8581\u85C7\u860C\u861B\u865E\u8676\u870D\u871F\u872E\u8753\u877A\u87B8\u87C8\u8858\u8859\u8867\u88AC\u88D5\u8915\u89A6\u89CE\u8A89\u8A9E\u8ADB\u8AED\u8B23\u8B7D\u8BED\u8C00\u8C15\u8C37\u8C6B\u8C8D\u8C90\u8C97\u8E30\u8EC9\u8F0D\u8F3F\u8F5D\u8FC2\u8FC3\u9033\u903E\u9047\u9079\u9098\u90C1\u90DA\u9105\u9151\u91A7\u91EA\u923A\u9289\u92CA\u92D9\u9325\u935D\u940D\u942D\u94B0\u94FB\u95BC\u95BE\u9608\u960F\u9653\u9683\u9685\u96A9\u96D3\u96E8\u96E9\u9731\u9810\u9828\u9852\u9884\u9899\u98EB\u9918\u9947\u996B\u9980\u99AD\u9A1F\u9A48\u9A6D\u9AAC\u9AC3\u9B30\u9B31\u9B3B\u9B4A\u9B5A\u9B63\u9BBD\u9BF2\u9C05\u9C4A\u9C6E\u9C7C\u9CFF\u9D25\u9D27\u9D2A\u9D52\u9DE0\u9DF8\u9E06\u9E12\u9E46\u9E6C\u9E8C\u9F6C\u9F75\u9F89",
  qi: "\u4E03\u4E0C\u4E5E\u4E93\u4E9D\u4E9F\u4F01\u4F0E\u4FDF\u501B\u5048\u50B6\u50DB\u5176\u51C4\u5207\u523A\u5258\u52E4\u5403\u542F\u5431\u5447\u546E\u54A0\u5518\u552D\u5553\u5554\u555F\u55B0\u5601\u5650\u5668\u573B\u57FC\u5921\u5947\u5951\u59BB\u5A38\u5A4D\u5BBF\u5C7A\u5C82\u5C90\u5C93\u5D0E\u5D5C\u5DF1\u5E3A\u5F03\u5FD4\u5FEE\u5FEF\u5FFE\u6053\u605D\u60BD\u6112\u612D\u613E\u617C\u617D\u6187\u61A9\u61E0\u621A\u6262\u6271\u627A\u6280\u62B5\u62DE\u6308\u637F\u6391\u63ED\u6456\u652F\u6532\u6567\u6589\u658A\u65C2\u65D7\u6675\u66A3\u671E\u671F\u675E\u679D\u67D2\u6814\u6816\u6864\u687C\u68A9\u68C4\u68CA\u68CB\u68E8\u68F2\u69BF\u69ED\u6AB1\u6AC0\u6B2B\u6B39\u6B3A\u6B67\u6BC4\u6C14\u6C17\u6C23\u6C54\u6C7D\u6C8F\u6CE3\u6D13\u6D4E\u6DC7\u6DD2\u6E08\u6E0D\u6E0F\u6E46\u6E47\u6ECA\u6F06\u6F2C\u6FDD\u6FDF\u7081\u710F\u7309\u7382\u7398\u7426\u742A\u7482\u7508\u752D\u7566\u7578\u75A7\u76C0\u76F5\u77F5\u780C\u7881\u7895\u789B\u78B6\u78CE\u78DC\u78E7\u78E9\u7918\u793A\u7941\u7947\u7948\u7957\u797A\u79A5\u79A8\u7A18\u7A3D\u7AD2\u7C2F\u7C31\u7C4F\u7CB8\u7D2A\u7D5C\u7DA5\u7DA6\u7DA8\u7DAE\u7DBA\u7DC0\u7DD5\u7DDD\u7E83\u7EEE\u7F09\u7F3C\u7F4A\u8006\u8090\u80B5\u8110\u81CD\u8219\u8269\u8291\u829E\u82AA\u8360\u8401\u840B\u8415\u847A\u8572\u85BA\u85C4\u8604\u8691\u8694\u869A\u86F4\u871D\u871E\u8787\u87A7\u87E3\u87FF\u8810\u8879\u88B3\u88FF\u8900\u8904\u89ED\u8A16\u8AC6\u8AEC\u8AFF\u8BAB\u8C48\u8D77\u8D9E\u8DBF\u8DC2\u8E11\u8E16\u8E26\u8E4A\u8EA4\u8EA9\u8ED9\u8EDD\u8FC4\u8FC9\u9017\u9094\u90EA\u913F\u91EE\u9321\u93DA\u9416\u951C\u95D9\u9691\u970B\u980E\u9880\u9951\u9A0E\u9A0F\u9A39\u9A90\u9A91\u9B10\u9B3E\u9B3F\u9B4C\u9B55\u9BA8\u9BD5\u9C2D\u9CAF\u9CCD\u9D78\u9D80\u9D88\u9E92\u9EA1\u9F1C\u9F4A\u9F50\u9F6E",
  shang: "\u4E04\u4E0A\u4EE9\u4F24\u50B7\u5546\u573A\u57A7\u57EB\u5834\u5872\u5892\u5C19\u5C1A\u6066\u6113\u616F\u6244\u664C\u6B87\u6BA4\u6C64\u6E6F\u6EF3\u6F21\u71B5\u7993\u7DD4\u7EF1\u850F\u87AA\u8830\u88F3\u89DE\u89F4\u8B2A\u8CDE\u8D4F\u8E3C\u945C\u979D\u9B3A",
  xia: "\u4E05\u4E0B\u4FA0\u4FE0\u5047\u5084\u5323\u53A6\u53DA\u5413\u5440\u5477\u54E7\u552C\u55C4\u55D1\u5687\u5737\u57C9\u590F\u5913\u593E\u5C88\u5CE1\u5CFD\u5EC8\u5FA6\u61D7\u62BC\u637E\u6433\u656E\u6630\u6687\u67D9\u68BA\u6B31\u6B43\u6BF3\u6D43\u6D79\u6E8A\u70A0\u70DA\u7146\u72CE\u72ED\u72F9\u73E8\u7455\u759C\u75A8\u7615\u7771\u778E\u7856\u7864\u78AC\u78CD\u796B\u7B1A\u7B6A\u7D66\u7E00\u7E16\u7ED9\u7F45\u7FC8\u821D\u823A\u8290\u846D\u8578\u867E\u8766\u879B\u8AD5\u8B11\u8C3A\u8D6E\u8F44\u8F96\u9050\u90C3\u935C\u938B\u93EC\u9595\u959C\u965C\u967F\u971E\u98AC\u9A22\u9B7B\u9C15\u9DB7\u9EE0",
  mo: "\u4E07\u4E48\u4F2F\u4F70\u5192\u5298\u52B0\u52FF\u55FC\u563F\u56A4\u56A9\u573D\u587B\u58A8\u59BA\u5AEB\u5AFC\u5B37\u5BDE\u5C1B\u5E13\u5E15\u5E1E\u603D\u61E1\u6202\u629A\u62B9\u6469\u6478\u6479\u64AB\u64F5\u6520\u65E0\u6627\u6629\u66AF\u672B\u67BA\u6A21\u6A45\u6B7E\u6B7F\u6B81\u6C92\u6CA1\u6CAB\u6F20\u700E\u7121\u7205\u72E2\u763C\u767E\u768C\u771C\u773D\u773F\u7790\u7799\u781E\u78E8\u7933\u79E3\u7C96\u7CE2\u7D48\u7D54\u7E38\u7E86\u8031\u8109\u819C\u8252\u8309\u8388\u83AB\u84E6\u85D0\u85E6\u8611\u86E8\u87C6\u87D4\u889C\u88B9\u8B28\u8B29\u8B55\u8C1F\u8C83\u8C88\u8C89\u8C8A\u8C8C\u8C98\u9286\u93CC\u9546\u964C\u977A\u97A8\u9943\u995D\u998D\u9A40\u9ACD\u9B54\u9B69\u9B79\u9EBC\u9EBD\u9EBF\u9ED8\u9ED9",
  wan: "\u4E07\u4E38\u4E5B\u5007\u514D\u5173\u5213\u525C\u534D\u5350\u550D\u56ED\u57E6\u5846\u58EA\u5917\u5918\u59A7\u5A29\u5A49\u5A60\u5B6F\u5B8C\u5B9B\u5C8F\u5E35\u5F2F\u5F4E\u5FE8\u60CB\u60CC\u628F\u633D\u6356\u6365\u6394\u665A\u6669\u667C\u670A\u6764\u689A\u6900\u69FE\u6C4D\u6DB4\u6E7E\u6F6B\u6FAB\u7063\u70F7\u73A9\u7413\u742C\u7579\u7696\u76CC\u7755\u7897\u7B02\u7BA2\u7D08\u7D7B\u7D84\u7DA9\u7DB0\u7EA8\u7EFE\u7FEB\u8115\u8118\u8155\u8284\u82CB\u839E\u83A7\u83AC\u83C0\u8416\u842C\u8513\u858D\u8696\u873F\u8C4C\u8CA6\u8CAB\u8D03\u8D0E\u8D2F\u8E20\u8F10\u8F13\u909C\u9124\u92C4\u92D4\u92FA\u933D\u9350\u93AB\u95A2\u95D7\u95DC\u9811\u987D\u9AA9\u9AAA\u9AAB\u9B6D",
  zhang: "\u4E08\u4EC9\u4ED7\u4EE7\u50BD\u5887\u5ADC\u5D82\u5E10\u5E33\u5E5B\u5E65\u5F20\u5F21\u5F35\u5F70\u615E\u6259\u627F\u638C\u66B2\u6756\u6A1F\u6DA8\u6DB1\u6F32\u6F33\u7350\u748B\u75EE\u762C\u7634\u7795\u7903\u7AE0\u7C80\u7CBB\u80C0\u8139\u8501\u87D1\u8CEC\u8D26\u9067\u9123\u93F1\u9423\u9577\u9578\u957F\u969C\u979D\u9926\u9A3F\u9C46\u9E9E",
  san: "\u4E09\u4F1E\u4FD5\u5098\u50AA\u5381\u53C1\u53C2\u53C3\u53C4\u53C5\u58ED\u5E34\u5F0E\u5F61\u6563\u6A75\u6BF5\u6BF6\u6BFF\u6C35\u6F75\u7299\u7CC1\u7CC2\u7CDD\u7CE3\u7CE4\u7E56\u8518\u8B32\u93D2\u93FE\u9590\u9730\u994A\u9993\u9B16",
  ji: "\u4E0C\u4E2E\u4E41\u4E69\u4E9F\u4EBC\u4F0B\u4F0E\u4F76\u501A\u5048\u506E\u50DF\u5176\u517E\u5180\u51E0\u51FB\u5209\u520F\u5242\u525E\u5264\u5291\u52E3\u5359\u535F\u5373\u537D\u539D\u53CA\u53DD\u53FD\u5407\u5409\u5470\u54AD\u54DC\u5527\u559E\u55D8\u5630\u568C\u573E\u5756\u578D\u57FA\u5832\u5849\u588D\u58BC\u5947\u5980\u5993\u59DE\u59EC\u59FC\u5AC9\u5B63\u5BC2\u5BC4\u5C10\u5C45\u5C50\u5C70\u5C8B\u5C8C\u5CDC\u5D46\u5D47\u5D74\u5DAF\u5DF1\u5E3A\u5E7E\u5EB4\u5EED\u5F50\u5F51\u5F76\u5F9B\u5FCC\u5FE3\u6025\u60B8\u60CE\u6131\u61BF\u61E0\u61FB\u621F\u6222\u6280\u6324\u638E\u63D6\u63E4\u6483\u64A0\u64BD\u64CA\u64E0\u6532\u6567\u65E1\u65E2\u65E3\u66A8\u66A9\u66C1\u671F\u673A\u6781\u6785\u689E\u68CB\u68D8\u6956\u696B\u6975\u69C9\u69E3\u6A2D\u6A5F\u6A76\u6A95\u6A9D\u6AB5\u6AC5\u6AED\u6B9B\u6BC4\u6C65\u6C72\u6CF2\u6D01\u6D0E\u6D4E\u6DC1\u6E08\u6E52\u6F03\u6F08\u6F57\u6FC0\u6FC8\u6FDF\u7031\u710F\u7284\u72B1\u72E4\u7317\u7391\u7482\u74A3\u74BE\u755F\u7578\u757F\u75B5\u75BE\u75F5\u7620\u7635\u7660\u766A\u7680\u768D\u777D\u7789\u77BF\u77F6\u78EF\u796D\u799D\u79A8\u79EF\u79F8\u7A18\u7A29\u7A37\u7A3D\u7A44\u7A4A\u7A4D\u7A56\u7A67\u7B04\u7B08\u7B53\u7B95\u7BBF\u7C0A\u7C0E\u7C4D\u7CA2\u7CED\u7CFB\u7D00\u7D12\u7D1A\u7D50\u7D66\u7D99\u7DDD\u7E18\u7E3E\u7E4B\u7E6B\u7E7C\u7EA7\u7EAA\u7ED3\u7ED9\u7EE7\u7EE9\u7F09\u7F7D\u7F81\u7F87\u7F88\u8024\u802D\u808C\u80D4\u810A\u8114\u8128\u818C\u81EE\u8265\u827B\u82A8\u82B0\u82B6\u82D9\u830D\u8324\u8360\u838B\u8401\u8415\u846A\u84A9\u84BA\u84DF\u8507\u8540\u8572\u857A\u858A\u85BA\u85C9\u8604\u860E\u862E\u863B\u8640\u866E\u8721\u874D\u878F\u87E3\u87FB\u87FF\u8800\u88DA\u8900\u8940\u894B\u8989\u898A\u8998\u89AC\u89BF\u89C7\u89CA\u89CC\u89D9\u89ED\u8A08\u8A10\u8A18\u8A8B\u8AC5\u8AD4\u8B4F\u8B64\u8BA1\u8BA5\u8BA6\u8BB0\u8BD8\u8C3B\u8C3F\u8CEB\u8CF7\u8D4D\u8D8C\u8D9E\u8DC2\u8DE1\u8DFB\u8DFD\u8E11\u8E16\u8E26\u8E50\u8E5F\u8E8B\u8EA4\u8EB8\u8F2F\u8F5A\u8F91\u8FF9\u90C5\u90C6\u913F\u9288\u92A1\u9324\u9353\u93F6\u9416\u9447\u9459\u9645\u9694\u969B\u96AE\u96C6\u96DE\u96E6\u96E7\u9701\u9735\u973D\u9769\u978A\u97BF\u97F2\u98B3\u98E2\u9951\u9965\u9A0E\u9A65\u9A91\u9AA5\u9AFB\u9B3E\u9B5D\u9B62\u9B65\u9B86\u9BDA\u9BEF\u9BFD\u9C36\u9C3F\u9C40\u9C6D\u9C7E\u9C9A\u9CAB\u9CEE\u9D4B\u9D8F\u9DBA\u9DC4\u9DD1\u9E04\u9E21\u9E61\u9E82\u9F4A\u9F4C\u9F4D\u9F4E\u9F4F\u9F50\u9F51",
  bu: "\u4E0D\u4F48\u50D5\u52CF\u535C\u535F\u5425\u5498\u54FA\u57D4\u57D7\u57E0\u5821\u5A44\u5C03\u5CEC\u5E03\u5EAF\u5ECD\u6016\u6091\u62AA\u62CA\u6355\u6357\u636C\u64B2\u64C8\u6661\u67E8\u6B65\u6B68\u6B69\u6EA5\u735B\u74FF\u79FF\u7B81\u7BF0\u7C3F\u8379\u8500\u8584\u8865\u88DC\u8AA7\u8E04\u8F39\u8F50\u900B\u90E8\u90F6\u91AD\u9208\u923D\u949A\u94B8\u9644\u9660\u97B4\u9914\u9922\u9BC6\u9CEA\u9D4F\u9E14",
  dun: "\u4E0D\u4F05\u4FCA\u5428\u5678\u56E4\u58A9\u58AA\u58FF\u5E89\u5FF3\u60C7\u619E\u6489\u64B4\u6566\u696F\u6A54\u6C8C\u6F61\u7096\u71C9\u729C\u7364\u76F9\u76FE\u7818\u78B7\u7905\u815E\u816F\u8733\u8C5A\u8DB8\u8E32\u8E72\u8E7E\u8E89\u9007\u9041\u906F\u920D\u9413\u941C\u949D\u9566\u9813\u987F\u9A50",
  fou: "\u4E0D\u5426\u57BA\u599A\u70B0\u7D11\u7F36\u7F39\u7F3B\u82A3\u8843\u96EC\u9D00",
  fu: "\u4E0D\u4E40\u4EC5\u4ED8\u4F0F\u4F15\u4F5B\u4FCC\u4FD8\u4FDB\u4FEF\u5069\u506A\u5085\u51A8\u51B9\u51EB\u521C\u526F\u5305\u5310\u544B\u5452\u5488\u5490\u54F9\u54FA\u5638\u577F\u5798\u57BA\u5831\u590D\u592B\u5987\u598B\u59C7\u5A10\u5A4F\u5A66\u5A8D\u5B0E\u5B14\u5B5A\u5B75\u5B93\u5BCC\u5C03\u5CAA\u5CCA\u5DFF\u5E02\u5E17\u5E45\u5E5E\u5E9C\u5F17\u5F23\u5F73\u5F7F\u5FA9\u6000\u6024\u602B\u61EF\u6276\u6299\u629A\u62C2\u62CA\u634A\u636C\u638A\u64AB\u6577\u65A7\u65C9\u670D\u678E\u67B9\u67CE\u67EB\u67ED\u683F\u6874\u68F4\u6928\u6931\u6991\u6C1F\u6C71\u6C95\u6CB8\u6CED\u6D11\u6D6E\u6DAA\u6EA5\u6ECF\u6F93\u70A5\u70F0\u7124\u7236\u739E\u73B8\u7408\u74B7\u752B\u7536\u7549\u7550\u7557\u7641\u76D9\u7806\u7829\u7953\u7954\u798F\u79A3\u79FF\u7A03\u7A2A\u7ACE\u7B26\u7B30\u7B5F\u7B81\u7B99\u7C20\u7CB0\u7CD0\u7D28\u7D31\u7D3C\u7D65\u7D8D\u7D92\u7DEE\u7E1B\u7E80\u7EC2\u7ECB\u7F1A\u7F58\u7F66\u7FC7\u80A4\u80D5\u812F\u8150\u8151\u8179\u819A\u8240\u8274\u8299\u82A3\u82BE\u82FB\u8300\u832F\u8342\u8374\u8386\u83A9\u83D4\u8409\u842F\u844D\u84F2\u8567\u8659\u86A5\u86A8\u86B9\u86D7\u8705\u8709\u875C\u8760\u876E\u886D\u889A\u889D\u88B1\u8907\u8914\u8946\u8965\u8984\u8986\u8A03\u8A42\u8AE8\u8BA3\u8C67\u8CA0\u8CBB\u8CE6\u8CFB\u8D1F\u8D39\u8D4B\u8D59\u8D74\u8DBA\u8DD7\u8E3E\u8EF5\u8F14\u8F39\u8F3B\u8F85\u8F90\u8FD8\u909A\u909E\u90CD\u90D9\u90DB\u911C\u915C\u917B\u91DC\u91E1\u9207\u9258\u925C\u9307\u9351\u9362\u952B\u961C\u961D\u9644\u965A\u97B4\u97CD\u97DB\u97E8\u982B\u98AB\u98B0\u99A5\u99D9\u9A78\u9AF4\u9B34\u9B84\u9B92\u9BB2\u9C12\u9C8B\u9CC6\u9CE7\u9CEC\u9CFA\u9D14\u9D69\u9D9D\u9EA9\u9EAC\u9EB1\u9EB8\u9EFB\u9EFC",
  mian: "\u4E0F\u4FDB\u506D\u514D\u5195\u51A5\u52C9\u52D4\u53B8\u5595\u5A29\u5A42\u5A94\u5B35\u5B80\u6110\u68C9\u6AB0\u6ACB\u6C45\u6C94\u6CEF\u6E11\u6E4E\u6E63\u6FA0\u7251\u7704\u7720\u7791\u77C8\u77CA\u77CF\u7CC6\u7D7B\u7DBF\u7DCD\u7DDC\u7DE1\u7DEC\u7EF5\u7F05\u7F17\u817C\u81F1\u8287\u83AC\u8442\u8752\u8820\u9762\u9763\u9766\u9BB8\u9EAA\u9EAB\u9EB5\u9EBA\u9EFD\u9EFE",
  gai: "\u4E10\u4E62\u4F85\u5303\u5304\u54B3\u5793\u59DF\u5CD0\u5FCB\u6224\u6461\u6539\u6650\u675A\u6838\u6982\u69E9\u69EA\u6C7D\u6E89\u6F11\u74C2\u7561\u76D6\u78D1\u7974\u7D60\u7D6F\u80F2\u82A5\u8344\u8462\u84CB\u8A72\u8BE5\u8C65\u8CC5\u8CCC\u8D45\u90C2\u9223\u9385\u9499\u95A1\u9602\u9623\u9654\u9691\u9AB8",
  chou: "\u4E11\u4E12\u4EC7\u4FB4\u4FE6\u5062\u5114\u541C\u568B\u5733\u59AF\u5A64\u5ABF\u5B26\u5E31\u5E6C\u601E\u60C6\u6101\u61E4\u626D\u62BD\u63AB\u63C4\u640A\u64E3\u677B\u677D\u6826\u6906\u6AAE\u6BA0\u6EB4\u71FD\u7270\u72A8\u72AB\u7564\u7574\u7587\u7633\u7697\u76E9\u7723\u7785\u77C1\u7A20\u7B79\u7BD8\u7C4C\u7D2C\u7D52\u7DA2\u7EF8\u81ED\u81F0\u83D7\u85B5\u88EF\u8A76\u8B05\u8B78\u8B8E\u8B90\u8BCC\u8BEA\u8DFE\u8E0C\u8E8A\u905A\u9167\u916C\u9194\u919C\u91BB\u9215\u94AE\u96D4\u96E0\u9B57\u9B98\u9BC8\u9C8B",
  zhuan: "\u4E13\u4F20\u50B3\u50CE\u50DD\u5278\u53C0\u556D\u56C0\u581F\u587C\u5AE5\u5B68\u5C02\u5C08\u606E\u629F\u6476\u64B0\u6C8C\u6E4D\u6F19\u7077\u7451\u747C\u750E\u7816\u78DA\u7AF1\u7BC6\u7BF9\u7BFF\u7C28\u7C51\u7E33\u8011\u815E\u819E\u8483\u87E4\u8948\u8AEF\u8B54\u8CFA\u8D5A\u8EE2\u8F49\u8F6C\u911F\u9853\u989B\u994C\u9994\u9C44",
  cu: "\u4E14\u4FC3\u5346\u5352\u5648\u5A15\u5A16\u5AA8\u5F82\u601A\u61B1\u621A\u637D\u6B82\u731D\u7604\u762F\u76BB\u7C07\u7C97\u7E10\u7E2C\u7EC9\u8128\u850D\u8516\u851F\u89D5\u8A8E\u8D8B\u8D97\u8DA3\u8DA5\u8DA8\u8E00\u8E13\u8E24\u8E27\u8E59\u8E74\u8E75\u9162\u918B\u932F\u9519\u9863\u9E81\u9E84\u9E86\u9EA4\u9F00",
  ju: "\u4E14\u4E3E\u4EC7\u4F21\u4F5D\u4FB7\u4FE5\u4FF1\u5028\u5036\u50EA\u5177\u51A3\u51E5\u5267\u5287\u52EE\u530A\u53E5\u544A\u5480\u5727\u5765\u57E7\u57FE\u58C9\u59D0\u59D6\u5A35\u5A36\u5A45\u5A6E\u5BE0\u5C40\u5C45\u5C66\u5C68\u5CA0\u5CA8\u5D0C\u5DC8\u5DE8\u5F06\u5FC2\u6007\u6010\u601A\u60E7\u6133\u61C5\u61FC\u6285\u62D2\u62D8\u62E0\u62F1\u6319\u6336\u6344\u636E\u63AC\u63C8\u63DF\u64DA\u64E7\u661B\u67B8\u67DC\u6854\u68AE\u6907\u6908\u6910\u6989\u6998\u6A58\u6A8B\u6AF8\u6B05\u6B6B\u6BE9\u6BF1\u6CAE\u6CC3\u6CE6\u6D30\u6DBA\u6DD7\u6E20\u6E68\u6FBD\u70AC\u7117\u7123\u7220\u728B\u7291\u72CA\u72D9\u73C7\u741A\u75BD\u75C0\u7717\u77BF\u77E9\u7820\u79DF\u79EC\u7AAD\u7AB6\u7B65\u7BD3\u7C0D\u7C34\u7C67\u7C94\u7CB7\u7F5D\u801F\u805A\u8065\u8152\u81C4\u8209\u824D\u82E3\u82F4\u8392\u83CA\u83F9\u842D\u8445\u848C\u849F\u84A9\u84FB\u851E\u861C\u8627\u8655\u8661\u86B7\u86C6\u871B\u87B6\u8893\u88FE\u8977\u8A4E\u8ACA\u8BB5\u8C66\u8C97\u8D84\u8D89\u8D9C\u8DA1\u8DB3\u8DD4\u8DD9\u8DDD\u8DFC\u8E18\u8E1E\u8E3D\u8E6B\u8E7B\u8E86\u8EB9\u8EE5\u8F02\u8F66\u907D\u90AD\u90B9\u90E5\u90F0\u90F9\u9112\u9139\u91B5\u9245\u924F\u92E4\u92E6\u92F8\u943B\u949C\u9504\u9514\u952F\u95B0\u9671\u96CE\u96CF\u96DB\u97A0\u97AB\u98B6\u98D3\u99CF\u99D2\u99F6\u9A55\u9A67\u9A79\u9A84\u9B3B\u9B88\u9B8D\u9B94\u9C8F\u9D21\u9D59\u9D74\u9D8B\u9DAA\u9F30\u9F33\u9F5F\u9F83",
  qie: "\u4E14\u4F3D\u5022\u503F\u507C\u5207\u5327\u5392\u553C\u558B\u5951\u59BE\u5A55\u5AAB\u5E39\u602F\u608F\u60EC\u611C\u614A\u6308\u6377\u6705\u6904\u6C8F\u6D2F\u6DC1\u6F06\u758C\u767F\u780C\u7A27\u7A55\u7A83\u7ACA\u7B21\u7BA7\u7BCB\u7C61\u7DC1\u807A\u811E\u82C6\u8304\u857A\u85D2\u86E3\u86EA\u8A67\u8D84\u8DD9\u8E25\u90C4\u9365\u9411\u9532\u9B65\u9BDC\u9C08\u9CBD",
  pi: "\u4E15\u4EF3\u4F13\u4F3E\u4FFE\u50FB\u526F\u5288\u5339\u5351\u5421\u5426\u5564\u567C\u567D\u568A\u56AD\u572E\u574F\u576F\u57E4\u57F9\u58C0\u599A\u5AB2\u5AD3\u5C41\u5CAF\u5D25\u5D8F\u5E14\u5E80\u5E87\u5EB3\u6036\u6082\u61B5\u6251\u6279\u62AB\u62B7\u62C2\u63CA\u64D7\u65C7\u6707\u6787\u6788\u6911\u698C\u6BD4\u6BD7\u6BD8\u6BDE\u6DE0\u6E12\u6F4E\u6FBC\u6FDE\u708B\u7137\u72C9\u72D3\u7308\u7435\u7513\u7588\u758B\u75B2\u75DE\u75E6\u75FA\u7656\u76AE\u7764\u7765\u7812\u78C7\u7914\u7915\u79DB\u79E0\u7A2B\u7B13\u7B86\u7BE6\u7BFA\u7C32\u7C83\u7D15\u7EB0\u7F74\u7F77\u7F86\u7FCD\u801A\u80B6\u8134\u813E\u8157\u818D\u8298\u82C9\u82E4\u8406\u8543\u868C\u868D\u86BD\u86BE\u8731\u8795\u87B7\u882F\u88AB\u88E8\u8AC0\u8B6C\u8C7C\u8C7E\u8C94\u8F9F\u90B3\u90EB\u9131\u91FD\u9208\u921A\u9232\u9239\u925F\u9294\u92A2\u9303\u930D\u939E\u949A\u94CD\u95E2\u9630\u9642\u9674\u96A6\u9739\u979E\u9817\u9856\u9887\u99D3\u9AEC\u9B6E\u9B7E\u9B8D\u9C8F\u9D04\u9D67\u9DFF\u9E0A\u9F19",
  shi: "\u4E16\u4E17\u4E68\u4E8A\u4E8B\u4EC0\u4ED5\u4F3C\u4F40\u4F66\u4F7F\u4F8D\u5158\u519F\u52BF\u52E2\u5319\u5341\u534B\u5394\u53D3\u53F2\u545E\u5469\u54B6\u5511\u5547\u55DC\u5618\u5653\u566C\u57D8\u57F6\u5824\u5852\u58EB\u5931\u596D\u59CB\u59FC\u5A9E\u5B15\u5B9E\u5B9F\u5BA4\u5BA9\u5BB2\u5BD4\u5BE6\u5BFA\u5C38\u5C4D\u5C4E\u5CD5\u5CD9\u5D3C\u5D75\u5E02\u5E08\u5E2B\u5F0F\u5F11\u5F12\u5F56\u5FA5\u5FD5\u5FEF\u6040\u6043\u60FF\u623A\u62ED\u62FE\u63D0\u63D3\u65AF\u65BD\u65F6\u65F9\u662F\u6630\u6642\u67BE\u67F9\u67FF\u683B\u6974\u6981\u69AF\u6AA1\u6B96\u6C0F\u6C41\u6CB6\u6D02\u6D49\u6DB2\u6E5C\u6E64\u6E7F\u6EA1\u6EAE\u6EBC\u6FA4\u6FA8\u6FD5\u70BB\u70D2\u7176\u72E7\u72EE\u72F6\u7345\u7461\u7564\u75D1\u7702\u770E\u7721\u7757\u77E2\u77F3\u793A\u793B\u794F\u79B5\u79F2\u7ACD\u7B36\u7B39\u7B5B\u7B6E\u7BB7\u7BD2\u7BE9\u7C2D\u7C42\u7C6D\u7D41\u7E79\u7ECE\u8006\u80A2\u80D1\u820D\u8210\u8213\u83B3\u8479\u8492\u8494\u84CD\u8671\u8680\u8755\u8768\u87AB\u8906\u8937\u896B\u8979\u8996\u89C6\u89E2\u8A11\u8A66\u8A69\u8A93\u8ADF\u8AE1\u8B1A\u8B58\u8BC6\u8BD5\u8BD7\u8C25\u8C55\u8CB0\u8D33\u8D6B\u8DE9\u8EFE\u8F7C\u8FBB\u9002\u901D\u9048\u905E\u9069\u9070\u907E\u90BF\u90DD\u917E\u91B3\u91C3\u91C8\u91CA\u91CB\u91F6\u9230\u9242\u9243\u9247\u9248\u9250\u927D\u92B4\u9349\u9366\u93A9\u94C8\u94CA\u94E9\u98DF\u98E0\u98ED\u98FE\u9919\u991D\u9963\u996C\u9970\u99B6\u99DB\u9A76\u9B73\u9B96\u9BF4\u9C18\u9C23\u9C24\u9CA5\u9CBA\u9CF2\u9CFE\u9DB3\u9E24\u9F2B\u9F2D\u9F5B\u9F65",
  qiu: "\u4E18\u4E20\u4EC7\u4FC5\u533A\u53B9\u53F4\u5512\u56DA\u56E2\u5775\u5A9D\u5BBF\u5BC8\u5D37\u5DEF\u5DF0\u6058\u60C6\u6100\u624F\u6344\u641D\u6739\u6882\u6978\u6AF9\u6B8F\u6BEC\u6C3D\u6C3F\u6C42\u6C53\u6CC5\u6D57\u6E1E\u6E6B\u6E6C\u6E6D\u716A\u726B\u72B0\u738C\u7403\u7486\u76B3\u76DA\u79CB\u79CC\u7A50\u7BCD\u7CD7\u7D0C\u7D7F\u7DE7\u808D\u827D\u838D\u8429\u84F2\u8612\u866C\u866F\u86AF\u86F7\u8764\u8775\u87D7\u8824\u88D8\u89D3\u89E9\u8A04\u8A05\u8CD5\u8D47\u8D9C\u8DA5\u900E\u9011\u9052\u90B1\u90BA\u914B\u9194\u91D3\u91DA\u91FB\u92B6\u9486\u97A6\u97A7\u9997\u9B82\u9BC4\u9C0C\u9C0D\u9C3D\u9C43\u9CC5\u9CE9\u9D6D\u9D96\u9E20\u9E59\u9F3D\u9F9C\u9F9D\u9F9F",
  bing: "\u4E19\u4E26\u4ECC\u4F75\u5002\u504B\u50A1\u5175\u51AB\u51B0\u57AA\u5BCE\u5C4F\u5E73\u5E76\u5E77\u5EB0\u6032\u62A6\u62FC\u63A4\u6452\u661E\u663A\u678B\u67C4\u681F\u6824\u68B9\u68C5\u69DF\u6AB3\u6C37\u70B3\u71F7\u71F9\u7415\u7592\u75C5\u75ED\u765B\u765D\u772A\u7980\u79C9\u7A1F\u7A89\u7ADD\u7D63\u7D86\u7EE0\u82EA\u86C3\u8A81\u8DF0\u90B4\u9235\u927C\u92F2\u9643\u9750\u9786\u979E\u97B8\u9905\u9920\u997C\u9BA9",
  ye: "\u4E1A\u4E5F\u4EAA\u4EB1\u503B\u505E\u50F7\u51B6\u53F6\u5414\u54BD\u5558\u559D\u5622\u564E\u5688\u57DC\u5828\u5885\u58B7\u58C4\u591C\u5C04\u5CEB\u5DAA\u5DAB\u61D5\u62B4\u62FD\u6353\u6359\u6396\u63DE\u63F2\u63F6\u64D6\u64DB\u64E8\u64EA\u64EB\u659C\u6654\u668D\u66C4\u66C5\u66D7\u66F3\u6792\u67BC\u67BD\u6930\u696A\u696D\u6B4B\u6B95\u6B97\u6D02\u6D07\u6D82\u6DB2\u6F1C\u6F71\u6FB2\u70E8\u7160\u7180\u71C1\u7217\u7237\u723A\u74DB\u75F7\u76A3\u77B1\u77B8\u790F\u7AAB\u7DE4\u8036\u8042\u8076\u814B\u837C\u8449\u8675\u882E\u8831\u8B01\u8C12\u90AA\u90BA\u9113\u9134\u91CE\u91F6\u91FE\u92E3\u9371\u9381\u9391\u9437\u94D8\u9765\u9768\u9801\u9875\u9918\u9923\u9941\u9950\u9980\u998C\u9A5C\u9D7A\u9E08\u9EE6",
  cong: "\u4E1B\u4ECE\u506C\u5306\u53E2\u56EA\u56F1\u5A43\u5B6E\u5F93\u5F96\u5F9E\u5FE9\u6031\u60A4\u60B0\u6152\u6181\u66B0\u679E\u68C7\u6964\u6A05\u6A2C\u6A37\u6B09\u6DD9\u6F0E\u6F17\u6F40\u6F48\u6F68\u7047\u7127\u719C\u71EA\u721C\u742E\u747D\u7481\u779B\u7882\u7A97\u7BF5\u7DCF\u7DEB\u7E26\u7E31\u7E3D\u7E71\u7EB5\u8061\u8066\u806A\u8070\u82C1\u8310\u83C6\u8471\u84EF\u8525\u85C2\u87CC\u8AB4\u8B25\u8CE8\u8CE9\u93E6\u9A18\u9A44\u9AA2",
  dong: "\u4E1C\u4F97\u5032\u50CD\u51AC\u51BB\u51CD\u52A8\u52D5\u52ED\u549A\u578C\u57EC\u58A5\u5902\u59DB\u5A3B\u5B1E\u5CBD\u5CD2\u5CDD\u5D20\u5D2C\u606B\u61C2\u6219\u630F\u63F0\u6638\u6771\u680B\u6850\u68DF\u6C21\u6C2D\u6D1E\u6DB7\u6E69\u70D4\u71D1\u72EB\u752C\u7850\u7B17\u7B52\u7B69\u7BBD\u7D67\u80E8\u80F4\u8156\u82F3\u83C4\u8463\u856B\u8740\u8855\u8A77\u8ACC\u8FF5\u916E\u9718\u99E7\u9A06\u9B97\u9BDF\u9D87\u9DAB\u9E2B\u9F15",
  si: "\u4E1D\u4E96\u4EE5\u4F3A\u4F3C\u4F40\u4F41\u4FA1\u4FDF\u4FEC\u5072\u5082\u5129\u5155\u51D8\u5395\u53A0\u53AE\u53B6\u53F0\u53F8\u549D\u55E3\u5636\u565D\u56DB\u59D2\u5A30\u5AA4\u5B60\u5BFA\u5DF3\u5EDD\u5F99\u601D\u6056\u6122\u6495\u65AF\u676B\u6790\u67B1\u67F6\u68A9\u6952\u69B9\u6B7B\u6C5C\u6CC0\u6CD7\u6CE4\u6D0D\u6D98\u6F8C\u7003\u706C\u71CD\u726D\u78C3\u7940\u7960\u7997\u79A0\u79A9\u79C1\u7AE2\u7B25\u7C1B\u7CF8\u7CF9\u7D72\u7DE6\u7F0C\u7F52\u7F73\u801C\u8082\u8084\u8086\u83E5\u856C\u857C\u8652\u86F3\u8724\u8784\u8794\u87D6\u87F4\u8997\u8B15\u8C84\u9018\u91F2\u9236\u923B\u9270\u9289\u92AF\u92D6\u9376\u9401\u9536\u96C9\u98B8\u98D4\u98DF\u98E4\u98F4\u98FC\u9972\u9974\u99DF\u9A03\u9A26\u9A77\u9DC9\u9DE5\u9E36\u9E97\u9F36",
  cheng: "\u4E1E\u4E57\u4E58\u4F25\u4FB1\u5000\u5041\u50DC\u51C0\u5448\u545B\u55C6\u564C\u57CE\u57D5\u57E9\u5818\u584D\u5856\u5A0D\u5BAC\u5CF8\u5D4A\u5EB1\u5F8E\u5FB4\u5FB5\u609C\u60E9\u6186\u6195\u61F2\u6210\u627F\u62A2\u6330\u6381\u6436\u645A\u6464\u6490\u6491\u649C\u655E\u665F\u673E\u67A8\u67FD\u68D6\u68E6\u6909\u69CD\u6A18\u6A55\u6A56\u6A59\u6A89\u6A99\u6C36\u6CDF\u6D06\u6D48\u6D67\u6D7E\u6DE8\u6E97\u6F82\u6F84\u7013\u701E\u722F\u725A\u73F5\u73F9\u7424\u7472\u757B\u76DB\u76EF\u7748\u77A0\u77C3\u7880\u79E4\u79F0\u7A0B\u7A31\u7A6A\u7A9A\u7AC0\u7B6C\u7D7E\u7DFD\u8100\u812D\u837F\u8670\u86CF\u87F6\u88CE\u89D5\u8AA0\u8BDA\u8D6A\u8D6C\u8D9F\u8E1C\u8E66\u901E\u90D5\u90E2\u9172\u9192\u92EE\u9397\u93F3\u93FF\u943A\u94D6\u94DB\u9637\u9757\u9833\u9953\u9A01\u9A2C\u9A8B\u9BCE\u9EE8",
  sheng: "\u4E1E\u4E57\u4E58\u5057\u51BC\u5269\u5270\u52DD\u5347\u544F\u5723\u57A9\u58AD\u58F0\u59D3\u5A0D\u5AB5\u5D4A\u61B4\u6598\u6607\u665F\u6660\u66FB\u67A1\u69BA\u6A73\u6B85\u6BB8\u6CE9\u6E11\u6E3B\u6E66\u6FA0\u713A\u7272\u72CC\u73C4\u741E\u751F\u7525\u7538\u76DB\u7701\u771A\u7AD4\u7B19\u7BB5\u7E04\u7E69\u7EF3\u8056\u8072\u80DC\u82FC\u8542\u8B5D\u8CB9\u8CF8\u924E\u935F\u9629\u965E\u9679\u9C66\u9D7F\u9F2A",
  diu: "\u4E1F\u4E22\u92A9\u94E5\u98A9",
  liang: "\u4E21\u4E24\u4EAE\u4FCD\u4FE9\u5006\u501E\u5169\u51AB\u51C9\u54F4\u5521\u5562\u55A8\u589A\u60A2\u60CA\u639A\u667E\u6881\u690B\u6A11\u6DBC\u6E78\u7177\u7C17\u7CAE\u7CB1\u7CE7\u7DA1\u7DC9\u813C\u826F\u83A8\u870B\u873D\u88F2\u8AD2\u8C05\u8E09\u8E52\u8E63\u8F0C\u8F1B\u8F2C\u8F86\u8F8C\u91CF\u9344\u95AC\u9606\u9753\u975A\u99FA\u9B49\u9B4E",
  you: "\u4E23\u4EB4\u4F18\u4F51\u4F91\u5064\u512A\u5198\u5363\u53C8\u53CB\u53F3\u53F9\u5466\u54CA\u5500\u5698\u56FF\u5773\u5965\u598B\u59F7\u5B67\u5BA5\u5C22\u5C23\u5C24\u5CDF\u5CF3\u5E7C\u5E7D\u5EAE\u5FE7\u601E\u6023\u602E\u60A0\u6182\u61EE\u622D\u6270\u63C2\u63C4\u6538\u65BF\u6709\u67DA\u682F\u6884\u688E\u6962\u69F1\u6ACC\u6AFE\u6C53\u6C7C\u6C8B\u6CB9\u6CC5\u6CC8\u6CD1\u6D5F\u6E38\u6E75\u6EFA\u7000\u7256\u7257\u7270\u72B9\u72D6\u7336\u7337\u7376\u7531\u7534\u75A3\u75CF\u7950\u7989\u79DE\u7CFF\u7E47\u7E8B\u7F90\u7F91\u7F97\u8030\u8048\u8071\u80AC\u811C\u8129\u82C3\u839C\u83A0\u83A4\u83B8\u848F\u8555\u8698\u86B0\u86B4\u870F\u8763\u8764\u890E\u890F\u8A27\u8A98\u8BF1\u8C81\u8F0F\u8F36\u8FF6\u900C\u9030\u904A\u908E\u90AE\u90F5\u913E\u9149\u916D\u91C9\u923E\u92AA\u92B9\u94C0\u94D5\u9508\u99C0\u9B77\u9B8B\u9C7F\u9C89\u9E80\u9EDD\u9F2C",
  yan: "\u4E25\u4E75\u4F46\u4FE8\u4FFA\u5043\u5050\u5063\u50BF\u513C\u5156\u5157\u5186\u5261\u5266\u533D\u5382\u5383\u538C\u53A3\u53AD\u53B3\u53B4\u54BD\u5501\u550C\u55A6\u55AD\u565E\u56A5\u56B4\u56D0\u57CF\u57EF\u5830\u5869\u5895\u58DB\u58E7\u590F\u5935\u5944\u598D\u599F\u59F2\u59F8\u5A2B\u5A2E\u5A95\u5AE3\u5B0A\u5B10\u5B2E\u5B3F\u5B4D\u5BB4\u5C75\u5CA9\u5D04\u5D26\u5D43\u5D52\u5D53\u5D96\u5DAE\u5DCC\u5DD6\u5DD7\u5DD8\u5DDA\u5DE1\u5E7F\u5EB5\u5EF5\u5EF6\u5F07\u5F65\u5F66\u6079\u611D\u61D5\u622D\u624A\u6281\u6329\u633B\u635D\u639E\u63A9\u63C5\u63DC\u63DE\u6565\u6616\u664F\u667B\u66A5\u66D5\u66EE\u68EA\u693B\u693C\u694C\u6A2E\u6A6A\u6A90\u6ABF\u6AE9\u6B15\u6B97\u6BB7\u6C24\u6C87\u6CBF\u6D07\u6D1D\u6D8E\u6DCA\u6DE1\u6DEB\u6DF9\u6E30\u6E37\u6E6E\u6E7A\u6E8E\u6EDF\u6F14\u6F39\u704E\u7054\u7067\u7069\u708E\u708F\u70DF\u70FB\u7109\u7114\u7130\u7131\u7159\u7196\u71C4\u71D5\u7213\u726A\u72E0\u72FF\u7312\u73DA\u7402\u7430\u74DB\u7517\u76D0\u773C\u7814\u781A\u784F\u786F\u787D\u789E\u7939\u7B75\u7BF6\u7C37\u7D96\u7E2F\u7F68\u7FA1\u7FA8\u80ED\u814C\u8181\u81D9\u8273\u8276\u8277\u82AB\u839A\u83B6\u83F4\u83F8\u8412\u844A\u8455\u8505\u852B\u859F\u8664\u8712\u8758\u884D\u88FA\u8917\u8983\u898E\u89C3\u89FE\u8A00\u8A01\u8A2E\u8A7D\u8AFA\u8B8C\u8B9E\u8BA0\u8C1A\u8C33\u8C53\u8C54\u8C5C\u8C63\u8D0B\u8D17\u8D5D\u8DBC\u8EBD\u8EC5\u8FD9\u9019\u9043\u90D4\u90FE\u9122\u9140\u9153\u917D\u9183\u91B6\u91BC\u91C5\u925B\u931F\u94C5\u952C\u9586\u95B9\u95BB\u95BC\u95EB\u9609\u960E\u960F\u962D\u963D\u9669\u9670\u9681\u9692\u96AA\u96C1\u9765\u9768\u984F\u9851\u9854\u9869\u989C\u990D\u995C\u9A10\u9A13\u9A34\u9A57\u9A60\u9A8C\u9B33\u9B47\u9B58\u9C0B\u9CEB\u9CF1\u9D08\u9D33\u9DA0\u9DC3\u9DF0\u9E7D\u9E99\u9EA3\u9EB2\u9EE1\u9EE4\u9EEB\u9EEC\u9EED\u9EF0\u9EF6\u9F34\u9F39\u9F57\u9F5E\u9F74\u9F82\u9F91",
  ban: "\u4E26\u4F34\u5206\u529E\u534A\u5742\u5762\u57FF\u59C5\u5C85\u5F6C\u6011\u626E\u6273\u62CC\u642B\u642C\u653D\u6591\u6592\u6604\u670C\u677F\u67C8\u6E74\u7248\u73ED\u74E3\u74EA\u7622\u764D\u79DA\u7C53\u7C84\u7D46\u7ECA\u80A6\u8228\u822C\u8742\u8781\u878C\u8929\u8982\u8C73\u8DD8\u8FA6\u8FA7\u8FA8\u8FA9\u8FAC\u8FAF\u9211\u9261\u94A3\u95C6\u962A\u977D\u9812\u9881\u9B6C\u9CFB",
  bang: "\u4E26\u508D\u55D9\u57B9\u57F2\u585D\u5ACE\u5CC0\u5D17\u5E2E\u5E47\u5E5A\u5E6B\u5F6D\u5FAC\u6337\u6360\u6412\u65C1\u6886\u68D2\u68D3\u699C\u6D5C\u7253\u73A4\u7865\u78C5\u7A16\u7D21\u7D81\u7E0D\u7EBA\u7ED1\u8180\u8255\u84A1\u8684\u868C\u86D6\u872F\u8783\u8B17\u8C24\u90A6\u90AB\u938A\u9551\u97A4\u9A2F\u9AC8",
  sang: "\u4E27\u55AA\u55D3\u6421\u6851\u6852\u69E1\u78C9\u7E95\u892C\u939F\u9859\u98A1",
  gun: "\u4E28\u60C3\u68CD\u68DE\u6D51\u6DF7\u6E3E\u6EDA\u6EFE\u742F\u74AD\u7754\u7774\u78D9\u7DC4\u7DF7\u7EF2\u84D8\u8509\u886E\u889E\u88F7\u8B34\u8F25\u8F8A\u9315\u951F\u9B8C\u9BC0\u9C25\u9CA7\u9CCF",
  shu: "\u4E28\u4E66\u4FB8\u4FC6\u4FDE\u4FF6\u500F\u5010\u5135\u516A\u53D4\u54B0\u552E\u55FD\u587E\u5885\u59DD\u5A36\u5A4C\u5B4E\u5B70\u5C0C\u5C17\u5C5E\u5C6C\u5EB6\u5EBB\u5FC4\u5FEC\u6037\u6055\u6086\u620D\u6292\u6348\u6352\u6393\u63C4\u6445\u6504\u6570\u6578\u668F\u6691\u66D9\u66F8\u672E\u672F\u6731\u675F\u6778\u677C\u67A2\u67D5\u6811\u68B3\u6A1E\u6A39\u6A7E\u6B8A\u6BB3\u6BF9\u6BFA\u6C00\u6CAD\u6D91\u6DD1\u6F31\u6F44\u6F4F\u6F7B\u6F8D\u6FD6\u702D\u7102\u719F\u7479\u74B9\u758B\u758E\u758F\u7659\u79EB\u7A0C\u7AD6\u7AEA\u7C54\u7CEC\u7D13\u7D35\u7D49\u7D80\u7EBE\u7F72\u7FDB\u8167\u8212\u8357\u837C\u83FD\u8481\u84A3\u852C\u85A5\u85AE\u85AF\u85EA\u85F7\u866A\u8700\u8834\u883E\u8853\u88CB\u8961\u8969\u8B36\u8C4E\u8C6B\u8D16\u8D4E\u8DFE\u8E08\u8ED7\u8F38\u8F93\u8FF0\u900F\u9103\u91CE\u9265\u9330\u93E3\u9432\u956F\u964E\u9664\u9683\u9B9B\u9C6A\u9C70\u9D68\u9D90\u9DF8\u9E00\u9E6C\u9ECD\u9F20\u9F21",
  jiu: "\u4E29\u4E45\u4E46\u4E5D\u4E63\u5003\u50E6\u5279\u52FC\u5313\u531B\u5336\u53A9\u548E\u557E\u564D\u597A\u5C31\u5EC4\u5ECF\u5ED0\u6101\u6166\u6344\u63C2\u63EA\u63EB\u644E\u6551\u65E7\u673B\u6766\u67E9\u67FE\u6855\u6A1B\u6A5A\u6BA7\u6C3F\u6C63\u6E6B\u6E6C\u7078\u725E\u7396\u7542\u759A\u7A35\u7A4B\u7A76\u7A8C\u7CFA\u7CFE\u7D24\u7E46\u7EA0\u7F2A\u81FC\u8205\u820A\u820F\u841B\u8764\u8D73\u8E74\u9152\u9579\u9604\u97ED\u97EE\u9B0F\u9B2E\u9BE6\u9CE9\u9DF2\u9E20\u9E6B\u9E94\u9F68",
  gan: "\u4E2A\u4E79\u4E7E\u4E81\u4EE0\u4F44\u501D\u51CE\u51F2\u5481\u5769\u5978\u5C32\u5C34\u5C36\u5C37\u5E72\u5E79\u5FD3\u611F\u625E\u634D\u64C0\u653C\u6562\u65F0\u6746\u67D1\u687F\u69A6\u6A44\u6A8A\u6C57\u6C75\u6CD4\u6D5B\u6DE6\u6F27\u6F89\u7068\u7395\u73B5\u7518\u75B3\u76AF\u76F0\u77F8\u79C6\u7A08\u7AFF\u7B34\u7B78\u7BE2\u7C33\u7C93\u7D3A\u7EC0\u809D\u8289\u82F7\u8677\u8866\u8A4C\u8AF4\u8C43\u8D11\u8D1B\u8D63\u8D76\u8D95\u8FC0\u9150\u91EC\u930E\u98E6\u9AAD\u9B50\u9C14\u9C64\u9CE1\u9CF1",
  ge: "\u4E2A\u4ECB\u4EE1\u4F6B\u4F6E\u500B\u5272\u530C\u53EF\u5404\u5408\u5424\u5444\u54AF\u54E5\u54FF\u55DD\u5605\u5622\u5676\u572A\u5865\u5C79\u5F41\u6105\u6208\u6213\u6228\u6262\u630C\u6401\u643F\u64F1\u654B\u675A\u683C\u69C5\u6ACA\u6B4C\u6D69\u6EC6\u6ED2\u6F94\u726B\u7271\u72B5\u7332\u7366\u7599\u76D6\u781D\u784C\u79F4\u7B87\u7D07\u7EA5\u8090\u80F3\u8188\u81C8\u81F5\u8238\u8316\u83CF\u845B\u84CB\u867C\u86D2\u86E4\u88BC\u88D3\u89E1\u8A65\u8AFD\u8B0C\u8F35\u8F55\u9240\u927B\u927F\u9391\u9398\u93B6\u94BE\u94EA\u94EC\u9549\u9598\u95A3\u95A4\u95F8\u9601\u9694\u9769\u9788\u97B7\u97D0\u97DA\u981C\u988C\u9A14\u9ABC\u9AC2\u9B32\u9B7A\u9BA5\u9BAF\u9C2A\u9C84\u9D10\u9D1A\u9D3F\u9D45\u9E3D",
  ya: "\u4E2B\u4E5B\u4E9A\u4E9C\u4E9E\u4F22\u4FF9\u503B\u529C\u538A\u538B\u538C\u5393\u53AD\u5416\u543E\u5440\u547E\u54D1\u5516\u555E\u5714\u5720\u5727\u57AD\u57E1\u580A\u5810\u58D3\u59F6\u5A05\u5A6D\u5B72\u5C88\u5D15\u5D16\u5E8C\u5E98\u5FA1\u62BC\u62C1\u631C\u6397\u63E0\u672D\u6792\u6860\u690F\u693B\u6B47\u6C29\u6C2C\u6D65\u6DAF\u6F04\u6F5D\u70CF\u7259\u72BD\u731A\u7330\u73A1\u740A\u7458\u758B\u75A8\u75D6\u7602\u775A\u7811\u78A3\u78CD\u7A0F\u7A75\u7AAB\u7B0C\u8050\u82BD\u8565\u869C\u8859\u897E\u8A1D\u8BB6\u8ECB\u8F05\u8F35\u8F67\u8F82\u8FD3\u90AA\u91FE\u930F\u941A\u94D4\u9598\u95F8\u96C5\u9854\u989C\u9D09\u9D28\u9D6A\u9D76\u9D95\u9E26\u9E2D\u9E4C\u9F3C\u9F56\u9F7E",
  zhuang: "\u4E2C\u50EE\u58EE\u58EF\u58F5\u5958\u5986\u599D\u5A24\u5E62\u5E84\u5E92\u61A7\u6205\u6206\u6207\u649E\u6869\u6889\u6A01\u6E77\u6F34\u710B\u72B6\u72C0\u735E\u7CA7\u7CDA\u825F\u8358\u838A\u88C5\u88DD\u8D11\u8D1B\u8D63",
  zhong: "\u4E2D\u4E51\u4EF2\u4F00\u4F17\u5045\u51A2\u5223\u55A0\u5839\u585A\u5902\u5990\u5995\u5A91\u5C30\u5E52\u5F78\u5FB8\u5FE0\u5FEA\u67CA\u6B71\u6C77\u6CC8\u6F7C\u7082\u7144\u72C6\u7607\u76C5\u773E\u794C\u79CD\u7A2E\u7A5C\u7AE5\u7B57\u7C66\u7D42\u7DDF\u7EC8\u80BF\u816B\u8202\u822F\u833D\u8463\u8520\u869B\u86A3\u8769\u87A4\u87BD\u87F2\u8846\u8873\u8876\u8877\u8908\u8AE5\u8E35\u8E71\u8FDA\u91CD\u9206\u9221\u92BF\u937E\u9418\u949F\u953A\u9D24\u9F28",
  jie: "\u4E2F\u4EA5\u4ECB\u4EF7\u501F\u5022\u5047\u5048\u507C\u5091\u50F9\u5226\u5227\u523C\u52AB\u52BC\u5369\u536A\u5424\u5527\u5536\u5551\u5588\u55DF\u568C\u573E\u5826\u583A\u5951\u5979\u598E\u59D0\u5A55\u5A8E\u5A98\u5AAB\u5AC5\u5B51\u5BB6\u5C10\u5C46\u5C4A\u5C8A\u5C95\u5D28\u5D51\u5D65\u5DB0\u5DBB\u5DC0\u5E6F\u5E8E\u5FA3\u5FE6\u6088\u6212\u622A\u6262\u62C5\u62EE\u62FE\u6377\u63A5\u63B2\u63ED\u6429\u64D1\u64EE\u64F3\u65BA\u6605\u66A8\u66C1\u6770\u6840\u6854\u685D\u6904\u6950\u696C\u6976\u6977\u6982\u69A4\u69CB\u6A9E\u6AED\u6BD1\u6D01\u6D2F\u6E07\u6E34\u6E5D\u6ED0\u6F54\u716F\u7297\u72E4\u736C\u73A0\u743E\u754C\u754D\u758C\u7596\u75A5\u75CE\u7664\u7686\u776B\u780E\u781D\u78A3\u790D\u7956\u79F8\u7A2D\u7AED\u7BC0\u7C4D\u7D07\u7D12\u7D50\u7D5C\u7E72\u7EA5\u7ED3\u7FAF\u8024\u813B\u8250\u8282\u82A5\u83AD\u83E8\u84F5\u85C9\u86A7\u86E3\u86F6\u8710\u874D\u8754\u8818\u881E\u883D\u8857\u8871\u8878\u8893\u88B7\u88BA\u88D3\u892F\u89E3\u89E7\u8A10\u8A70\u8AA1\u8AB1\u8B2F\u8BA6\u8BD8\u8BEB\u8D8C\u8DF2\u8E15\u8FFC\u9263\u9347\u937B\u9534\u9636\u968E\u96C3\u9782\u978A\u9821\u9889\u98F7\u9AB1\u9AEB\u9B5D\u9B6A\u9B9A\u9C92\u9D9B",
  feng: "\u4E30\u4EF9\u4FF8\u5051\u50FC\u51AF\u51E4\u51E8\u51EC\u51EE\u552A\u57C4\u5838\u5906\u5949\u59A6\u5BF7\u5C01\u5CEF\u5CF0\u5D36\u6340\u6367\u6453\u67AB\u687B\u6953\u6A92\u6CA3\u6CA8\u6CDB\u6D72\u6E22\u6E57\u6E84\u6F28\u7043\u7090\u70FD\u7128\u7148\u71A2\u728E\u7326\u7412\u752E\u75AF\u760B\u76FD\u781C\u78B8\u7BC8\u7D98\u7E2B\u7F1D\u80A8\u823D\u8242\u8391\u8451\u8615\u8634\u868C\u8702\u8982\u8985\u8AF7\u8BBD\u8C4A\u8C50\u8CF5\u8D57\u9004\u9022\u9137\u9146\u92D2\u93BD\u93E0\u950B\u974A\u98A8\u98CC\u98CE\u99AE\u9CEF\u9CF3\u9D0C\u9D6C\u9E4F\u9EB7",
  guan: "\u4E31\u4E32\u500C\u5173\u51A0\u535D\u5A60\u5B98\u60B9\u60BA\u60EF\u6163\u61FD\u63BC\u645C\u65A1\u679C\u6844\u68FA\u6A0C\u6AEC\u6B0A\u6BCC\u6CA6\u6CF4\u6DAB\u6DC9\u6DEA\u6F45\u704C\u721F\u742F\u74D8\u75EF\u761D\u764F\u76E5\u77D4\u77DC\u7936\u797C\u7AA4\u7B66\u7BA1\u7DB8\u7EB6\u7F46\u7F50\u8218\u839E\u83C5\u8416\u8484\u898C\u89B3\u89C0\u89C2\u8CAB\u8D2F\u8E80\u8F28\u9066\u9327\u93C6\u9475\u959E\u95A2\u95D7\u95DC\u96DA\u9928\u9986\u9C25\u9C5E\u9C79\u9CCF\u9CE4\u9D4D\u9E1B\u9E73",
  kuang: "\u4E31\u5123\u5144\u51B5\u52BB\u5321\u5329\u535D\u54D0\u5739\u58D9\u593C\u5CB2\u5EE3\u5FF9\u6047\u61EC\u61ED\u6282\u65F7\u663F\u66E0\u6789\u6846\u6CC1\u6D2D\u6E5F\u720C\u72C2\u72C5\u7716\u7736\u77CC\u77FF\u783F\u7844\u78FA\u7926\u7A6C\u7B50\u7B7A\u7D4B\u7D56\u7E8A\u7EA9\u8A86\u8A91\u8BD3\u8BF3\u8CBA\u8D36\u8ED6\u8EE0\u8EE6\u8EED\u8FCB\u901B\u909D\u90BC\u913A\u9271\u92DB\u945B\u9D5F\u9ECB",
  chuan: "\u4E32\u4F20\u50B3\u50E2\u5276\u5598\u570C\u583E\u5DDB\u5DDD\u60F4\u63BE\u66B7\u693D\u6B42\u6C1A\u6C4C\u732D\u7394\u744F\u750E\u7A7F\u7BC5\u819E\u821B\u8221\u8229\u8239\u8348\u8CD7\u8E33\u8E39\u8F32\u9044\u91E7\u948F\u9569\u9DA8",
  chan: "\u4E33\u4EA7\u4EB6\u4F54\u50DD\u50E4\u5103\u5133\u514E\u5154\u5181\u522C\u5257\u5277\u5296\u5355\u5358\u5398\u5574\u55AE\u563D\u56B5\u56C5\u5718\u58A0\u58E5\u5A75\u5B0B\u5B17\u5B71\u5D2D\u5D7C\u5D83\u5D84\u5DC9\u5E5D\u5E68\u5EDB\u5FCF\u619A\u61F4\u61FA\u63B8\u63BA\u6400\u644C\u6472\u647B\u64A3\u6519\u65BA\u65F5\u68B4\u68CE\u6990\u6B03\u6BDA\u6CBE\u6D50\u6E10\u6E79\u6EFB\u6F38\u6F79\u6F7A\u6FB6\u700D\u703A\u705B\u7158\u71C0\u7351\u7522\u7523\u785F\u78DB\u7985\u79AA\u7C05\u7DC2\u7DFE\u7E5F\u7E75\u7E8F\u7E92\u7F20\u7FBC\u80C0\u8120\u826C\u82EB\u8487\u8546\u8749\u87B9\u87EC\u87FA\u87FE\u88A9\u88E3\u88E7\u894C\u895C\u895D\u8998\u89C7\u8A97\u8AC2\u8B42\u8B87\u8B92\u8B96\u8C04\u8C17\u8C36\u8E4D\u8E94\u8FBF\u913D\u9141\u91A6\u9246\u92CB\u92D3\u93DF\u9471\u94F2\u9561\u9575\u95B3\u95E1\u9610\u97C2\u986B\u98A4\u995E\u998B\u9AA3",
  lin: "\u4E34\u4E83\u4EFB\u4F08\u50EF\u51DB\u51DC\u53B8\u541D\u5549\u58E3\u5D0A\u5D99\u5EE9\u5EEA\u6061\u608B\u60CF\u61CD\u61D4\u62CE\u649B\u65B4\u667D\u66BD\u6797\u6A49\u6A81\u6AA9\u6D81\u6DCB\u6E17\u6EF2\u6F7E\u6F9F\u7036\u711B\u71D0\u735C\u73AA\u7433\u7498\u7510\u7584\u75F3\u765B\u765D\u77B5\u7884\u78F7\u7A1F\u7B96\u7CA6\u7CBC\u7E57\u7FF7\u81A6\u81E8\u83FB\u853A\u85FA\u8CC3\u8D41\u8E78\u8E8F\u8E99\u8EAA\u8F54\u8F65\u8F9A\u9074\u90BB\u9130\u93FB\u95B5\u9634\u96A3\u9716\u9872\u9A4E\u9B7F\u9C57\u9CDE\u9E90\u9E9F",
  zhuo: "\u4E35\u502C\u5262\u5285\u52FA\u5353\u53D5\u5544\u5545\u555C\u5663\u5734\u5767\u588C\u59B0\u5A3A\u5F74\u62D9\u6349\u6354\u6387\u64AF\u64C6\u64E2\u6580\u65AB\u65AE\u65B1\u65B2\u65B5\u666B\u6753\u684C\u68B2\u68C1\u68F3\u68F9\u6913\u69D5\u6AE1\u6C4B\u6D4A\u6D5E\u6DBF\u6DD6\u6E96\u6FC1\u6FEF\u7042\u707C\u70AA\u70F5\u712F\u72B3\u72F5\u7422\u7438\u7740\u77E0\u787A\u799A\u7A5B\u7A71\u7AA1\u7AA7\u7BB8\u7BE7\u7C57\u7C71\u7E73\u7F34\u7F6C\u8049\u80AB\u8301\u8457\u84D4\u855E\u85CB\u8743\u8817\u883F\u8AC1\u8AD1\u8B36\u8BFC\u8DA0\u8DB5\u8E14\u8E60\u8E85\u914C\u9275\u92DC\u942F\u9432\u956F\u9D6B\u9DDF",
  dian: "\u4E36\u4F43\u4F54\u508E\u5178\u53A7\u5538\u576B\u57AB\u57DD\u588A\u58C2\u594C\u5960\u5A5D\u5A70\u5D6E\u5DC5\u5DD3\u5DD4\u5E97\u60E6\u6242\u62C8\u6382\u6527\u6541\u655F\u6923\u69C7\u69D9\u6A42\u6A5D\u6BBF\u6CBE\u6D8E\u6DC0\u6E7A\u6EC7\u6FB1\u70B9\u73B7\u7414\u7535\u7538\u75F6\u7628\u765C\u766B\u7672\u7898\u78F9\u7C1F\u814D\u84A7\u8547\u8713\u8714\u8A40\u8E2E\u8E4E\u923F\u94BF\u963D\u96FB\u975B\u9815\u985A\u985B\u98A0\u9A54\u9EDE\u9F7B",
  zhu: "\u4E36\u4E3B\u4E88\u4F2B\u4F47\u4F4F\u4F8F\u5285\u529A\u52A9\u52AF\u54AE\u55FB\u5631\u5663\u56D1\u577E\u58B8\u58F4\u5B4E\u5B81\u5B94\u5C0C\u5C5E\u5C6C\u5D40\u5EB6\u62C4\u640A\u6571\u6580\u6597\u65B8\u66EF\u671D\u672F\u6731\u677C\u6793\u67E0\u67F1\u67F7\u682A\u696E\u69E0\u6A26\u6A65\u6AE1\u6AE7\u6AEB\u6B18\u6BB6\u6CCF\u6CDE\u6CE8\u6D19\u6E1A\u6F74\u6F8D\u6FD0\u7026\u705F\u70A2\u70B7\u70DB\u7151\u716E\u71ED\u7225\u732A\u73E0\u75B0\u7603\u771D\u77A9\u77DA\u782B\u7843\u78E9\u795D\u7969\u79FC\u7A8B\u7ADA\u7AF9\u7AFA\u7B01\u7B1C\u7B51\u7B6F\u7BB8\u7BC9\u7BEB\u7BF4\u7D35\u7D38\u7D51\u7EBB\u7F5C\u7F9C\u7FE5\u8233\u82A7\u82CE\u82E7\u8301\u8331\u833F\u8387\u8457\u84EB\u854F\u85A5\u85F7\u85F8\u86B0\u86C0\u86DB\u876B\u880B\u8829\u883E\u88BE\u891A\u8A3B\u8A5D\u8A85\u8AF8\u8BDB\u8BF8\u8C6C\u8CAF\u8D2E\u8DD3\u8DD9\u8DE6\u8E85\u8EF4\u8FEC\u9010\u9017\u902B\u90BE\u924F\u9252\u9296\u92F3\u9444\u9483\u94E2\u94F8\u963B\u9664\u967C\u9714\u98F3\u99B5\u99D0\u99EF\u9A36\u9A7A\u9A7B\u9BA2\u9BFA\u9C41\u9D38\u9E00\u9E86\u9E88\u9F04",
  ha: "\u4E37\u5413\u5475\u54C8\u5964\u598E\u70BA\u736C\u867E\u86E4\u8766\u927F\u94EA",
  dan: "\u4E39\u4E3C\u4EB6\u4EBB\u4F14\u4F46\u5013\u50E4\u5103\u510B\u5184\u5189\u5210\u52EF\u5330\u5355\u5358\u5369\u547E\u550C\u5556\u5557\u557F\u55AE\u563E\u5649\u5661\u56AA\u575B\u58C7\u5989\u5A0A\u5A85\u5E0E\u5F39\u5F3E\u5F48\u5FF1\u601B\u60D4\u60EE\u6116\u619A\u61BA\u61BE\u628C\u62C5\u63B8\u64A2\u64A3\u64D4\u65E6\u67E6\u6A90\u6B3F\u6B9A\u6BAB\u6C2E\u6C8A\u6CF9\u6DE1\u6E5B\u6F6D\u6FB6\u6FB8\u6FB9\u71C0\u72DA\u73AC\u74ED\u7514\u758D\u75B8\u7605\u7649\u765A\u76BD\u7708\u77F3\u7803\u79AB\u7A9E\u7BAA\u7C1E\u7D1E\u7E75\u803C\u803D\u8043\u8078\u80C6\u8145\u81BB\u81BD\u840F\u86CB\u8711\u8712\u87FA\u8874\u891D\u894C\u895C\u8998\u89C7\u89DB\u8A11\u8A79\u8A95\u8B42\u8BDE\u8D09\u8D0D\u8D55\u8D61\u8E5B\u8EAD\u90F8\u9132\u9156\u9188\u972E\u9815\u9924\u994F\u99BE\u99F3\u9AE7\u9D20\u9ED5\u9EEE\u9EF5",
  wei: "\u4E3A\u4EB9\u4F1F\u4F2A\u4F4D\u502D\u5049\u504E\u507D\u50DE\u5130\u536B\u5371\u5383\u53DE\u5473\u54D9\u5529\u552F\u5582\u55A1\u55B4\u5672\u56D7\u56F4\u570D\u5729\u5824\u589B\u58DD\u59D4\u5A01\u5A13\u5A81\u5A99\u5AA6\u5BEA\u5C09\u5C3E\u5CBF\u5CD7\u5CDE\u5D23\u5D34\u5D54\u5D6C\u5DB6\u5DCB\u5DCD\u5E0F\u5E37\u5E43\u5EC6\u5FAB\u5FAE\u6051\u60DF\u6104\u6107\u6170\u61C0\u6364\u637C\u63CB\u63FB\u649D\u64B1\u6596\u6690\u6709\u672A\u673A\u6845\u68B6\u6932\u6933\u6972\u6B08\u6C87\u6CA9\u6D08\u6D27\u6D58\u6DA0\u6E28\u6E2D\u6E4B\u6E88\u6EA6\u6F4D\u6F59\u6F7F\u6FCA\u6FF0\u6FFB\u7022\u709C\u70BA\u70D3\u7140\u7152\u715F\u7168\u71A8\u71AD\u71F0\u7232\u729A\u72A9\u7317\u731A\u7325\u732C\u73AE\u741F\u744B\u748F\u74D7\u754F\u75CF\u75FF\u7650\u7653\u772D\u77B6\u784A\u7859\u78A8\u78C8\u78D1\u7ACB\u7DAD\u7DED\u7DEF\u7E05\u7EAC\u7EF4\u7F7B\u80C3\u8172\u8249\u829B\u829F\u82C7\u82FF\u831F\u8371\u837D\u83CB\u840E\u840F\u8466\u8468\u8473\u848D\u84F6\u851A\u853F\u8587\u85B3\u85EF\u8636\u8732\u8739\u873C\u875B\u875F\u87B1\u885B\u885E\u893D\u89A3\u89B9\u89F9\u89FD\u89FF\u8A74\u8AC9\u8B02\u8B86\u8B8F\u8BFF\u8C13\u8DA1\u8E12\u8E13\u8E97\u8E9B\u8ECE\u8F4A\u8FDD\u9036\u9055\u9057\u907A\u912C\u9180\u9317\u934F\u9361\u93CF\u95C8\u95F1\u9622\u9687\u9688\u9697\u96B9\u9728\u973A\u97CB\u97D1\u97D9\u97E1\u97E6\u97EA\u9820\u98B9\u9927\u9935\u9956\u9AA9\u9AAA\u9AAB\u9B4F\u9B87\u9BA0\u9BAA\u9C03\u9C04\u9C16\u9C94\u9CC2\u9CDA",
  jing: "\u4E3C\u4E95\u4EAC\u4EB0\u4EF1\u4FD3\u501E\u50B9\u5106\u512C\u5162\u51C0\u51C8\u522D\u5244\u52A4\u52B2\u52C1\u5753\u5755\u5759\u5883\u598C\u5A59\u5A5B\u5A67\u5B91\u5DE0\u5E5C\u5F2A\u5F33\u5F84\u5F91\u60CA\u61AC\u61BC\u64CF\u656C\u65CC\u65CD\u665F\u666F\u6676\u66BB\u66D4\u6871\u68B7\u6A78\u6AA0\u6B91\u6C0F\u6C6B\u6C6C\u6CFE\u6D44\u6D87\u6DE8\u6FEA\u701E\u70C3\u70F4\u71DD\u7304\u734D\u7377\u7484\u749F\u74A5\u75C9\u75D9\u775B\u79D4\u7A09\u7A7D\u7ADE\u7ADF\u7AE7\u7AEB\u7AF6\u7AF8\u7B90\u7C87\u7CB3\u7CBE\u7D4C\u7D93\u7ECF\u8059\u80BC\u80EB\u811B\u8148\u830E\u8346\u834A\u8396\u83C1\u845D\u873B\u87FC\u8AA9\u8B66\u8E01\u8FF3\u9015\u9192\u92DE\u93E1\u955C\u9631\u9649\u9658\u9751\u9752\u9753\u9756\u9758\u9759\u975A\u975C\u981A\u9834\u9838\u9888\u9895\u9A5A\u9BE8\u9CB8\u9D5B\u9D81\u9D84\u9E96\u9EA0\u9F31",
  li: "\u4E3D\u4EC2\u4F4D\u4F8B\u4FD0\u4FDA\u4FEA\u5088\u512E\u5137\u51D3\u5215\u5217\u5229\u5253\u527A\u5299\u529B\u52B1\u52F5\u5386\u5389\u5398\u53A4\u53AF\u53B2\u53D3\u53D5\u53FB\u540F\u5456\u54E9\u550E\u5533\u55B1\u569F\u56A6\u56C4\u56C7\u575C\u585B\u58E2\u5A0C\u5A33\u5A6F\u5AE0\u5B4B\u5B77\u5C74\u5CA6\u5CDB\u5CF2\u5DC1\u5EF2\u609D\u60A1\u60A7\u60B7\u6144\u623E\u6250\u625A\u6369\u642E\u64FD\u650A\u6526\u652D\u6584\u66A6\u66C6\u66DE\u6738\u674E\u67A5\u67C2\u6803\u680E\u6817\u681B\u6835\u68A8\u68B8\u68C3\u68D9\u6A06\u6AAA\u6AD4\u6ADF\u6AEA\u6B10\u6B1A\u6B74\u6B77\u6C02\u6CA5\u6CB4\u6CB5\u6CE3\u6D6C\u6D96\u6DDA\u6EA7\u6F13\u6FA7\u6FFC\u6FFF\u701D\u7051\u7055\u7204\u720F\u7281\u7282\u729B\u72A1\u72F8\u7301\u73D5\u73DE\u7406\u740D\u746E\u7483\u74C5\u74C8\u74D1\u74E5\u75A0\u75AC\u75E2\u7658\u7667\u76AA\u76E0\u76ED\u775D\u77D6\u7805\u782C\u783A\u783E\u784C\u78FF\u792A\u792B\u7930\u793C\u79AE\u79B2\u79BB\u79DD\u7A72\u7ACB\u7AF0\u7B20\u7B63\u7BE5\u7BF1\u7C6C\u7C92\u7C9A\u7C9D\u7CB4\u7CCE\u7CF2\u7D9F\u7E2D\u7E85\u7E9A\u7F21\u7F79\u7FEE\u8137\u8243\u82C8\u82D9\u8318\u8354\u8372\u8385\u8389\u83DE\u849A\u849E\u84E0\u853E\u85DC\u85F6\u863A\u86B8\u86CE\u86E0\u870A\u8727\u8755\u8777\u87CD\u87F8\u8807\u8821\u8823\u882B\u88CF\u88E1\u8935\u89FB\u8A48\u8B27\u8B88\u8C4A\u8C8D\u8D72\u8DDE\u8E92\u8F62\u8F63\u8F79\u9026\u908C\u9090\u90E6\u9148\u91A8\u91B4\u91C3\u91CC\u91D0\u925D\u9290\u92EB\u92F0\u9305\u9311\u9398\u93EB\u9457\u9460\u94C4\u9502\u9549\u96B6\u96B7\u96B8\u96E2\u96F3\u973E\u9742\u974B\u98AF\u98D2\u9A6A\u9A8A\u9B01\u9B32\u9B34\u9BC9\u9BCF\u9BEC\u9C67\u9C71\u9C73\u9C7A\u9CA1\u9CA4\u9CE2\u9CE8\u9D17\u9D79\u9DC5\u9E1D\u9E42\u9E97\u9E9C\u9ECE\u9EE7",
  pie: "\u4E3F\u5AF3\u6486\u6487\u66BC\u6C15\u6F4E\u77A5\u80BA\u82E4\u853D\u8995\u9405",
  ai: "\u4E42\u4E43\u4F0C\u50FE\u5117\u51D2\u5240\u5274\u53C6\u5443\u5446\u545D\u54C0\u54CE\u5509\u5540\u55CC\u55F3\u560A\u566B\u566F\u57C3\u5828\u5867\u58D2\u5947\u5A2D\u5A3E\u5AD2\u5B21\u5D16\u5D66\u611B\u61D3\u61DD\u6328\u6371\u6571\u6573\u6639\u66A7\u66D6\u6B2C\u6B38\u6BD0\u6EB0\u6EBE\u6FED\u70E0\u7125\u7231\u7477\u74A6\u764C\u7691\u769A\u76A7\u77B9\u77EE\u7839\u784B\u788D\u78D1\u7919\u7D60\u827E\u853C\u8586\u85F9\u8AF0\u8B6A\u8B7A\u8CF9\u8EB7\u91B7\u9384\u9440\u953F\u95A1\u9602\u9628\u9638\u9691\u9698\u972D\u9744\u9749\u9932\u99A4\u9A03\u9BE6\u9C6B\u9D31",
  nai: "\u4E43\u4F74\u5037\u54EA\u5948\u5976\u59B3\u5B2D\u5B7B\u5EFC\u639C\u6431\u6468\u67F0\u6C16\u6E3F\u718B\u7593\u800F\u8010\u80FD\u8149\u827F\u8418\u879A\u8926\u8FFA\u91E2\u933C\u9F10",
  wu: "\u4E44\u4E4C\u4E94\u4EA1\u4EBE\u4EE1\u4EF5\u4F06\u4F0D\u4F89\u4FAE\u4FC9\u5035\u511B\u5140\u5166\u526D\u52A1\u52D9\u52FF\u5348\u5433\u5434\u543E\u5449\u545C\u5514\u554E\u5594\u55DA\u5641\u572C\u575E\u57AD\u57E1\u5825\u5862\u58B2\u5966\u59A9\u5A12\u5A2A\u5A2C\u5A7A\u5AF5\u5BE4\u5C4B\u5C7C\u5C89\u5CFF\u5D4D\u5D68\u5DEB\u5E60\u5E91\u5EE1\u5F19\u5FA1\u5FE2\u5FE4\u6003\u6076\u609E\u609F\u60AE\u60E1\u61AE\u620A\u625C\u625D\u6264\u6342\u63FE\u6440\u6544\u65BC\u65C4\u65E0\u65FF\u6664\u6745\u6747\u674C\u67EE\u68A7\u6A46\u6B4D\u6B66\u6BCB\u6BCD\u6C59\u6C5A\u6C61\u6C95\u6D16\u6D3F\u6D6F\u6E1E\u6E25\u6EA9\u6F55\u70CF\u7110\u7121\u7183\u7193\u7269\u727E\u739D\u73F7\u73F8\u7466\u7491\u7512\u75E6\u7780\u77B4\u77F9\u7894\u7966\u7991\u7A8F\u7AB9\u7B0F\u7BBC\u7C85\u81B4\u821E\u829C\u82B4\u8323\u8381\u83AB\u856A\u8601\u8708\u8765\u8790\u87F1\u8A88\u8AA3\u8AA4\u8B55\u8BEC\u8BEF\u8DB6\u8E8C\u8FD5\u901C\u90AC\u90DA\u9114\u91EB\u92C8\u92D8\u92D9\u933B\u93A2\u94A8\u94FB\u9622\u965A\u9696\u96FA\u96FE\u971A\u9727\u973F\u9770\u9A16\u9A9B\u9BC3\u9C1E\u9D2E\u9D50\u9D61\u9DA9\u9DE1\u9E40\u9E49\u9E5C\u9F2F\u9F3F\u9F40\u9F6C\u9F89",
  tuo: "\u4E47\u4ED6\u4EDB\u4F57\u4F82\u4FBB\u5483\u553E\u5574\u563D\u5768\u5836\u59A5\u5AA0\u5AF7\u5B83\u5CAE\u5EB9\u5F75\u60F0\u6258\u6261\u62D3\u62D5\u62D6\u6329\u635D\u64B1\u6754\u675D\u67C1\u67DD\u68C1\u692D\u6955\u69D6\u6A50\u6A62\u6BE4\u6BFB\u6C51\u6C60\u6CB0\u6CB1\u6DB6\u7260\u72CF\u7823\u7824\u78A2\u78DA\u7A05\u7A0E\u7BA8\u7C5C\u7D3D\u812B\u8131\u8203\u8204\u8235\u838C\u841A\u8600\u86C7\u87FA\u8889\u8898\u88A5\u8A11\u8A17\u8A51\u8AAA\u8AAC\u8BAC\u8BF4\u8DC5\u8DCE\u8E3B\u8EC3\u8FC6\u8FE4\u8FF1\u9161\u9248\u92D6\u94CA\u9624\u9640\u9641\u968B\u98E5\u9966\u99B1\u99B2\u99C4\u99DD\u99DE\u9A28\u9A52\u9A5D\u9A6E\u9A7C\u9B44\u9B60\u9B80\u9C16\u9C53\u9D15\u9D4E\u9E35\u9F09\u9F0D\u9F27",
  zhe: "\u4E47\u4EDB\u5387\u54F2\u5560\u5586\u55EB\u55FB\u5600\u569E\u56C1\u57D1\u5835\u5AEC\u5EB6\u608A\u6179\u6278\u6298\u6442\u6444\u647A\u651D\u65A5\u6662\u6663\u6754\u67D8\u68CF\u6A00\u6A1C\u6B7D\u6D59\u6DDB\u6F6A\u7740\u77FA\u7813\u78D4\u7C77\u7C8D\u8005\u8037\u8042\u8051\u8076\u8457\u8517\u8674\u86F0\u8707\u87C4\u87C5\u88A9\u891A\u8936\u8975\u8A5F\u8B2B\u8B36\u8B3A\u8B81\u8B8B\u8C2A\u8D6D\u8EFC\u8F12\u8F19\u8F4D\u8F76\u8F84\u8F99\u8FD9\u9019\u9069\u906E\u92B8\u937A\u9517\u966C\u99B2\u9A5D\u9BBF\u9DD3\u9DD9\u9E37\u9E67",
  ma: "\u4E48\u4E87\u508C\u5417\u5450\u551B\u55CE\u561B\u561C\u5988\u5ABD\u5AF2\u5B24\u5B37\u5B56\u5C1B\u62B9\u6469\u6769\u69AA\u6EA4\u7298\u72B8\u7341\u739B\u746A\u75F2\u7770\u7801\u78BC\u7923\u7943\u79A1\u7F75\u84E6\u8534\u8682\u879E\u87C6\u87C7\u8C89\u8C8A\u9064\u93B7\u9581\u9761\u99AC\u99E1\u9A40\u9A6C\u9A82\u9B15\u9C22\u9DCC\u9EBB\u9EBC\u9EBD",
  me: "\u4E48\u5692\u569C\u56B0\u5B6D\u5E85\u6FF9\u7666\u9EBC\u9EBD",
  yao: "\u4E48\u4E50\u4EF8\u4FA5\u5004\u5060\u509C\u50E5\u530B\u5406\u54AC\u556E\u5593\u55C2\u565B\u5699\u579A\u582F\u592D\u5996\u59DA\u5A06\u5A79\u5AB1\u5B08\u5B8E\u5C27\u5C2D\u5C86\u5CE3\u5D3E\u5DA2\u5DA4\u5E7A\u5E7C\u5FAD\u5FBA\u602E\u604C\u612E\u62AD\u63FA\u6416\u6447\u647F\u64BD\u669A\u66DC\u66E3\u6773\u6796\u67FC\u6946\u699A\u69A3\u6A02\u6B80\u6BBD\u6D2E\u6DEB\u6E94\u6EDB\u7039\u70C4\u70D1\u718E\u71FF\u723B\u72D5\u7336\u733A\u735F\u7385\u73E7\u7464\u7476\u7531\u759F\u7711\u77C5\u78D8\u7945\u7A7E\u7A85\u7A88\u7A91\u7A94\u7AAF\u7AB0\u7B44\u7BB9\u7D04\u7E47\u7E85\u7EA6\u8000\u80B4\u8170\u8200\u825E\u82ED\u835B\u836F\u846F\u847D\u84D4\u8558\u85AC\u85E5\u8628\u888E\u8981\u899E\u8A1E\u8A4F\u8B20\u8B21\u8B91\u8C23\u8DAF\u8E30\u8EFA\u8F7A\u9059\u9065\u9080\u929A\u9390\u9470\u94A5\u94EB\u95C4\u9676\u9683\u977F\u9864\u98BB\u98D6\u9906\u991A\u9A15\u9A41\u9A9C\u9C29\u9CD0\u9D01\u9D22\u9DC2\u9DD5\u9E5E\u9F3C\u9F69",
  xi: "\u4E49\u4E60\u4FC2\u4FD9\u5092\u50D6\u516E\u51DE\u5338\u534C\u5365\u537B\u5380\u541A\u5438\u546C\u5470\u54A5\u54A6\u54AD\u550F\u553D\u559C\u563B\u564F\u568A\u56B1\u5848\u58D0\u5915\u594A\u595A\u5A2D\u5A90\u5AB3\u5B06\u5B09\u5BA9\u5C43\u5C4E\u5C56\u5C63\u5C6D\u5D60\u5D8D\u5DB2\u5DC2\u5DC7\u5E0C\u5E2D\u5ED7\u5F86\u5F99\u5FAF\u5FD4\u5FDA\u5FE5\u602C\u6038\u6044\u606F\u6089\u6095\u60C1\u60DC\u613E\u6140\u6198\u6199\u620F\u622F\u6231\u6232\u6271\u6278\u6461\u6495\u64CA\u65E2\u6614\u665E\u6670\u6673\u66BF\u66E6\u676B\u6790\u67B2\u6816\u6878\u68F2\u691E\u693A\u69BD\u69E2\u6A28\u6A40\u6A72\u6A84\u6B2A\u6B2F\u6B37\u6B56\u6B59\u6C23\u6C25\u6C50\u6D12\u6D17\u6D60\u6DC5\u6E13\u6E7F\u6EAA\u6ECA\u6F07\u6F1D\u6F5D\u6F5F\u6F99\u6FD5\u7051\u70EF\u7101\u7108\u711F\u712C\u7155\u7182\u7184\u7188\u7199\u71B9\u71BA\u71BB\u71CD\u71E8\u7214\u727A\u7280\u7294\u72A0\u72A7\u72F6\u730E\u7361\u737B\u73BA\u740B\u74BD\u74D5\u761C\u7699\u76FB\u774E\u77A6\u77D6\u77FD\u7852\u788F\u78F6\u7902\u798A\u79A7\u7A00\u7A27\u7A78\u7AB8\u7C9E\u7CE6\u7CFB\u7D30\u7D8C\u7DC6\u7E18\u7E30\u7E65\u7E6B\u7E9A\u7EC6\u7EE4\u7F9B\u7FA9\u7FB2\u7FD2\u7FD5\u7FD6\u80B8\u80B9\u80C1\u8105\u8107\u810B\u814A\u819D\u8203\u8204\u823E\u831C\u8383\u8394\u83E5\u8448\u8478\u84A0\u84B5\u84C6\u84F0\u8507\u856E\u8582\u8669\u8724\u8725\u8734\u8777\u8785\u8787\u87CB\u87E2\u8835\u884B\u88AD\u88FC\u8936\u8972\u897F\u8980\u89A1\u89A4\u89CB\u89F9\u89FD\u89FF\u8A22\u8A51\u8A92\u8AF0\u8B11\u8B1A\u8B35\u8B46\u8BF6\u8C25\u8C3F\u8C40\u8C68\u8C6F\u8C95\u8D65\u8D69\u8D87\u8D98\u8E4A\u8E5D\u8EA7\u905F\u90C4\u90CB\u90D7\u90E4\u910E\u9145\u91AF\u91D0\u91F3\u91F8\u9212\u9222\u9268\u9269\u9291\u932B\u932F\u93B4\u93ED\u9474\u9491\u94E3\u9519\u9521\u95DF\u960B\u9699\u969F\u96B0\u96B5\u96DF\u96ED\u972B\u973C\u98C1\u990F\u9919\u993C\u9969\u997B\u9A31\u9A3D\u9A68\u9B29\u9BD1\u9C13\u9C3C\u9C5A\u9CC3\u9CDB\u9D57\u9E02\u9ED6\u9F30\u9F33\u9F37",
  zhi: "\u4E4B\u4E7F\u4E8A\u4F0E\u4F84\u4FE7\u5001\u5024\u503C\u506B\u5082\u5128\u51EA\u5236\u526C\u5295\u52A7\u536E\u5394\u53EA\u5431\u54A5\u54AB\u5694\u5740\u5741\u5767\u5781\u57C3\u57F4\u57F7\u5886\u588C\u5902\u591A\u591B\u59B7\u59EA\u5A21\u5A9E\u5B02\u5B9E\u5BD8\u5BE6\u5CD9\u5D3B\u5DF5\u5E0B\u5E19\u5E1C\u5E5F\u5EA2\u5EA4\u5ECC\u5F58\u5F8F\u5F94\u5F9D\u5FB4\u5FB5\u5FD7\u5FEE\u6043\u6049\u6179\u6184\u61E5\u61EB\u6220\u6267\u627A\u627B\u62A7\u62B5\u62D3\u62DE\u6303\u6307\u631A\u6357\u63B7\u6418\u6431\u6455\u6468\u646D\u646F\u64F2\u64F3\u64FF\u652F\u65A6\u65D8\u65E8\u6635\u664A\u667A\u675D\u676B\u679D\u67B3\u67E3\u6800\u6809\u683A\u683D\u684E\u6894\u68BD\u690D\u6925\u6956\u69B0\u69DC\u6A00\u6A32\u6A34\u6ACD\u6ADB\u6B62\u6B6D\u6B96\u6C0F\u6C10\u6C41\u6C65\u6C66\u6C9A\u6CBB\u6CDC\u6D14\u6D37\u6DFD\u6ECD\u6EDE\u6EEF\u6F10\u6F4C\u6F6A\u7004\u7099\u71AB\u7286\u72FE\u7318\u74C6\u74E1\u7564\u7590\u75B7\u75BB\u75D4\u75E3\u7608\u76F4\u7730\u77E5\u780B\u7929\u793A\u7941\u7947\u7949\u7951\u7957\u796C\u7983\u7994\u79B5\u79C7\u79D3\u79D6\u79E9\u79EA\u79EF\u79F2\u79F7\u7A19\u7A1A\u7A3A\u7A49\u7A92\u7B6B\u7D19\u7D29\u7D77\u7D7A\u7D95\u7DFB\u7E36\u7E54\u7EB8\u7EC7\u7F6E\u7FD0\u8006\u8040\u804C\u8077\u80A2\u80D1\u80DD\u80F5\u8102\u81A3\u81B1\u81F3\u81F4\u81F7\u81F8\u8296\u829D\u82B7\u830B\u831D\u83ED\u8599\u85E2\u8635\u8652\u8694\u86ED\u8718\u87B2\u87D9\u8879\u887C\u889F\u88A0\u88FD\u8967\u899F\u89D7\u89DD\u89EF\u89F6\u8A28\u8A8C\u8B22\u8B58\u8BC6\u8C51\u8C52\u8C78\u8CAD\u8CEA\u8D04\u8D28\u8D3D\u8DBE\u8DD6\u8DF1\u8E2C\u8E2F\u8E36\u8E5B\u8E60\u8E62\u8E91\u8E93\u8EC4\u8EF9\u8EFD\u8F0A\u8F75\u8F7E\u8FDF\u8FE3\u905F\u9072\u90C5\u90E6\u9148\u916F\u91DE\u9244\u928D\u92B4\u92D5\u9455\u94C1\u94DA\u9527\u9624\u962F\u9641\u965F\u96B2\u96BB\u96C9\u99B6\u99BD\u99E4\u9A2D\u9A3A\u9A47\u9A98\u9BEF\u9CE9\u9CF7\u9D19\u9D32\u9DA8\u9DD9\u9E20\u9E37\u9EF9\u9F05",
  zha: "\u4E4D\u505E\u5067\u518A\u518C\u5273\u5284\u538F\u5412\u548B\u54A4\u54C6\u54F3\u558B\u55A5\u55B3\u56C3\u5953\u5BB1\u600D\u624E\u6260\u62AF\u62C3\u6313\u633F\u63D2\u63F7\u63F8\u6429\u643E\u6463\u64D6\u672D\u67DE\u67E4\u67E5\u67F5\u6805\u6942\u69A8\u6A1D\u6E23\u6E2B\u6EA0\u6F73\u7079\u70B8\u7160\u7250\u7339\u7534\u75C4\u76B6\u76BB\u7728\u781F\u7B2E\u7B91\u7B9A\u7D25\u7D2E\u802B\u81AA\u82F2\u82F4\u8516\u854F\u85F8\u86B1\u86BB\u8721\u89F0\u8A50\u8ACE\u8B2F\u8B47\u8B57\u8BC8\u8E37\u8E45\u8ECB\u8F67\u8FCA\u91A1\u9358\u94E1\u9598\u95F8\u9705\u97A2\u9987\u9B93\u9BBA\u9C08\u9C8A\u9C9D\u9CBD\u9F44\u9F47\u9F5F\u9F70\u9F83",
  zuo: "\u4E4D\u4F50\u4F5C\u4FB3\u505A\u51FF\u5497\u5511\u562C\u5750\u5C9D\u5C9E\u5DE6\u5EA7\u600D\u632B\u637D\u64AE\u6628\u67DE\u67EE\u690A\u7422\u781F\u795A\u79E8\u7A13\u7B2E\u7B70\u7CF3\u7E53\u80D9\u82F2\u838B\u8443\u8444\u84D9\u888F\u8ACE\u9162\u918B\u923C\u947F\u961D\u963C\u98F5",
  hu: "\u4E4E\u4E55\u4E92\u4FFF\u51B1\u51B4\u5322\u532B\u547C\u548C\u552C\u553F\u5596\u55C0\u55C3\u5611\u561D\u569B\u56EB\u5780\u58F6\u58F7\u58FA\u59F1\u5A5F\u5AA9\u5AED\u5AEE\u5BE3\u5CB5\u5E0D\u5E60\u5F16\u5F27\u5FFD\u6018\u6019\u6057\u60DA\u620F\u622F\u6231\u6232\u6236\u6237\u6238\u623D\u6248\u6287\u62A4\u6430\u6462\u64ED\u659B\u6608\u6612\u66F6\u6791\u6838\u695B\u695C\u69F2\u69F4\u6B51\u6BBB\u6C69\u6C7B\u6C8D\u6CAA\u6CD8\u6D3F\u6D52\u6DC8\u6DF2\u6DF4\u6E56\u6EEC\u6EF8\u6EF9\u6FE9\u702B\u70C0\u7100\u7173\u71A9\u72D0\u7322\u7425\u745A\u74E0\u74E1\u74F3\u7910\u795C\u7A6B\u7B0F\u7B8E\u7BB6\u7C04\u7C90\u7CCA\u7D57\u7D94\u7E0E\u7E0F\u7E20\u7FBD\u80CD\u80E1\u81B4\u8217\u8290\u8294\u82A6\u82B4\u82E6\u82F8\u8400\u846B\u851B\u8530\u864D\u864E\u8656\u865D\u8774\u879C\u885A\u89F3\u89F7\u8A31\u8B3C\u8B77\u8BB8\u8C70\u8EE4\u8F77\u9120\u9190\u9237\u92D8\u933F\u9359\u9378\u94B4\u96BA\u96C7\u96D0\u96FD\u97C4\u9800\u9836\u992C\u9B0D\u9B71\u9BF1\u9C17\u9C6F\u9CE0\u9CF8\u9D29\u9D60\u9D98\u9DA6\u9DAE\u9DBB\u9E0C\u9E44\u9E55\u9E58\u9E71",
  fa: "\u4E4F\u4F10\u4F71\u50A0\u53D1\u57A1\u59C2\u5EE2\u5F42\u62D4\u62E8\u64A5\u6830\u6A43\u6C4E\u6CB7\u6CD5\u6CDB\u704B\u73D0\u743A\u75BA\u767A\u767C\u7782\u781D\u7B29\u7B4F\u7F5A\u7F70\u7F78\u8337\u855F\u85C5\u8CB6\u8D2C\u9197\u91B1\u9345\u95A5\u9600\u9AEA\u9AEE",
  le: "\u4E50\u4E86\u4EC2\u52D2\u53FB\u561E\u5FC7\u6250\u697D\u6A02\u6C3B\u6CD0\u725E\u738F\u7833\u7AFB\u7C15\u808B\u827B\u961E\u97F7\u990E\u9979\u9C33\u9CD3",
  luo: "\u4E50\u502E\u5138\u513D\u5246\u54AF\u5570\u56C9\u5CC8\u633C\u634B\u6370\u645E\u650E\u651E\u652D\u66EA\u679C\u683C\u6924\u6A02\u6A50\u6ADF\u6B0F\u6B19\u6CFA\u6D1B\u6F2F\u6FFC\u70C1\u70D9\u720D\u7296\u7313\u7321\u7380\u73DE\u7630\u7673\u76AA\u7822\u784C\u7866\u788C\u792B\u7B3F\u7BA9\u7C6E\u7D61\u7E99\u7EDC\u7F57\u7F85\u8136\u8161\u81DD\u8316\u8366\u841D\u843D\u84CF\u863F\u86D2\u873E\u8778\u87BA\u8803\u8821\u88BC\u88F8\u89B6\u89BC\u8A7B\u8DDE\u8DEF\u8E92\u8EB6\u903B\u908F\u927B\u93AF\u93CD\u947C\u94EC\u9523\u9559\u96D2\u9831\u9960\u99F1\u9A3E\u9A58\u9A86\u9AA1\u9BA5\u9C73\u9D45\u9E01",
  yue: "\u4E50\u5216\u54D5\u54FE\u5666\u56DD\u5757\u5981\u599C\u5B33\u5C84\u5CB3\u5DBD\u5F5F\u5F60\u6071\u6085\u60A6\u6209\u625A\u6288\u6373\u64FD\u66F0\u66F1\u6708\u6782\u680E\u6A3E\u6ADF\u6C4B\u7039\u70C1\u7106\u720D\u721A\u73A5\u77C6\u77F1\u793F\u79B4\u7BB9\u7BD7\u7C46\u7C65\u7C70\u7CA4\u7CB5\u7D04\u7EA6\u81D2\u836F\u8625\u868E\u868F\u86FB\u8715\u8816\u8AAA\u8AAC\u8BF4\u8D8A\u8DAF\u8DC0\u8DC3\u8DDE\u8E8D\u8E92\u8ECF\u9205\u925E\u92B3\u92ED\u9460\u94A5\u94BA\u94C4\u9510\u95B1\u95B2\u9605\u9AFA\u9E11\u9E19\u9EE6\u9FA0\u9FA5",
  pan: "\u4E51\u4F34\u51B8\u5224\u534A\u535E\u53DB\u5762\u59CD\u59D7\u5ABB\u5BA1\u5BB7\u5BE9\u5E4B\u5F01\u5F66\u6273\u62CC\u62DA\u642B\u6500\u67C8\u69C3\u6C9C\u6CEE\u6D00\u6E74\u6EBF\u6F58\u700A\u700B\u708D\u723F\u7247\u7249\u7253\u7554\u7568\u756A\u76A4\u76D8\u76E4\u76FB\u76FC\u7705\u772B\u7886\u78D0\u78FB\u7C53\u7E0F\u7E41\u80D6\u81B0\u822C\u84B0\u878C\u87E0\u88A2\u8929\u897B\u8A4A\u8DD8\u8E2B\u8E52\u8E63\u9131\u92EC\u939C\u947B\u95C6\u97B6\u9816\u9D65",
  yin: "\u4E51\u4E5A\u4F12\u4F17\u4F8C\u50BF\u5198\u51D0\u5370\u541F\u542C\u5432\u552B\u5591\u5656\u567E\u569A\u56D9\u56E0\u5701\u573B\u5794\u57A0\u57A6\u57BD\u5819\u5837\u58F9\u5924\u59FB\u5A63\u5A6C\u5BC5\u5C39\u5CFE\u5D1F\u5D2F\u5DBE\u5E01\u5ED5\u5F15\u6114\u6147\u616D\u6196\u6197\u61DA\u65A6\u6704\u6836\u6880\u6A83\u6AAD\u6ABC\u6AFD\u6B2D\u6B3D\u6B45\u6BA5\u6BB7\u6C24\u6C82\u6CFF\u6D07\u6D15\u6D54\u6DEB\u6DFE\u6E5A\u6EB5\u6EDB\u6F6D\u6F6F\u6FE5\u6FE6\u70CE\u70DF\u72BE\u72FA\u730C\u73AA\u73E2\u748C\u7616\u763E\u764A\u766E\u784D\u7892\u78E4\u798B\u79F5\u7AA8\u7B43\u7C8C\u7D6A\u7DF8\u7E2F\u80E4\u82A9\u82C2\u831A\u8335\u836B\u8376\u8491\u8529\u852D\u861F\u8693\u87BE\u87EB\u88C0\u8A00\u8A14\u8A1A\u8A21\u8A22\u8ABE\u8AF2\u8B94\u8D7A\u8D9B\u8F11\u911E\u9153\u9173\u91FF\u920F\u921D\u9280\u92A6\u94DF\u94F6\u95C7\u95C9\u9625\u9634\u9670\u967B\u9682\u9690\u96A0\u96B1\u9712\u9720\u972A\u9777\u9787\u97F3\u97FE\u98EE\u98F2\u996E\u99F0\u9A83\u9BA3\u9DE3\u9F57\u9F66\u9F82\u9F88",
  ping: "\u4E52\u4FDC\u5017\u5196\u51AF\u51ED\u51F4\u546F\u576A\u5840\u5A09\u5A26\u5C4F\u5C5B\u5CBC\u5E21\u5E32\u5E48\u5E73\u617F\u6191\u67B0\u6A98\u6CD9\u6D34\u6D84\u6DDC\u7129\u73B6\u74F6\u7501\u7539\u782F\u7830\u7851\u79E4\u7AEE\u7BB3\u7C08\u7F3E\u8060\u80D3\u8275\u82F9\u8353\u840D\u84F1\u860B\u86B2\u86E2\u8A55\u8BC4\u8EFF\u8F27\u90F1\u927C\u9829\u99AE\u9B83\u9C86",
  pang: "\u4E53\u4EFF\u508D\u5390\u55D9\u5906\u5ACE\u5C28\u5E9E\u5F6D\u5F77\u5FAC\u623F\u65B9\u65C1\u6C78\u6C97\u6EC2\u7090\u78C5\u7BE3\u802A\u80A8\u80D6\u80EE\u8180\u8196\u823D\u84A1\u8783\u882D\u89AB\u8DBD\u9004\u9022\u938A\u9551\u96F1\u9736\u9AC8\u9C1F\u9CD1\u9F8E\u9F90",
  jiao: "\u4E54\u4EA4\u4F7C\u4FA5\u4FA8\u50D1\u50E5\u50EC\u510C\u527F\u528B\u52E6\u52EA\u5374\u537B\u53EB\u544C\u54AC\u55AC\u5602\u5604\u5610\u5626\u564D\u566D\u56BC\u5996\u59E3\u5A07\u5AF6\u5B0C\u5B13\u5B42\u5B66\u5B78\u5CE4\u5CE7\u5D7A\u5D95\u5DA0\u5DA3\u5FBC\u6054\u608E\u618D\u61A2\u61BF\u630D\u6322\u6341\u6405\u6477\u649F\u64B9\u652A\u654E\u6559\u6565\u656B\u657D\u657F\u65A0\u6648\u669E\u66D2\u6821\u6912\u6A14\u6A4B\u6AF5\u6D47\u6E6B\u6E6C\u6ED8\u6F16\u6F50\u6F86\u6FC0\u7042\u705A\u70C4\u7126\u7133\u714D\u71CB\u72E1\u7365\u73D3\u74AC\u768E\u76A6\u76AD\u77EB\u77EF\u7901\u7A3E\u7A5A\u7A8C\u7A96\u7B05\u7B4A\u7C25\u7CFE\u7D5E\u7E73\u7E90\u7E9F\u7EA0\u7EDE\u7F34\u80F6\u811A\u8173\u81A0\u81B2\u81EB\u827D\u8281\u832D\u832E\u83FD\u8429\u8549\u854E\u85E0\u8660\u86DF\u87DC\u87ED\u8990\u899A\u89BA\u89C9\u89D2\u8A06\u8B51\u8B65\u8CCB\u8DAB\u8DAD\u8DE4\u8E0B\u8E7B\u8F03\u8F47\u8F4E\u8F7F\u8F83\u90CA\u9117\u9175\u91AE\u91C2\u91E5\u9278\u940E\u94F0\u9903\u997A\u9A55\u9A84\u9AB9\u9BAB\u9C4E\u9C9B\u9D41\u9D64\u9DE6\u9DEE\u9E6A",
  qiao: "\u4E54\u4FA8\u4FCF\u5062\u50D1\u50FA\u524A\u5281\u52EA\u55AC\u55BF\u563A\u566D\u5859\u589D\u58A7\u58BD\u58F3\u5AF6\u5CE4\u5CED\u5D6A\u5DA0\u5DE7\u5E29\u5E53\u5E67\u6084\u6100\u6101\u6194\u62DB\u634E\u641E\u646E\u64AC\u64BD\u656B\u6572\u6821\u6865\u69D7\u6A35\u6A47\u6A4B\u6A7E\u6BBC\u6BC3\u6BF3\u6F50\u7126\u7133\u71C6\u71CB\u729E\u7644\u7744\u77A7\u7857\u785A\u785D\u78BB\u78DD\u78FD\u7904\u7909\u7A8D\u7AAF\u7AC5\u7BBE\u7E51\u7E70\u7F32\u7FD8\u7FF9\u832D\u834D\u835E\u83EC\u8549\u854E\u85EE\u87DC\u8A9A\u8B51\u8B59\u8BEE\u8C2F\u8DAB\u8DAC\u8DE4\u8DF7\u8E03\u8E0D\u8E7A\u8E7B\u8E88\u90FB\u9117\u9121\u9125\u91AE\u91E5\u929A\u936B\u936C\u93D2\u9408\u9430\u94EB\u9539\u9657\u96C0\u9792\u9798\u97A9\u97BD\u97D2\u981D\u9864\u9866\u9A55\u9A84\u9AB9\u9ADA\u9ADC",
  guai: "\u4E56\u53CF\u54D9\u5672\u592C\u602A\u6060\u62D0\u63B4\u67B4\u67FA\u7B89\u7F6B",
  jue: "\u4E59\u4E85\u5014\u5095\u51B3\u5214\u5282\u52EA\u5337\u53A5\u53CF\u5437\u5573\u55DF\u5658\u5671\u56BC\u57C6\u58C6\u592C\u599C\u5B52\u5B53\u5C48\u5C69\u5C6B\u5D1B\u5D2B\u5DA1\u5DA5\u5F21\u5F4F\u61A0\u61B0\u6204\u6289\u6317\u6354\u6398\u6485\u64A7\u652B\u658D\u67FD\u6877\u6A5B\u6A5C\u6B14\u6B2E\u6B8C\u6C12\u6C7A\u6CEC\u6F4F\u704D\u7106\u7133\u71A6\u71CB\u7211\u721D\u7234\u7235\u72C2\u7357\u7383\u73A6\u73A8\u73CF\u7474\u749A\u75A6\u761A\u77CD\u77DE\u77E1\u7804\u7A71\u7A74\u7D55\u7D76\u7E51\u7E58\u7EDD\u811A\u8173\u81C4\u82B5\u855D\u855E\u8568\u8673\u8697\u86D9\u87E8\u87E9\u883C\u88A6\u8990\u899A\u89BA\u89C9\u89D2\u89D6\u89FC\u8A23\u8AB3\u8B4E\u8BC0\u8C32\u8C9C\u8D7D\u8D89\u8DB9\u8E76\u8E77\u8E7B\u8EA9\u8F03\u8F83\u902B\u920C\u940D\u941D\u9481\u9562\u957C\u95CB\u95D5\u9615\u9619\u9792\u97BD\u99C3\u9A24\u9A99\u9AC9\u9C56\u9CDC\u9D02\u9D03\u9D8C\u9DE2\u9FA3",
  mie: "\u4E5C\u5400\u54A9\u54AA\u54F6\u5B6D\u5E6D\u61F1\u6423\u6AD7\u6EC5\u700E\u706D\u771C\u7BFE\u8511\u858E\u881B\u884A\u8995\u8C02\u9456\u9C74\u9D13",
  nie: "\u4E5C\u502A\u556E\u55A6\u55EB\u565B\u5699\u56C1\u56D0\u56D3\u56E1\u573C\u57DD\u5B7C\u5B7D\u5CCA\u5D52\u5D72\u5DAD\u5DD5\u5E07\u5E78\u60D7\u634F\u637B\u639C\u63D1\u6442\u6444\u6470\u651D\u655C\u67BF\u68FF\u69F7\u6AF1\u6D85\u75C6\u7BDE\u7C4B\u7CF1\u7CF5\u8042\u8076\u8080\u81EC\u81F2\u82F6\u83CD\u8616\u8825\u8939\u8AD7\u8B98\u8E02\u8E17\u8E19\u8E51\u8EA1\u9268\u9269\u92B8\u92F7\u931C\u93B3\u9448\u9477\u9480\u954A\u954D\u95D1\u9667\u9689\u9873\u989E\u9F67",
  xiang: "\u4E61\u4EA8\u4EAB\u4EAF\u4F6D\u50A2\u50CF\u5134\u52E8\u52F7\u53A2\u5411\u54CD\u554C\u554D\u56AE\u59E0\u5D91\u5DF7\u5EA0\u5EC2\u5FC0\u60F3\u6518\u6651\u66CF\u6819\u697F\u6A61\u6B00\u6D0B\u6E58\u6F52\u73E6\u74D6\u74E8\u76F8\u7965\u7BB1\u7D74\u7DD7\u7E95\u7F03\u7F3F\u7F8F\u7FD4\u81B7\u8221\u8297\u842B\u8459\u858C\u8618\u8683\u87D3\u8801\u8856\u8944\u8950\u8A73\u8BE6\u8C61\u8DED\u8FD2\u90F7\u9109\u910A\u9115\u9284\u9297\u92DE\u940C\u9472\u9576\u95A7\u95C0\u95C2\u964D\u97FF\u9805\u9879\u98E8\u9909\u9957\u995F\u9977\u9999\u9A64\u9AA7\u9B28\u9B9D\u9BD7\u9C4C\u9C5C\u9C76\u9C9E\u9D39\u9E98",
  dou: "\u4E67\u4FB8\u515C\u5160\u51DF\u5245\u543A\u5517\u6295\u6296\u6597\u65A3\u6793\u68AA\u6A77\u6BED\u6C00\u6D62\u6E0E\u7006\u75D8\u7797\u7AA6\u7AAC\u7AC7\u7BFC\u8130\u8254\u8373\u8538\u86AA\u8B80\u8BFB\u8C46\u9017\u903E\u90D6\u90FD\u9158\u9161\u9204\u92C0\u94AD\u9597\u95D8\u9627\u9661\u9916\u997E\u9B25\u9B26\u9B2A\u9B2C\u9B2D",
  nang: "\u4E6A\u513E\u54DD\u5665\u56A2\u56CA\u56D4\u5D00\u61B9\u6411\u64C3\u652E\u66E9\u6B1C\u6DB3\u703C\u7062\u8618\u8830\u8B68\u9962\u9995\u9B1E\u9F49",
  mai: "\u4E70\u4F45\u52A2\u52F1\u5356\u54AA\u54E9\u551B\u562A\u57CB\u58F2\u6D3E\u8108\u8109\u836C\u8552\u85B6\u8847\u8C8D\u8CB7\u8CE3\u8FC8\u9081\u9721\u9722\u973E\u9DF6\u9EA5\u9EA6",
  luan: "\u4E71\u4E7F\u4E82\u5375\u571D\u571E\u5971\u5A08\u5B4C\u5B6A\u5B7F\u5CE6\u5DD2\u631B\u6523\u66EB\u683E\u6B12\u6EE6\u7053\u7064\u7674\u7675\u7F89\u8114\u811F\u81E0\u81E1\u858D\u864A\u89B6\u91E0\u92AE\u947E\u9D49\u9E1E\u9E3E",
  ru: "\u4E73\u4F9E\u5044\u5112\u5165\u543A\u54AE\u55D5\u5685\u5973\u5982\u5AB7\u5B2C\u5B7A\u5DBF\u5E24\u6256\u6310\u64E9\u66D8\u6708\u6741\u6847\u6ABD\u6C5D\u6D33\u6E2A\u6EBD\u6FE1\u71F8\u7373\u7B4E\u7E1F\u7E7B\u7F1B\u8089\u8097\u81D1\u8339\u8498\u84D0\u8560\u85B7\u8815\u88BD\u8925\u8966\u8FB1\u8FBC\u909A\u910F\u91B9\u92A3\u9450\u94F7\u9700\u986C\u98A5\u9C6C\u9CF0\u9D11\u9D3D",
  xue: "\u4E74\u51B3\u524A\u52EA\u5437\u54EE\u5671\u56AF\u5779\u58C6\u5B66\u5B78\u5CA4\u5CC3\u5DA8\u6034\u6588\u6856\u688B\u6A30\u6C7A\u6CE7\u6CEC\u6CF6\u6EC8\u6FA9\u7025\u7094\u70D5\u71E2\u72D8\u75A6\u75B6\u77B2\u7A74\u81A4\u825D\u8313\u8486\u859B\u8840\u8895\u89F7\u8B14\u8C11\u8D90\u8E05\u8F4C\u8FA5\u96E4\u96EA\u9774\u97BE\u97E1\u9C48\u9CD5\u9DFD\u9E34",
  sha: "\u4E77\u503D\u50BB\u510D\u5239\u524E\u53A6\u5526\u553C\u5551\u5565\u55A2\u55C4\u564E\u5E39\u5EC8\u6331\u6332\u63A5\u6442\u6444\u644B\u651D\u6740\u6749\u699D\u6A27\u6B43\u6BBA\u6C99\u6FC8\u715E\u7300\u75E7\u7802\u7870\u7B91\u7C86\u7D17\u7E4C\u7E7A\u7EB1\u7FDC\u7FE3\u838E\u83E8\u8410\u8531\u88DF\u8CD2\u8CD6\u8D4A\u93A9\u94E9\u95AF\u95B7\u9705\u970E\u9B66\u9BCA\u9BCB\u9CA8",
  na: "\u4E78\u5167\u5185\u5357\u5436\u5450\u5476\u54EA\u55F1\u59A0\u5A1C\u6290\u62CF\u62FF\u6310\u637A\u6DF0\u79C5\u7B1A\u7B1D\u7BAC\u7BDB\u7D0D\u7D6E\u7EB3\u80AD\u8498\u84B3\u8872\u88A6\u8A24\u8A49\u8ABD\u8C7D\u8C80\u8E43\u8EDC\u90A3\u90CD\u9209\u93BF\u94A0\u954E\u96EB\u9779\u9B76",
  qian: "\u4E79\u4E7E\u4EDF\u4EF1\u4F23\u4F65\u4FD4\u5029\u5042\u5094\u50C9\u5119\u51C4\u51F5\u520B\u524D\u5343\u53B1\u550A\u55DB\u5731\u5732\u5811\u5879\u5898\u58CD\u5977\u5A5C\u5A8A\u5B31\u5B45\u5B6F\u5BE8\u5C8D\u5C92\u5D4C\u5D70\u5EDE\u5FCF\u5FF4\u6093\u60AD\u6106\u614A\u6173\u6266\u6272\u62D1\u62EA\u6333\u6394\u63AE\u63C3\u63F5\u6434\u647C\u6481\u648D\u6496\u6510\u6511\u6513\u6701\u6744\u6774\u67D1\u68C8\u6920\u69A9\u69CF\u69E7\u6A6C\u6AB6\u6ACF\u6B20\u6B26\u6B3F\u6B41\u6B49\u6B6C\u6C58\u6C67\u6D45\u6D94\u6DD2\u6DFA\u6E10\u6E54\u6F38\u6F5B\u6F5C\u6FF3\u6FFD\u704A\u7052\u70B6\u7154\u7191\u71C2\u71EB\u7275\u727D\u728D\u7698\u7ACF\u7B4B\u7B7E\u7B9D\u7B9E\u7BCF\u7BDF\u7C3D\u7C56\u7C64\u7C81\u7DAA\u7E34\u7E7E\u7EA4\u7F31\u7F9F\u7FA5\u7FAC\u80B7\u8125\u8171\u8181\u81E4\u824C\u828A\u82A1\u82C2\u831C\u833E\u8355\u8368\u8465\u8474\u84A8\u8533\u8541\u85D6\u8654\u8688\u8699\u8738\u8930\u8AD0\u8B19\u8B74\u8C26\u8C34\u8C38\u8D76\u8EE1\u8F24\u8FC1\u9063\u9077\u91FA\u9206\u9210\u9246\u9257\u925B\u92AD\u92DF\u930E\u9322\u937C\u9386\u93F2\u9431\u9453\u946F\u948E\u94A4\u94B1\u94B3\u94C5\u9513\u958B\u9621\u96C3\u976C\u97C6\u9845\u99AF\u9A1A\u9A1D\u9A2B\u9A9E\u9B1C\u9B1D\u9C1C\u9C2C\u9CD2\u9CFD\u9D6E\u9DBC\u9E50\u9E63\u9ED4\u9EDA\u9F66\u9F88",
  cui: "\u4E7C\u4F1C\u4F53\u5005\u50AC\u51D7\u5550\u555B\u5894\u5BDF\u5D12\u5D14\u5D2A\u5D89\u5FF0\u60B4\u615B\u6467\u690A\u69B1\u69EF\u6BF3\u6DEC\u6F3C\u6FE2\u7120\u71A3\u7355\u7417\u7480\u75A9\u7601\u76A0\u78EA\u7AC1\u7C8B\u7CB9\u7D23\u7DB7\u7E17\u7E40\u7F1E\u7FC6\u7FE0\u8103\u8106\u813A\u81AC\u81B5\u81CE\u8403\u8870\u894A\u8DA1\u8E24\u93D9\u96B9\u9847",
  gui: "\u4E80\u4F2A\u4F79\u507D\u5080\u50DE\u523D\u523F\u528A\u528C\u5326\u532D\u532E\u5331\u53AC\u54C7\u572D\u579D\u59AB\u59FD\u5A03\u5AAF\u5AE2\u5B00\u5B84\u5DA1\u5DB2\u5DC2\u5E30\u5E8B\u5EAA\u5EC6\u5F52\u6051\u646B\u648C\u6530\u6531\u660B\u6677\u6739\u67DC\u6842\u6845\u6867\u691D\u6922\u6982\u69E3\u69F6\u69FB\u69FC\u6A9C\u6AC3\u6AF0\u6AF7\u6B78\u6C3F\u6CA9\u6D3C\u6E40\u6E8E\u6F59\u7085\u7094\u73EA\u7470\u749D\u74CC\u7650\u7678\u7688\u7786\u77A1\u77B6\u7845\u784A\u7948\u796A\u79AC\u7A90\u7B40\u7C02\u7C0B\u7D75\u7E6A\u7ED8\u80FF\u81AD\u8325\u84D5\u862C\u86EB\u879D\u87E1\u88BF\u8958\u898F\u89C4\u89D6\u89E4\u8A6D\u8B09\u8BE1\u8CB4\u8D35\u8D7D\u8DB9\u8DEA\u8E76\u8ECC\u8F68\u90BD\u90CC\u95A8\u95FA\u9652\u9697\u96DF\u97BC\u9A29\u9B36\u9B39\u9B3C\u9BAD\u9C56\u9C65\u9C91\u9CDC\u9CFA\u9D02\u9D03\u9F9C\u9F9F",
  liao: "\u4E86\u4F6C\u50C7\u50DA\u52B3\u52DE\u5639\u5AFD\u5BE5\u5BEE\u5C1E\u5C25\u5C26\u5C6A\u5D7A\u5D9A\u5D9B\u5ED6\u5EEB\u6180\u61AD\u644E\u6482\u64A9\u6579\u6599\u66B8\u6A1B\u6F3B\u6F66\u7093\u71CE\u720E\u7212\u7360\u7499\u7597\u7642\u77AD\u7AB7\u7AC2\u7C1D\u7E5A\u7F2D\u804A\u818B\u81AB\u84FC\u87C9\u87DF\u87E7\u8C42\u8CFF\u8E58\u8E7D\u8F51\u8FBD\u907C\u911D\u91D5\u93D0\u9410\u948C\u9560\u9563\u957D\u98C2\u98C9\u9ACE\u9DEF\u9E69",
  zi: "\u4E8B\u4ED4\u5033\u5179\u525A\u5407\u5431\u5470\u5472\u54A8\u5559\u55DE\u59C9\u59CA\u59D5\u59FF\u5B50\u5B56\u5B57\u5B5C\u5B73\u5B76\u5D30\u5D6B\u6063\u674D\u6825\u6893\u6914\u699F\u6A74\u6B21\u6C9D\u6CDA\u6D13\u6DC4\u6E0D\u6E7D\u6ECB\u6ED3\u6F2C\u6FAC\u7278\u7386\u74BE\u753E\u75B5\u7725\u7726\u77F7\u798C\u79C4\u79ED\u79F6\u7A35\u7A67\u7B2B\u7C7D\u7CA2\u7D0E\u7D2B\u7DC7\u7F01\u8014\u80CF\u80D4\u80FE\u81EA\u8293\u8308\u830A\u8321\u8332\u83D1\u8458\u84FB\u858B\u8678\u89DC\u8A3E\u8A3F\u8AEE\u8C18\u8CB2\u8CC7\u8D40\u8D44\u8D7C\u8D91\u8DA6\u8DD0\u8F09\u8F1C\u8F3A\u8F7D\u8F8E\u9111\u91E8\u922D\u92C5\u9319\u937F\u93A1\u950C\u9531\u9543\u983E\u983F\u9AED\u9BD4\u9C26\u9CBB\u9D85\u9F12\u9F4A\u9F4D\u9F50\u9F5C\u9F87",
  er: "\u4E8C\u4F74\u4F95\u513F\u5150\u5152\u5235\u54A1\u5532\u5B2D\u5C12\u5C13\u5C14\u5CCF\u5F0D\u5F10\u6752\u682D\u682E\u6A32\u6BE6\u6D0F\u6D31\u6E2A\u6FE1\u723E\u73E5\u7CAB\u800C\u800F\u8033\u804F\u80F9\u81D1\u834B\u85BE\u8848\u88BB\u8A80\u8CAE\u8CB3\u8D30\u8DB0\u8F00\u8F2D\u8F5C\u8FE9\u9087\u927A\u94D2\u9651\u967E\u96AD\u990C\u9975\u99EC\u9AF5\u9AF6\u9B9E\u9C95\u9D2F\u9E38",
  chu: "\u4E8D\u4FF6\u5097\u50A8\u510A\u5132\u51E6\u51FA\u520D\u521D\u52A9\u53A8\u563C\u57F1\u5904\u5AB0\u5C6E\u5C80\u5E6E\u5EDA\u6035\u6149\u61B7\u61E8\u62C0\u6410\u6462\u6474\u654A\u65B6\u6775\u67E0\u6918\u695A\u696E\u698B\u69D2\u6A17\u6A71\u6A7B\u6A9A\u6AC9\u6AD6\u6AE5\u6B2A\u6B5C\u6D82\u6DD1\u6EC0\u6EC1\u6FCB\u70AA\u7293\u73FF\u7421\u74B4\u755C\u77D7\u7840\u786B\u790E\u795D\u7987\u7ACC\u7AD0\u7BE8\u7D40\u7D6E\u7ECC\u801D\u8021\u81C5\u82BB\u83C6\u8457\u84A2\u84AD\u84EB\u854F\u85F8\u8655\u870D\u87F5\u8829\u891A\u89D5\u89E6\u89F8\u8A58\u8AD4\u8AF8\u8BCE\u8BF8\u8C56\u8C60\u8C99\u8D8E\u8DE6\u8E00\u8E30\u8E70\u8E87\u8E95\u9110\u924F\u92E4\u9504\u95A6\u9664\u96CF\u96DB\u9DB5\u9E00\u9EDC\u9F63\u9F6D\u9F7C",
  xu: "\u4E8E\u4E90\u4F03\u4F11\u4F35\u4F59\u4F90\u4FC6\u5066\u5194\u52D6\u52D7\u5379\u53D9\u5401\u5455\u5474\u547C\u54BB\u55A3\u55C5\u5614\u5618\u563C\u5653\u5729\u57BF\u589F\u58FB\u59B6\u59C1\u59D0\u5A7F\u5AAD\u5B03\u5E41\u5E8F\u5F90\u6034\u6035\u6053\u6064\u60D0\u6149\u620C\u639D\u63DF\u654D\u6558\u65ED\u65EE\u65F4\u662B\u6647\u668A\u6702\u6710\u6829\u6948\u69D2\u6B28\u6B30\u6B3B\u6B54\u6B58\u6B88\u6C7F\u6C80\u6D2B\u6D52\u6DE2\u6E51\u6E86\u6EC0\u6EF8\u6F35\u6F4A\u70C5\u70FC\u7166\u735D\u73DD\u73EC\u755C\u759E\u76E2\u76E8\u76F1\u7717\u7781\u77B2\u77DE\u7809\u7A30\u7A38\u7AA2\u7C72\u7CC8\u7D6E\u7D9A\u7DD2\u7DD6\u7DF0\u7E03\u7E7B\u7E8C\u7EEA\u7EED\u805F\u80B7\u80CA\u80E5\u828B\u828C\u82A7\u84A3\u84C4\u84F2\u84FF\u8566\u85C7\u85DA\u8657\u865A\u865B\u86BC\u86E1\u8751\u898F\u89C4\u8A0F\u8A31\u8A39\u8A61\u8ADD\u8AFF\u8B23\u8B33\u8B43\u8BB4\u8BB8\u8BE9\u8C1E\u8CC9\u90AA\u9126\u9157\u9191\u9265\u928A\u9450\u96E9\u9700\u9808\u980A\u987B\u987C\u9998\u9A49\u9B1A\u9B46\u9B56\u9B63\u9C6E",
  kui: "\u4E8F\u5080\u5232\u532E\u5331\u537C\u559F\u55B9\u5633\u5914\u594E\u5ABF\u5B07\u5C2F\u5CBF\u5DCB\u5DD9\u609D\u6126\u6127\u6192\u6223\u63C6\u6646\u668C\u694F\u6951\u6A3B\u6AC6\u6B33\u6B78\u6BA8\u6E83\u6F70\u7143\u76D4\u777D\u77B6\u78C8\u7AA5\u7ABA\u7BD1\u7C23\u7C44\u7F3A\u8067\u8069\u806D\u8075\u80FF\u8143\u81AD\u81FE\u8475\u8489\u848D\u8562\u85C8\u862C\u8637\u8641\u8667\u8770\u89D6\u8B09\u8DEC\u8E29\u8E5E\u8EA8\u9035\u9108\u9368\u9377\u9400\u944E\u95CB\u95DA\u9615\u9697\u9803\u9804\u980D\u982F\u985D\u9877\u993D\u994B\u9988\u9997\u9A24\u9A99\u9B41",
  yun: "\u4E91\u4F1D\u508A\u5141\u52FB\u5300\u53DE\u544D\u5458\u54E1\u5597\u56E9\u5747\u593D\u596B\u5998\u5AAA\u5ABC\u5B55\u5C09\u5C39\u6028\u607D\u60F2\u6120\u612A\u614D\u628E\u62A3\u6600\u6655\u6688\u679F\u6985\u6A02\u6A52\u6B92\u6B9E\u6C32\u6C33\u6C84\u6D92\u6DA2\u6E29\u6EB3\u6F90\u7147\u7174\u717E\u7185\u7189\u71A8\u72C1\u73A7\u7547\u761F\u76FE\u7703\u78D2\u79D0\u7B4D\u7B60\u7B7C\u7BD4\u7D1C\u7DF7\u7DFC\u7E15\u7E1C\u7E67\u7EAD\u7F0A\u8018\u803A\u816A\u82B8\u82D1\u837A\u83C0\u8480\u8495\u84B7\u8553\u8570\u8574\u8580\u85F4\u860A\u8735\u8779\u891E\u8C9F\u8CF1\u8D07\u8D20\u8D5F\u8F3C\u8F40\u8F92\u8FD0\u904B\u90D3\u90E7\u9106\u9116\u915D\u9196\u919E\u9217\u92C6\u962D\u9668\u9695\u96F2\u9723\u97D7\u97DE\u97EB\u97F5\u97FB\u9835\u992B\u99A7\u99BB\u9F6B\u9F73",
  sui: "\u4E97\u5020\u54F8\u55FA\u57E3\u590A\u5A1E\u5B18\u5C3F\u5C81\u5D57\u633C\u65DE\u6A96\u6B72\u6B73\u6BF8\u6D7D\u6ED6\u6FBB\u6FC9\u7021\u716B\u71A3\u71E7\u74B2\u74CD\u772D\u775F\u7762\u7815\u788E\u795F\u79AD\u7A42\u7A57\u7A5F\u7C11\u7C8B\u7CB9\u7D8F\u7E17\u7E40\u7E50\u7E78\u7EE5\u7F1E\u813A\u81B8\u8295\u837D\u837E\u838E\u8470\u84D1\u867D\u895A\u8AB6\u8B62\u8C07\u8CE5\u9040\u9042\u9057\u907A\u9083\u93F8\u9406\u9429\u964F\u968A\u968B\u968F\u96A7\u96A8\u96D6\u9743\u9796\u97E2\u9AC4\u9AD3",
  gen: "\u4E98\u54CF\u63EF\u6404\u6839\u826E\u831B\u8DDF",
  xuan: "\u4E98\u5107\u5238\u5405\u54BA\u559B\u55A7\u5847\u5910\u59B6\u59F0\u5A97\u5AD9\u5B1B\u5BA3\u5F32\u6030\u60AC\u6103\u610B\u61C1\u61F8\u63C8\u63CE\u64B0\u64D0\u65CB\u660D\u6621\u6645\u6684\u6685\u6696\u66B6\u688B\u6965\u6966\u6A88\u6CEB\u6D35\u6D93\u6E32\u6F29\u6FB4\u70AB\u70DC\u714A\u7156\u72DF\u7367\u7384\u7386\u73B9\u7401\u7404\u7444\u7487\u74BF\u74CA\u75C3\u7663\u766C\u76E4\u7729\u7734\u777B\u77CE\u78B9\u79A4\u7BAE\u7D43\u7D62\u7D79\u7E23\u7E3C\u7E4F\u7EDA\u7EE2\u7FE7\u7FFE\u8431\u8432\u84D2\u8519\u857F\u85FC\u8610\u8701\u870E\u8756\u8809\u8852\u88A8\u8AE0\u8AFC\u8B5E\u8B82\u8C16\u8D19\u8ED2\u8F4B\u8F69\u9009\u9078\u9084\u9249\u92D7\u9379\u93C7\u9436\u94C9\u955F\u956E\u9799\u98B4\u994C\u9994\u99E8\u99FD\u9C1A",
  geng: "\u4E99\u4EA2\u522F\u54FD\u57C2\u5829\u5CFA\u5E9A\u6046\u632D\u63B6\u6685\u66F4\u6897\u6929\u6D6D\u713F\u754A\u786C\u7D59\u7D5A\u7D86\u7DEA\u7E06\u7EE0\u7FAE\u7FB9\u8015\u803F\u8384\u83EE\u8CE1\u8D53\u90A2\u90C9\u90E0\u9838\u9888\u9ABE\u9BC1\u9CA0\u9D8A\u9E52",
  e: "\u4E9A\u4E9C\u4E9E\u4F2A\u4F6E\u4F89\u4FC4\u5054\u507D\u50DE\u50EB\u530E\u533C\u537E\u5384\u542A\u5443\u545D\u54A2\u54B9\u54D1\u54E6\u5516\u5548\u554A\u5550\u555E\u5641\u5669\u56D0\u56EE\u57A9\u57AD\u57E1\u580A\u5828\u582E\u59B8\u59BF\u59F6\u5A25\u5A3E\u5A3F\u5A40\u5A95\u5C59\u5C75\u5C8B\u5CC9\u5CE8\u5CE9\u5D3F\u5EB5\u5EC5\u6076\u60AA\u60E1\u6115\u6239\u627C\u6415\u6424\u6439\u64DC\u66F7\u6799\u690F\u6AEE\u6B38\u6B5E\u6B79\u6B7A\u6D1D\u6D90\u6E42\u7380\u73F4\u7427\u75F7\u7692\u774B\u7808\u7810\u7828\u7835\u7846\u786A\u78C0\u7918\u80FA\u816D\u82CA\u83AA\u843C\u848D\u855A\u8601\u8685\u86FE\u8741\u89A8\u8A1B\u8A7B\u8A90\u8AE4\u8B4C\u8B8D\u8BB9\u8C14\u8C5F\u8EDB\u8EF6\u8F35\u8F6D\u8FD7\u904C\u904F\u907B\u9091\u9102\u920B\u92E8\u9354\u9469\u9507\u9537\u959C\u95BC\u960F\u9628\u9638\u963F\u9698\u981E\u981F\u984D\u984E\u989A\u989D\u9913\u9929\u997F\u9A00\u9B32\u9B64\u9B65\u9C10\u9C2A\u9C77\u9CC4\u9D33\u9D48\u9D5D\u9D5E\u9D9A\u9E45\u9E57\u9F43\u9F76\u9F7E",
  suo: "\u4E9B\u509E\u5506\u5522\u55CD\u55E6\u55E9\u5A11\u5AC5\u5C81\u5D57\u60E2\u6240\u6284\u6331\u6332\u644D\u669B\u686B\u68AD\u6B72\u6C99\u6E91\u6EB9\u727A\u72A7\u737B\u7410\u7411\u7463\u7485\u7743\u7C11\u7C14\u7D22\u7E12\u7E2E\u7F29\u7FA7\u838E\u838F\u8470\u84D1\u8736\u8870\u8928\u8D96\u9021\u9024\u9388\u938D\u9396\u93BB\u93C1\u9501\u970D\u9743\u9AFF\u9B66\u9BBB",
  xie: "\u4E9B\u4EB5\u4F33\u5055\u505E\u5070\u50C1\u5136\u5199\u51A9\u52A6\u52F0\u534F\u5354\u5368\u5378\u53F6\u5424\u550F\u5588\u55CB\u5667\u57A5\u586E\u5911\u593E\u594A\u5951\u5A0E\u5A9F\u5B48\u5BEB\u5C51\u5C53\u5C5C\u5C5F\u5C67\u5C6D\u5CEB\u5DB0\u5EE8\u5FA2\u604A\u6136\u6140\u61C8\u62F9\u631F\u633E\u63A5\u63F3\u641A\u643A\u647A\u64B7\u64D5\u64F7\u651C\u659C\u65EA\u66AC\u67BB\u6854\u68B0\u6954\u698D\u699D\u69AD\u69F7\u6B38\u6B47\u6B59\u6BBA\u6C41\u6CC4\u6CFB\u6D29\u6E2B\u6E5D\u6E83\u6E89\u6ECA\u6F70\u6FA5\u7009\u7023\u707A\u70A7\u70A8\u70F2\u710E\u7181\u71EE\u71F2\u7215\u7332\u736C\u744E\u772D\u78BF\u7944\u79BC\u7CCF\u7D32\u7D4F\u7D5C\u7D6C\u7D8A\u7DE4\u7DF3\u7E72\u7E88\u7EC1\u7F2C\u7F37\u7FD3\u8036\u80C1\u8105\u8107\u810B\u818E\u85A2\u85A4\u85DB\u874E\u8751\u8762\u87F9\u880D\u880F\u8840\u887A\u88CC\u8909\u893B\u896D\u89DF\u89E3\u89E7\u8ADC\u8AE7\u8B1D\u8B6E\u8B97\u8C0D\u8C10\u8C22\u8C6B\u8DEC\u8E9E\u8EA0\u8FE6\u9082\u90AA\u9371\u9437\u96B0\u978B\u97A2\u97B5\u97F0\u9801\u9821\u9875\u9889\u9AB1\u9B39\u9B7C\u9BAD\u9C91\u9F42\u9F58\u9F5B\u9F65\u9FA4",
  zhai: "\u4E9D\u4FA7\u503A\u5074\u50B5\u5387\u538F\u5547\u568C\u5908\u5B85\u5BE8\u5EA6\u62A7\u62E9\u635A\u6458\u64C7\u64FF\u658B\u658E\u67F4\u69B8\u6AA1\u7274\u75B5\u7635\u7826\u796D\u7A84\u7BA6\u7C00\u7C82\u7FDF\u81AA\u8CAC\u8D23\u9259\u99D8\u9A80\u9AB4\u9F4B",
  tou: "\u4EA0\u5077\u5078\u57F1\u5934\u59B5\u5A7E\u5AAE\u6109\u6295\u6568\u65A2\u6B95\u7D0F\u7D89\u7DF0\u7EE3\u8623\u8915\u8AED\u8AF3\u8C15\u8C19\u900F\u9017\u92C0\u936E\u94AD\u982D\u98F3\u9AB0\u9EC8",
  wen: "\u4EA0\u514D\u520E\u543B\u5445\u545A\u5461\u554F\u586D\u598F\u5A29\u5F63\u5FDE\u5FDF\u6120\u614D\u6286\u63FE\u6435\u6587\u6627\u6637\u687D\u6985\u69B2\u6B7E\u6B81\u6B9F\u6C76\u6E02\u6E29\u6EAB\u7086\u7174\u73F3\u7465\u74BA\u7612\u761F\u773C\u7807\u7A33\u7A4F\u7A69\u7B0F\u7D0A\u7D0B\u7D7B\u7DFC\u7E15\u7EB9\u7F0A\u805E\u80B3\u8115\u8117\u82A0\u83AC\u8570\u8574\u8580\u85F4\u860A\u8689\u868A\u87A1\u87C1\u891E\u8C71\u8F3C\u8F40\u8F92\u922B\u93BE\u95BA\u95BF\u95C5\u95E6\u95EE\u95FB\u960C\u9650\u96EF\u97DE\u97EB\u9850\u9942\u99BC\u9B70\u9C1B\u9C2E\u9CC1\u9CFC\u9D0D\u9D16\u9F24",
  wang: "\u4EA1\u4EBE\u4EFC\u5166\u5321\u5984\u5C22\u5C23\u5C29\u5C2A\u5C2B\u5F7A\u5F80\u5F83\u5F8D\u5FD8\u5FF9\u60D8\u6282\u65FA\u6680\u671A\u671B\u6722\u6789\u68E2\u6C6A\u7007\u7139\u738B\u741E\u7687\u76F3\u7DB2\u7F51\u7F54\u8292\u83A3\u83F5\u869F\u86E7\u8744\u8AB7\u8F1E\u8F8B\u8FCB\u8FEC\u9B4D",
  gang: "\u4EA2\u4F09\u5188\u51AE\u521A\u525B\u5808\u583D\u5C97\u5CA1\u5D17\u6205\u6206\u6207\u625B\u6297\u6386\u6760\u68E1\u69D3\u6E2F\u6E9D\u7135\u7268\u7285\u72BA\u7598\u77FC\u7899\u7B7B\u7DB1\u7EB2\u7F38\u7F41\u7F53\u7F61\u809B\u80AE\u91ED\u92FC\u93A0\u94A2\u962C\u980F\u9883",
  kang: "\u4EA2\u4F09\u531F\u56E5\u5751\u594B\u5ADD\u5D7B\u5EB7\u5FFC\u6177\u625B\u6297\u6443\u676D\u69FA\u6C86\u6F2E\u7095\u72BA\u780A\u7A45\u7C87\u7CE0\u8352\u8EBF\u909F\u9227\u93EE\u94AA\u958C\u95F6\u962C\u9AAF\u9C47",
  da: "\u4EA3\u5273\u5312\u547E\u5491\u54D2\u55D2\u5660\u57AF\u584C\u5854\u58B6\u5927\u59B2\u601B\u619A\u6253\u6428\u642D\u6498\u6A7D\u6BFC\u6C4F\u6C93\u6E9A\u709F\u71F5\u7557\u7563\u75B8\u7629\u7714\u77FA\u7B1A\u7B2A\u7B54\u7E68\u7F8D\u8037\u80C6\u8345\u8359\u8598\u87FD\u8921\u89F0\u8A5A\u8DF6\u8E82\u8FBE\u8FCF\u8FD6\u8FED\u9039\u9054\u9389\u939D\u943D\u977C\u9791\u97C3\u9F96\u9F98",
  hai: "\u4EA5\u4F85\u548D\u54B3\u54B4\u55D0\u55E8\u563F\u56A1\u5870\u5B69\u5BB3\u62F8\u6B2C\u6C26\u6D77\u70F8\u7332\u7D6F\u80F2\u8FD8\u9084\u90C2\u917C\u91A2\u95A1\u9602\u9826\u988F\u9900\u995A\u99ED\u99F4\u9A87\u9AB8",
  heng: "\u4EA8\u4F77\u54FC\u5548\u583C\u59EE\u6046\u6052\u6099\u6841\u6A2A\u6A6B\u6DA5\u70C6\u72DF\u73E9\u80FB\u811D\u8605\u884C\u8861\u8A07\u9445\u9D34\u9D46\u9E3B",
  peng: "\u4EA8\u5017\u508D\u50B0\u527B\u5309\u562D\u580B\u585C\u5873\u5E84\u5F38\u5F6D\u6026\u6072\u6189\u62A8\u6337\u6367\u63BD\u6412\u6453\u65C1\u670B\u6888\u68DA\u6916\u692A\u69F0\u6A25\u6CD9\u6DCE\u6DDC\u6EC2\u6F28\u6F30\u6F8E\u70F9\u71A2\u75ED\u768F\u7830\u7851\u787C\u78B0\u78DE\u7A1D\u7AFC\u7BE3\u7BF7\u7D63\u7E84\u80D3\u81A8\u8283\u82F9\u8353\u8391\u84EC\u87DA\u87DB\u8E2B\u8EEF\u8EFF\u8F23\u8F27\u8FF8\u9022\u902C\u930B\u945D\u959B\u97F8\u97FC\u99CD\u9A2F\u9AFC\u9B05\u9B14\u9D6C\u9E4F",
  mu: "\u4EA9\u4EEB\u51E9\u52DF\u5452\u563F\u5776\u5893\u58B2\u59C6\u59E5\u5A12\u5A7A\u5CD4\u5E55\u5E59\u6154\u6155\u62C7\u66AE\u6728\u6737\u6958\u6A21\u6A22\u6BCD\u6BE3\u6BEA\u6C01\u6C90\u7091\u725F\u7261\u7267\u7273\u72C7\u734F\u7546\u7552\u755D\u755E\u756E\u76EE\u7766\u782A\u7A46\u7E38\u7E46\u7F2A\u80DF\u8252\u82DC\u833B\u83AF\u843A\u869E\u8E07\u9267\u926C\u94BC\u96EE\u9702\u97AA",
  ting: "\u4EAD\u4FB1\u4FB9\u505C\u5385\u539B\u542C\u5722\u5960\u5975\u5A17\u5A77\u5D49\u5E81\u5E8D\u5EAD\u5EF0\u5EF3\u5EF7\u5FCA\u633A\u686F\u6883\u695F\u69B3\u6C40\u6D8F\u6E1F\u6FCE\u70C3\u70F4\u70F6\u73F5\u73FD\u753A\u7B73\u7D8E\u8013\u8064\u8074\u807C\u807D\u8121\u8247\u827C\u839B\u8476\u8713\u874F\u8A94\u8AEA\u9092\u92CC\u94E4\u95AE\u9706\u9793\u9832\u988B\u9F2E",
  qin: "\u4EB2\u4FB5\u512D\u52E4\u53AA\u5422\u5423\u551A\u55EA\u5659\u5745\u57C1\u57D0\u5807\u5890\u5A87\u5AC0\u5BD1\u5BDD\u5BE2\u5BF4\u5D5A\u5D94\u5D9C\u5E88\u5ED1\u5EDE\u5FF4\u616C\u61C3\u61C4\u6272\u628B\u6366\u63FF\u6407\u64B3\u64D2\u65B3\u6611\u68AB\u69FF\u6A6C\u6A8E\u6AEC\u6B3D\u6C81\u6D78\u6D81\u6E17\u6EB1\u6EF2\u6FBF\u6FC5\u7019\u73E1\u7434\u7439\u763D\u77DC\u77DD\u79BD\u79E6\u7B09\u7D85\u8039\u80A3\u81E4\u82A9\u82B9\u83E3\u83E6\u83F3\u84C1\u8572\u85FD\u8604\u8699\u8793\u87BC\u8804\u887E\u887F\u8983\u89AA\u8A9B\u8D7A\u8D7E\u9202\u920A\u9219\u92DF\u94A6\u9513\u96C2\u9772\u981C\u9849\u9869\u988C\u99F8\u9A8E\u9B35\u9BBC\u9CF9",
  qing: "\u4EB2\u5029\u503E\u50BE\u512C\u51CA\u5260\u52CD\u537F\u5568\u570A\u57E5\u58F0\u591D\u5A87\u5BC8\u5E86\u5EBC\u5ECE\u60C5\u6176\u6385\u64CE\u64CF\u6674\u6692\u68FE\u6A08\u6AA0\u6ABE\u6AE6\u6B91\u6BB8\u6C22\u6C2B\u6C30\u6D87\u6DF8\u6E05\u6E39\u6F00\u6FEA\u73AA\u7520\u7858\u785C\u7883\u78EC\u7B90\u7CBE\u7DAA\u7DAE\u7F44\u80DC\u82D8\u8394\u845D\u873B\u8ACB\u8B26\u8BF7\u8EFD\u8F15\u8F7B\u90EC\u944B\u9751\u9752\u9758\u9803\u9877\u9BD6\u9CAD\u9D84\u9EE5",
  bo: "\u4EB3\u4EE2\u4F2F\u4F5B\u4FBC\u50E0\u50F0\u525D\u5265\u52C3\u52DF\u535A\u535C\u54F1\u5575\u5643\u5697\u58C6\u59AD\u5B5B\u5B79\u5D93\u5E17\u5E1B\u5F74\u6015\u613D\u61EA\u62CD\u62D4\u62E8\u632C\u63B0\u640F\u64A5\u64AD\u64D7\u64D8\u66B4\u670D\u67CF\u67ED\u6872\u6991\u6A97\u6A98\u6B02\u6B95\u6CCA\u6CE2\u6CFC\u6D61\u6DFF\u6E24\u6E50\u6F51\u6F58\u7011\u717F\u7206\u7254\u72A6\u72BB\u72DB\u733C\u73BB\u74DD\u74DF\u756A\u7676\u767C\u767D\u767E\u76AA\u76CB\u7835\u7886\u78FB\u7921\u7934\u79E1\u7A5B\u7B29\u7B94\u7BA5\u7C19\u7C38\u7C3F\u7CEA\u7D34\u7F3D\u8091\u80C9\u8116\u818A\u822C\u8236\u824A\u8274\u82E9\u8300\u8337\u83E0\u83E9\u8467\u84B2\u8514\u8522\u8543\u8584\u859C\u8616\u8617\u86BE\u889A\u88AF\u88B9\u894E\u894F\u896E\u8A59\u8B52\u8C70\u8DB5\u8DD1\u8DDB\u8E23\u8E73\u90E3\u9238\u9251\u9262\u92CD\u939B\u946E\u94B5\u94B9\u94C2\u9548\u9911\u993A\u997D\u998E\u999B\u999E\u99C1\u99EE\u9A4B\u9A73\u9AC6\u9AC9\u9B44\u9B81\u9B8A\u9C4D\u9C85\u9C8C\u9D53\u9E41",
  zhan: "\u4EB6\u4F54\u5061\u5360\u5661\u5AF8\u5C55\u5D2D\u5D41\u5D83\u5D84\u5D98\u5DA6\u6017\u60C9\u6218\u6226\u6230\u62C3\u640C\u65A9\u65AC\u65C3\u65DC\u6808\u6834\u685F\u68E7\u693E\u6990\u6A4F\u6B03\u6BE1\u6C08\u6C0A\u6CBE\u6E54\u6E5B\u6FB6\u7416\u76BD\u76CF\u76DE\u77BB\u788A\u7AD9\u7C98\u7DBB\u7EFD\u83DA\u859D\u8638\u8665\u8666\u86C5\u8892\u8962\u89B1\u8A40\u8A79\u8B19\u8B67\u8B6B\u8B9D\u8C26\u8C35\u8D88\u8DD5\u8E4D\u8E94\u8F1A\u8F3E\u8F4F\u8F97\u9085\u9186\u91AE\u959A\u9711\u98A4\u98AD\u98D0\u98E6\u9930\u9958\u9A4F\u9A59\u9AA3\u9B59\u9C63\u9CE3\u9CFD\u9E07\u9E6F\u9EDE\u9EF5",
  lian: "\u4EB7\u4EE4\u50C6\u5286\u5332\u5333\u55F9\u5652\u581C\u5941\u5969\u5A08\u5AA1\u5AFE\u5B1A\u5B4C\u5E18\u5EC9\u601C\u604B\u6169\u6190\u6200\u631B\u641B\u6459\u64BF\u6523\u655B\u6582\u68BF\u695D\u69CF\u69E4\u6AE3\u6B04\u6B5B\u6B93\u6BAE\u6D70\u6D9F\u6E45\u6E93\u6F23\u6F4B\u6FB0\u6FC2\u6FD3\u7032\u70BC\u7149\u7191\u71EB\u740F\u7453\u7489\u77B5\u78CF\u7A34\u7C3E\u7C62\u7C68\u7DF4\u7E3A\u7E9E\u7EC3\u7FB7\u7FB8\u7FF4\u8054\u8068\u806B\u806E\u806F\u8138\u81A6\u81C1\u81C9\u82D3\u83B2\u83B6\u8430\u84EE\u8539\u8595\u859F\u861D\u861E\u878A\u880A\u88E2\u88E3\u8933\u895D\u899D\u8B30\u8B67\u8E65\u8FDE\u9023\u913B\u91B6\u932C\u934A\u938C\u93C8\u942E\u94FE\u9567\u9570\u96F6\u9B11\u9C0A\u9C31\u9C44\u9CA2",
  duo: "\u4EB8\u4EDB\u514A\u514C\u5151\u51D9\u5234\u5241\u525F\u526B\u540B\u5484\u54C6\u54DA\u55A5\u5689\u56B2\u579B\u579C\u57F5\u5815\u58AE\u58AF\u591A\u591B\u593A\u596A\u5972\u5AA0\u5AF7\u5C2E\u5D1C\u5D9E\u5EA6\u60F0\u619C\u6305\u6306\u6376\u6387\u63E3\u6553\u655A\u6560\u656A\u6735\u6736\u6742\u6755\u67A4\u67C1\u67C2\u67EE\u6857\u68F0\u692F\u6A62\u6BF2\u6CB0\u6CB1\u6CB2\u6FA4\u75E5\u787E\u7D9E\u7F0D\u8235\u8324\u88B3\u88F0\u8A51\u8A83\u8C80\u8D93\u8DE2\u8DE5\u8DFA\u8DFF\u8E31\u8EB1\u8EB2\u8EC3\u90F8\u9132\u922C\u931E\u937A\u9438\u94CE\u9517\u9640\u964A\u964F\u968B\u9693\u98FF\u9973\u99B1\u99C4\u9A6E\u9B0C\u9BB5\u9D7D\u9EDE",
  men: "\u4EB9\u4EEC\u5011\u600B\u6097\u60B6\u60DB\u61D1\u61E3\u626A\u636B\u66AA\u691A\u6B99\u6C76\u6E80\u6EE1\u6EFF\u7116\u71DC\u739F\u73A3\u73A7\u748A\u779E\u7A48\u83DB\u864B\u9346\u9494\u9580\u9585\u95E8\u95F7\u9794",
  ren: "\u4EBA\u4EBB\u4EC1\u4EDE\u4EED\u4EFB\u513F\u5203\u5204\u58EC\u598A\u59D9\u5C7B\u5FC8\u5FCD\u5FCE\u6041\u6268\u6732\u6752\u6820\u6823\u6895\u68EF\u6D8A\u7263\u79C2\u79F9\u7A14\u7D09\u7D1D\u7D4D\u7D9B\u7EAB\u7EB4\u8095\u814D\u82A2\u834F\u8375\u83CD\u845A\u887D\u88B5\u8A12\u8A8D\u8BA4\u8BB1\u8EB5\u8ED4\u8F6B\u91F0\u9213\u928B\u976D\u9771\u97CC\u97E7\u98EA\u9901\u996A\u9B5C\u9D40",
  shen: "\u4EC0\u4F14\u4F38\u4F81\u4FBA\u4FE1\u515F\u53C2\u53C3\u53C4\u53C5\u5432\u547B\u54C2\u5607\u5814\u59BD\u59FA\u5A20\u5A76\u5AC0\u5B38\u5B5E\u5BA1\u5BB7\u5BE9\u5C7E\u5CF7\u5E53\u5F1E\u613C\u614E\u625F\u628C\u62BB\u6437\u661A\u66CB\u67DB\u68EF\u692E\u6939\u698A\u69EE\u6C20\u6C88\u6D81\u6DF0\u6DF1\u6E16\u6E17\u6EF2\u700B\u71CA\u73C5\u751A\u7521\u7527\u7533\u7606\u762E\u7712\u7718\u778B\u77AB\u77E4\u77E7\u7837\u795E\u7973\u7A7C\u7C76\u7C78\u7CC1\u7D33\u7D9D\u7EC5\u7F59\u7F67\u80BE\u80C2\u8124\u814E\u8398\u845A\u8460\u84E1\u8518\u8593\u8703\u8704\u88D1\u89BE\u8A20\u8A37\u8A75\u8AD7\u8B85\u8BDC\u8C02\u8C09\u8EAB\u90A5\u926E\u92E0\u9707\u9823\u99EA\u9B6B\u9BC5\u9BD3\u9BF5\u9C30\u9C3A\u9CB9\u9D62\u9EEE",
  ze: "\u4EC4\u4F2C\u4FA7\u5074\u5219\u5247\u5395\u53A0\u548B\u5536\u5567\u556B\u5616\u5928\u5AE7\u5D31\u5E3B\u5E58\u5E82\u5EC1\u629E\u62E9\u6351\u63AA\u64C7\u6603\u6617\u67DE\u6A0D\u6B75\u6C44\u6CA2\u6CCE\u6CFD\u6EAD\u6EDC\u6FA4\u7042\u769F\u776A\u7794\u77E0\u790B\u7A04\u7A37\u7B2E\u7BA6\u7C00\u802B\u8234\u841A\u8443\u8536\u8600\u880C\u8957\u8ACE\u8B2B\u8B2E\u8B81\u8C2A\u8CAC\u8CFE\u8D23\u8D5C\u8FEE\u98F5\u9E05\u9F5A\u9F70",
  jin: "\u4EC5\u4ECA\u4F12\u4FAD\u50C5\u50F8\u5118\u5153\u51DA\u52A4\u52B2\u52C1\u537A\u53AA\u541F\u552B\u5664\u568D\u57D0\u5807\u583B\u5890\u58D7\u5997\u5A5C\u5AE4\u5B10\u5B27\u5BD6\u5C3D\u5D9C\u5DF9\u5DFE\u5ED1\u60CD\u616C\u6422\u65A4\u65B3\u6649\u664B\u6783\u6997\u69FF\u6B4F\u6BA3\u6D25\u6D55\u6D78\u6E8D\u6F0C\u6FC5\u6FDC\u70EC\u7161\u71FC\u73D2\u740E\u743B\u7468\u747E\u74A1\u74B6\u76E1\u77DC\u781B\u7972\u7981\u7AFB\u7B12\u7B4B\u7D1F\u7D27\u7D3E\u7DCA\u7E09\u7F19\u808B\u81F8\u8355\u8369\u83EB\u83F3\u84F3\u85CE\u887F\u895F\u89B2\u89D0\u89D4\u8A21\u8B39\u8C28\u8CEE\u8D10\u8D46\u8FD1\u8FDB\u9032\u91D1\u91D2\u91FF\u92DF\u9326\u9485\u9513\u9526\u9773\u9949\u9991\u99B8\u9E76\u9EC5\u9F7D",
  nu: "\u4EC5\u4F16\u4F2E\u5089\u52AA\u5476\u5974\u5B65\u5E11\u5F29\u6012\u6419\u64E9\u782E\u7B2F\u80EC\u8925\u8A49\u99D1\u9A7D",
  pu: "\u4EC6\u50D5\u525D\u5265\u530D\u535C\u5657\u5703\u5711\u5724\u57D4\u5821\u58A3\u5DEC\u5DED\u6251\u6276\u62AA\u6357\u64B2\u64C8\u6534\u6535\u666E\u669C\u66B4\u66DD\u6734\u67E8\u6A38\u6A8F\u6C06\u6D66\u6EA5\u6F7D\u6FEE\u7011\u7087\u70F3\u735B\u749E\u752B\u75E1\u77A8\u7832\u79FF\u7A59\u7B81\u7E80\u812F\u8216\u8217\u82FB\u8379\u8386\u83D0\u83E9\u8461\u84B1\u84B2\u8705\u8946\u8965\u8AE9\u8B5C\u8C31\u8C67\u8D0C\u8E7C\u917A\u92EA\u93F7\u9420\u94FA\u9564\u9568\u9660\u99C7\u9BC6\u9D4F",
  ba: "\u4EC8\u4F2F\u516B\u53D0\u53ED\u5427\u54F1\u54F5\u575D\u577A\u57BB\u58A2\u58E9\u593F\u59AD\u5C9C\u5CC7\u5DF4\u5F1D\u6252\u628A\u629C\u62AA\u62D4\u634C\u636D\u6733\u6777\u67ED\u6B1B\u6E43\u705E\u70A6\u7238\u72AE\u7390\u75A4\u7679\u7685\u77F2\u7B06\u7B29\u7C91\u7D26\u7F62\u7F77\u7F93\u8019\u80C8\u82AD\u8307\u8337\u83DD\u8406\u8686\u8987\u8A59\u8C5D\u8DC1\u8DCB\u8EF7\u91DB\u91DF\u9200\u94AF\u9738\u9776\u98B0\u9B43\u9B5E\u9B81\u9B8A\u9C83\u9C85\u9C8C\u9F25",
  fo: "\u4ECF\u4EF8\u4F5B\u5772\u68BB",
  tao: "\u4ED0\u530B\u53E8\u54B7\u5555\u5932\u5935\u5957\u59DA\u5ACD\u5E4D\u5F22\u6146\u62AD\u6311\u638F\u642F\u6843\u68BC\u69C4\u6AAE\u6D2E\u6D9B\u6DAD\u6DD8\u6ED4\u6FE4\u7118\u71FE\u746B\u7979\u7B79\u7C4C\u7D5B\u7DA2\u7DAF\u7E1A\u7E27\u7EE6\u7EF8\u7EF9\u8404\u872A\u88EA\u8A0E\u8A5C\u8B1F\u8BA8\u8DF3\u8F41\u8FEF\u9003\u9184\u92FE\u932D\u9676\u9780\u9789\u97B1\u97DC\u97EC\u982B\u98F8\u9940\u9955\u99E3\u9A0A\u9F17",
  lun: "\u4ED1\u4F26\u4F96\u502B\u56F5\u5707\u57E8\u5A68\u5D18\u5D19\u60C0\u62A1\u6384\u68C6\u6CA6\u6DEA\u6EA3\u7754\u7896\u78EE\u7A10\u7DB8\u7EB6\u8023\u8140\u83D5\u8726\u8AD6\u8BBA\u8E1A\u8F2A\u8F6E\u9300\u966F\u9BE9",
  cang: "\u4ED3\u4EFA\u4F27\u5009\u5096\u51D4\u5328\u5D62\u6B0C\u6CA7\u6EC4\u6FF8\u734A\u7472\u7BEC\u7F49\u81E7\u8231\u8259\u82CD\u84BC\u8535\u85CF\u87A5\u8CF6\u9476\u9DAC\u9E27",
  chuang: "\u4ED3\u4EFA\u5009\u50B8\u5205\u521B\u5231\u524F\u5259\u5275\u5647\u56EA\u56F1\u5E62\u5E8A\u6006\u6134\u6227\u6450\u6723\u6A66\u6F34\u6F3A\u7240\u724E\u7255\u75AE\u7621\u78E2\u7A93\u7A97\u7ABB\u81A7\u8202\u8471\u8525\u95D6\u95EF",
  zai: "\u4ED4\u50A4\u510E\u518D\u54C9\u5728\u5BB0\u5D3D\u624D\u6257\u683D\u6D05\u6E3D\u6EA8\u707D\u707E\u70D6\u753E\u7775\u7E21\u83D1\u8CF3\u8F09\u8F7D\u9168",
  ta: "\u4ED6\u4FA4\u509D\u547E\u549C\u55D2\u5683\u56BA\u584C\u5854\u5896\u592A\u5979\u5B83\u5D09\u62D3\u631E\u6428\u642D\u6498\u64BB\u6999\u69BB\u6BFE\u6C93\u6DBE\u6E7F\u6E9A\u6EBB\u6F2F\u6FBE\u6FCC\u6FD5\u7260\u72E7\u736D\u737A\u7942\u79A2\u8345\u891F\u8ABB\u8B76\u8DBF\u8E0F\u8E4B\u8E79\u8EA2\u8FBE\u8FCF\u8FD6\u9039\u9054\u905D\u9062\u9248\u9314\u9389\u9391\u94CA\u95D2\u95DF\u95E5\u95FC\u9618\u9788\u9791\u979C\u97B3\u97C3\u9B99\u9C28\u9CCE",
  xian: "\u4ED9\u4EDA\u4F23\u4F2D\u4F61\u4FD4\u50CA\u50E9\u50F2\u50F4\u5148\u51BC\u53BF\u5481\u549E\u54B8\u54EF\u550C\u5563\u55DB\u5615\u57B7\u57F3\u583F\u58CF\u597E\u5997\u59B6\u59CD\u59D7\u59ED\u59FA\u5A0A\u5A28\u5A34\u5A39\u5A71\u5ACC\u5AFA\u5AFB\u5B10\u5B45\u5BAA\u5BF0\u5C1F\u5C20\u5C73\u5C98\u5CF4\u5D04\u5DAE\u5E70\u5EEF\u5F26\u5FFA\u614A\u6173\u61AA\u61B2\u61B8\u61E2\u6326\u634D\u6380\u63A2\u63F1\u641A\u641F\u648A\u648F\u6507\u6515\u663E\u665B\u66B9\u6774\u67AE\u6898\u69CF\u6A4C\u6AF6\u6B26\u6BE8\u6C19\u6D12\u6D17\u6D80\u6D8E\u6E7A\u6E93\u6F96\u6FC2\u7017\u7051\u7066\u70CD\u71F9\u72DD\u7303\u732E\u736B\u736E\u737B\u7381\u73B0\u73B9\u73D7\u73FE\u7509\u75EB\u7647\u764E\u76F7\u7701\u770C\u774D\u77AF\u77E3\u784D\u78B1\u7906\u7925\u7946\u7992\u79B0\u79C8\u7A34\u7B15\u7B45\u7B67\u7BB2\u7C7C\u7CAF\u7CEE\u7D43\u7D64\u7D85\u7D96\u7DAB\u7DDA\u7E23\u7E3F\u7E4A\u7E8E\u7E96\u7EA4\u7EBF\u7F10\u7FA1\u7FA8\u7FAC\u80A9\u80C1\u80D8\u8105\u8107\u810B\u817A\u8181\u81D4\u81E4\u81FD\u8237\u82CB\u82EE\u83A7\u83B6\u8539\u859F\u85D3\u85D6\u861A\u861D\u861E\u86AC\u86BF\u86DD\u8706\u8854\u8858\u893C\u8973\u898B\u89C1\u8AA2\u8AB8\u8AF4\u8B40\u8B63\u8C4F\u8CE2\u8D12\u8D24\u8D7B\u8DE3\u8DF9\u8E6E\u8E9A\u8ED0\u8ED2\u8F31\u8F69\u9170\u918E\u91B6\u91E4\u9291\u929B\u929C\u92E7\u930E\u931F\u9341\u934C\u93FE\u9466\u9490\u94E3\u94E6\u9528\u952C\u9591\u9592\u95DE\u95F2\u961A\u9650\u9665\u9669\u9677\u967A\u96AA\u9730\u97C5\u97EF\u97F1\u9848\u9855\u986F\u9921\u9940\u9985\u99A6\u9BAE\u9C14\u9C7B\u9C9C\u9DB1\u9DF3\u9DF4\u9DFC\u9E47\u9E79\u9E99\u9EB2\u9EF9\u9F38",
  cha: "\u4EDB\u4F98\u505B\u5239\u524E\u53C9\u55B3\u55CF\u5693\u571F\u579E\u597C\u59F9\u5BDF\u5C8E\u5C94\u5D56\u5DEE\u6260\u6271\u633F\u6348\u6377\u63A5\u63D2\u63F7\u643D\u6456\u659C\u6748\u67E5\u67FB\u688C\u6942\u69CE\u6AAB\u6C4A\u7339\u7580\u78B4\u79C5\u7D01\u809E\u81FF\u8256\u8286\u82F4\u832C\u8336\u8356\u837C\u8869\u8928\u8A0D\u8A67\u8A6B\u8BE7\u8E45\u91F5\u929F\u9364\u9388\u9454\u9497\u9538\u9572\u976B\u9937\u9987",
  hong: "\u4EDC\u53B7\u53FF\u5430\u543D\u54C4\u54C5\u551D\u55CA\u569D\u57AC\u5985\u5A02\u5B8F\u5B96\u5C78\u5DC6\u5F18\u5F4B\u6129\u63C8\u6494\u664E\u6C6A\u6C6F\u6CD3\u6D2A\u6D64\u6D72\u6E2F\u6E31\u6E39\u6F42\u6F8B\u6F92\u7074\u70D8\u7122\u7392\u739C\u74E8\u7854\u7861\u7AD1\u7AE4\u7BCA\u7CA0\u7D05\u7D18\u7D2D\u7D8B\u7EA2\u7EAE\u7FBE\u7FC3\u7FDD\u803E\u823C\u82F0\u836D\u8452\u8453\u857B\u85A8\u8679\u8A07\u8A0C\u8B0D\u8BA7\u8C39\u8C3C\u8C3E\u8EE3\u8F37\u8F5F\u8F70\u921C\u9277\u92BE\u92D0\u9367\u958E\u95A7\u95C0\u95C2\u95F3\u9710\u971F\u9783\u9B28\u9B5F\u9D3B\u9E3F\u9EC9\u9ECC",
  tong: "\u4EDD\u4F5F\u4F97\u5045\u50EE\u5182\u528F\u52ED\u540C\u54C3\u55F5\u56F2\u578C\u5CC2\u5CD2\u5CDD\u5E9D\u5F64\u606B\u6078\u607F\u615F\u6185\u6345\u664D\u66C8\u6723\u6850\u6876\u6A0B\u6A66\u6C03\u6D1E\u6D75\u6E69\u6F7C\u70B5\u70D4\u71A5\u71D1\u721E\u729D\u72EA\u735E\u75CC\u75DB\u772E\u77B3\u783C\u7850\u7867\u79F1\u7A5C\u7AE5\u7B52\u7B69\u7CA1\u7D67\u7D71\u7D82\u7EDF\u81A7\u825F\u833C\u84EA\u8692\u873C\u87F2\u8855\u8A77\u8D68\u901A\u916E\u91CD\u9256\u9275\u9285\u94DC\u9907\u9BA6\u9C96",
  han: "\u4EE0\u4F44\u50BC\u516F\u51FD\u51FE\u5382\u5388\u542B\u5481\u54FB\u5505\u558A\u5682\u5705\u57BE\u5A22\u5AE8\u5BD2\u5C7D\u5D21\u5D45\u5D4C\u5FD3\u608D\u611F\u61A8\u61BE\u625E\u634D\u6496\u64BC\u653C\u65F0\u65F1\u6657\u6658\u6665\u66B5\u687F\u6892\u6937\u69A6\u6B26\u6B5B\u6C49\u6C57\u6C75\u6CD4\u6D5B\u6D6B\u6D86\u6DB5\u6DCA\u6DE6\u6EE9\u6F22\u6F89\u6F8F\u6FA3\u701A\u7058\u710A\u7113\u71AF\u7233\u7302\u7400\u7518\u751D\u7694\u7745\u77F8\u7B12\u7B68\u7CEE\u7F55\u7FF0\u80A3\u839F\u83E1\u850A\u862B\u8677\u86B6\u86FF\u872C\u872D\u8792\u8B40\u8C3D\u8C43\u8ED2\u8F69\u9097\u90AF\u9163\u91EC\u9210\u92B2\u92CE\u92E1\u94A4\u9588\u95DE\u95EC\u961A\u96D7\u976C\u97D3\u97E9\u9807\u981C\u9837\u9844\u9869\u9878\u9894\u99A0\u99AF\u99FB\u9B2B\u9B7D\u9CF1\u9DBE\u9F3E",
  dai: "\u4EE3\u4FA2\u50A3\u53C7\u5446\u5454\u561A\u5788\u57ED\u5927\u5CB1\u5E12\u5E26\u5E2F\u5E36\u5ED7\u5F85\u6020\u61DB\u6234\u66C3\u67CB\u68E3\u6B79\u6B86\u6BD2\u6C4F\u703B\u7343\u73B3\u7447\u7519\u7B89\u7C24\u7D3F\u7DFF\u7ED0\u825C\u8515\u86AE\u8773\u87AE\u888B\u8976\u8A52\u8BD2\u8CB8\u8D37\u8DE2\u8E5B\u8ED1\u8EDA\u8EE9\u8F6A\u8FE8\u902E\u902F\u905E\u9070\u96B6\u9734\u9746\u99B1\u99C4\u99D8\u9A6E\u9A80\u9B98\u9D0F\u9EDB\u9EF1",
  ling: "\u4EE4\u4F36\u5030\u51B7\u51CC\u5222\u53E6\u5464\u56F9\u577D\u590C\u59C8\u5A48\u5B41\u5CAD\u5CBA\u5D1A\u5DBA\u5F7E\u601C\u62CE\u6395\u6624\u670E\u67C3\u68C2\u68F1\u6AFA\u6B1E\u6CE0\u6DE9\u6FAA\u702E\u7075\u70A9\u71EF\u7227\u72D1\u73B2\u740C\u74F4\u768A\u7831\u78F7\u797E\u79E2\u7ADB\u7B2D\u7D37\u7DBE\u7EEB\u7F9A\u7FCE\u8046\u8232\u82D3\u83F1\u84E4\u8506\u8576\u8626\u86C9\u8851\u888A\u88EC\u8A45\u8DC9\u8EE8\u8F18\u9143\u91BD\u91D8\u9234\u9302\u9489\u94C3\u959D\u963E\u9675\u96F6\u970A\u9717\u971B\u971D\u9747\u9748\u9818\u9886\u99D6\u9B7F\u9BEA\u9CAE\u9D12\u9E30\u9E77\u9EA2\u9F61\u9F62\u9F84\u9F97",
  chao: "\u4EE6\u4EEF\u527F\u528B\u52E6\u5435\u5520\u562E\u5632\u5DD0\u5DE2\u5DE3\u5F28\u600A\u6284\u6477\u6641\u671D\u69F1\u6A14\u6B29\u6D9B\u6F05\u6F6E\u6FE4\u7092\u7123\u712F\u717C\u724A\u7727\u7AB2\u7C86\u7D39\u7DA4\u7DBD\u7E10\u7E5B\u7EC9\u7ECD\u7EF0\u7F7A\u8016\u89D8\u8A2C\u8B05\u8B3F\u8BCC\u8D85\u8DA0\u8DAB\u8F48\u911B\u9214\u949E\u9EA8\u9F02\u9F0C",
  chang: "\u4EE7\u4F25\u5000\u5018\u5021\u507F\u50D8\u511F\u513B\u514F\u5382\u53B0\u5531\u5617\u5690\u573A\u5834\u5872\u5A3C\u5AE6\u5C19\u5C1A\u5C1D\u5E38\u5EE0\u5F9C\u6005\u60B5\u60DD\u655E\u660C\u6636\u667F\u66A2\u68D6\u6919\u6C05\u6DCC\u6DD0\u713B\u7316\u739A\u7429\u7452\u747A\u74FA\u751E\u7545\u757C\u80A0\u8139\u8178\u8193\u82CC\u83D6\u8407\u87D0\u88EE\u88F3\u8AAF\u92F9\u92FF\u9329\u93DB\u9520\u9577\u9578\u957F\u95B6\u95DB\u960A\u97D4\u9B2F\u9BE7\u9C68\u9CB3\u9CBF\u9F1A",
  sa: "\u4EE8\u5345\u6332\u644B\u6492\u6503\u686C\u6AAB\u6AD2\u6BBA\u6CE7\u6D12\u6F75\u7051\u7E9A\u810E\u8428\u8521\u856F\u85A9\u8A2F\u8EA0\u9212\u939D\u93FE\u9491\u96A1\u9705\u9778\u9788\u98AF\u98D2\u99BA",
  fan: "\u4EEE\u4F0B\u51E1\u51E2\u51E3\u52EB\u5325\u53CD\u5643\u58A6\u597F\u5A4F\u5B0E\u5B0F\u5B14\u5E06\u5E61\u5FDB\u61A3\u6255\u62DA\u6535\u65D9\u65DB\u674B\u67C9\u68B5\u68E5\u6953\u6A0A\u6A4E\u6C3E\u6C4E\u6CDB\u6E22\u6EFC\u702A\u703F\u70E6\u7169\u71D4\u72AD\u72AF\u72BF\u74A0\u7548\u7568\u756A\u76D5\u77FE\u792C\u7B32\u7B35\u7BC4\u7C53\u7C75\u7DD0\u7E41\u7E59\u7FB3\u7FFB\u81B0\u8224\u8227\u8229\u8303\u8543\u85A0\u85E9\u8629\u87E0\u881C\u88A2\u894E\u8A09\u8CA9\u8D29\u8E6F\u8ED3\u8EEC\u8F53\u8FBA\u8FD4\u91E9\u9407\u9492\u98BF\u98DC\u98EF\u98F0\u996D\u9C55\u9DED",
  miao: "\u4EEF\u5435\u55B5\u5999\u5A8C\u5AF9\u5E99\u5EBF\u5EDF\u5F6F\u63CF\u676A\u6DFC\u6E3A\u732B\u7385\u7707\u7784\u79D2\u7AD7\u7BCE\u7D17\u7DE2\u7DF2\u7EB1\u7F08\u7F2A\u82D7\u85D0\u8731\u8A2C\u9088\u9C59\u9D93\u9E4B",
  ang: "\u4EF0\u536C\u5C87\u6602\u663B\u678A\u76CE\u80AE\u9183\u91A0\u9AAF",
  yang: "\u4EF0\u4F52\u4F6F\u509F\u517B\u52B7\u52DC\u536C\u5489\u5771\u579F\u592E\u594D\u59CE\u5A78\u5C07\u5C9F\u5D35\u5D38\u5F89\u600F\u6059\u6143\u61E9\u626C\u62B0\u63DA\u6501\u656D\u65F8\u6602\u661C\u6620\u6698\u6768\u67CD\u6837\u694A\u6967\u69D8\u6A23\u6B4D\u6B83\u6C1C\u6C27\u6C31\u6CF1\u6D0B\u6E6F\u6F3E\u6F52\u7001\u7080\u70B4\u70CA\u716C\u73DC\u7452\u75A1\u75D2\u760D\u7662\u770F\u773B\u7922\u7993\u79E7\u7D3B\u7F8A\u7F8F\u7F95\u7F98\u7FAA\u80E6\u82F1\u86D8\u8A47\u8A73\u8AF9\u8BE6\u8EEE\u8F30\u9260\u9348\u935A\u940A\u9496\u9626\u9633\u967D\u96F5\u9719\u9737\u9785\u98BA\u98CF\u98EC\u990A\u99DA\u9C11\u9D26\u9D39\u9E09\u9E2F",
  bi: "\u4EF3\u4F4A\u4F56\u4F5B\u4FFE\u506A\u5302\u5315\u5351\u5421\u5487\u54D4\u555A\u55F6\u5752\u57E4\u581B\u58C1\u590D\u5936\u5970\u59A3\u59BC\u5A1D\u5A62\u5AB2\u5B16\u5B36\u5C44\u5D25\u5E01\u5E45\u5E63\u5E64\u5E80\u5E87\u5EB3\u5EE6\u5F0A\u5F3B\u5F3C\u5F43\u5F7C\u5FC5\u602D\u6036\u6082\u610A\u610E\u62C2\u636D\u655D\u6583\u65C7\u670D\u673C\u6787\u6788\u67C0\u67F2\u6890\u6911\u6945\u6A97\u6B8D\u6BD4\u6BD5\u6BD6\u6BD9\u6BF4\u6C98\u6CCC\u6CE2\u6E62\u6ED7\u6EED\u6F77\u6FDE\u714F\u719A\u72F4\u7358\u7359\u73CC\u74A7\u7540\u7541\u7550\u7562\u7595\u75AA\u75F9\u75FA\u7680\u7695\u77A5\u78A7\u7986\u79D5\u79D8\u7A2B\u7B13\u7B14\u7B46\u7B5A\u7B83\u7B84\u7B85\u7B86\u7BE6\u7BF3\u7C83\u7C8A\u7D15\u7D34\u7DBC\u7E2A\u7E74\u7EB0\u7F77\u7F7C\u7FCD\u805B\u80B6\u80B8\u80C7\u813E\u8157\u8177\u81C2\u822D\u8298\u82FE\u835C\u8378\u8406\u841E\u84D6\u84FD\u853D\u859C\u8617\u8651\u870C\u8795\u8890\u88AB\u88E8\u8945\u895E\u8963\u89F1\u8A56\u8BD0\u8C4D\u8C8F\u8CB1\u8CBB\u8CC1\u8D14\u8D32\u8D39\u8D51\u8DDB\u8DF8\u8E3E\u8E55\u8E83\u8E84\u8F9F\u903C\u907F\u90B2\u9119\u9128\u912A\u921A\u924D\u930D\u939E\u93CE\u9434\u943E\u94CB\u9587\u9588\u9589\u959F\u95EC\u95ED\u9642\u965B\u9674\u9781\u979E\u97B8\u97E0\u98F6\u9946\u999D\u99A5\u99DC\u9A46\u9AC0\u9AF2\u9B53\u9B6E\u9B85\u9BA9\u9C0F\u9CBE\u9D13\u9D56\u9D9D\u9DDD\u9DE9\u9E0A\u9F0A\u9F3B",
  wo: "\u4EF4\u502D\u5053\u5367\u5529\u5594\u55CC\u5641\u5684\u57DA\u581D\u592D\u5A50\u5A51\u5A89\u5AAA\u5ABC\u5E44\u6211\u631D\u6370\u637C\u637E\u63E1\u64BE\u64ED\u65A1\u674C\u6782\u6943\u6C83\u6DA1\u6DB4\u6DB9\u6E25\u6E26\u6FC4\u6FE3\u7125\u7327\u74C1\u761F\u7783\u77C6\u786A\u7A9D\u7AA9\u809F\u815B\u81D2\u81E5\u8267\u83B4\u8435\u84A6\u85B6\u8717\u8778\u8E12\u8E20\u96D8\u99A7\u9F77\u9F8C\u9F8F",
  jian: "\u4EF6\u4F9F\u4FED\u4FF4\u5039\u5042\u5065\u5094\u50E3\u50ED\u5109\u517C\u51BF\u51CF\u524D\u5251\u5263\u526A\u5271\u528D\u528E\u5292\u5294\u558A\u56CF\u56DD\u575A\u5805\u5811\u583F\u5879\u58B9\u5978\u59E6\u59E7\u5B71\u5BCB\u5C16\u5E34\u5E75\u5EF4\u5EFA\u5F3F\u5F45\u5FA4\u60E4\u620B\u6214\u6229\u622C\u62E3\u6338\u6361\u63C0\u63C3\u63F5\u641B\u64BF\u64F6\u6515\u65D4\u6695\u6701\u67A7\u67D9\u67EC\u682B\u6898\u68C0\u691C\u6937\u693E\u6957\u6997\u69DB\u6A2B\u6A4C\u6A4F\u6A7A\u6AA2\u6ABB\u6AFC\u6B7C\u6BB1\u6BB2\u6BFD\u6D0A\u6D45\u6D80\u6DA7\u6DFA\u6E10\u6E1B\u6E54\u6E55\u6E85\u6EE5\u6F38\u6F97\u6FEB\u6FFA\u7010\u7033\u7038\u703D\u714E\u719E\u71B8\u724B\u726E\u728D\u730F\u73AA\u73D4\u744A\u7450\u76D1\u76E3\u7751\u7777\u77AF\u77B7\u77BC\u7877\u788A\u78B1\u78F5\u7900\u7906\u791B\u7A34\u7B15\u7B3A\u7B67\u7B80\u7B8B\u7BAD\u7BB4\u7BEF\u7C21\u7C48\u7C5B\u7CCB\u7D78\u7DD8\u7E11\u7E5D\u7E6D\u7E8E\u7E96\u7EA4\u7F04\u7F23\u7FE6\u807B\u80A9\u8171\u81F6\u8230\u8266\u8270\u8271\u831B\u8327\u8350\u83C5\u83FA\u844C\u844F\u8465\u84B9\u852A\u8551\u8573\u85A6\u85C6\u8643\u87B9\u8812\u88B8\u88E5\u8947\u8949\u897A\u898B\u89B5\u89B8\u89C1\u8A43\u8AD3\u8AEB\u8B07\u8B2D\u8B56\u8B7C\u8B7E\u8C0F\u8C2B\u8C2E\u8C5C\u8C63\u8CCE\u8CE4\u8D31\u8D9D\u8DBC\u8DC8\u8DF5\u8E10\u8E3A\u8E47\u8F5E\u918E\u91B6\u91F0\u91FC\u9203\u9274\u9292\u92AD\u92C4\u92D1\u92FB\u9322\u932C\u933D\u934A\u9373\u9375\u93AB\u93E9\u9417\u9427\u9431\u9451\u9452\u946C\u946F\u9473\u9498\u94B1\u950F\u952E\u9592\u9593\u95F4\u9669\u96AA\u976C\u97AC\u97AF\u97C0\u97C9\u991E\u9930\u996F\u99A2\u9A2B\u9A9E\u9B0B\u9C0E\u9C14\u9C1C\u9C39\u9CA3\u9CD2\u9CFD\u9D73\u9DBC\u9E63\u9E78\u9E79\u9E7B\u9E7C\u9E89\u9EDA\u9EEC",
  mou: "\u4EF6\u4F94\u52BA\u53B6\u5463\u54DE\u5825\u5A7A\u6048\u6544\u67D0\u6859\u6BCB\u6D20\u725F\u7738\u77B4\u7E46\u7F2A\u86D1\u8765\u87F1\u88A4\u8B00\u8C0B\u927E\u936A\u97AA\u9D3E\u9EB0",
  jia: "\u4EF7\u4F3D\u4F73\u5047\u50A2\u50F9\u52A0\u53DA\u5477\u5496\u550A\u5609\u560F\u573F\u57C9\u590F\u5913\u5939\u593E\u5A7D\u5AC1\u5B8A\u5BB6\u5CAC\u5E4F\u5FA6\u5FE6\u605D\u621B\u621E\u6274\u62B8\u62BC\u62C1\u62EE\u6308\u631F\u633E\u63E9\u63F3\u64D6\u659A\u659D\u6687\u67B6\u67B7\u689C\u6935\u698E\u69A2\u69DA\u6A9F\u6BE0\u6CC7\u6D43\u6D79\u728C\u7330\u7333\u73BE\u73C8\u7532\u75C2\u7615\u7A3C\u7B33\u7B74\u7CD8\u801E\u80DB\u8125\u8175\u8304\u835A\u83A2\u846D\u86F1\u86FA\u8766\u8888\u88B7\u88CC\u8C6D\u8C91\u8CC8\u8D3E\u8DCF\u8DF2\u8FE6\u90CF\u90DF\u9240\u926B\u927F\u92CF\u93B5\u94BE\u94D7\u94EA\u9553\u9821\u982C\u9830\u9889\u988A\u9904\u9978\u99D5\u99F1\u9A7E\u9A86\u9AB1\u9D36\u9D4A\u9E9A",
  bin: "\u4EFD\u50A7\u5110\u5BBE\u5F6C\u6448\u64EF\u658C\u6915\u69DF\u6BA1\u6BAF\u6C1E\u6C43\u6D5C\u6EE8\u6FD2\u6FF1\u6FF5\u7015\u73A2\u7478\u74B8\u780F\u7E7D\u7F24\u8191\u81CF\u8668\u8819\u8A1C\u8C69\u8C73\u8CD3\u8CD4\u8D07\u8D5F\u90A0\u944C\u9554\u9726\u983B\u986E\u9891\u9ACC\u9AD5\u9AE9\u9B02\u9B13\u9B22",
  fen: "\u4EFD\u507E\u50E8\u5206\u532A\u5429\u55B7\u5674\u5746\u574B\u575F\u58B3\u594B\u5954\u596E\u59A2\u5C8E\u5E09\u5E69\u5F05\u5FFF\u610D\u6124\u61A4\u626E\u62DA\u6543\u6610\u6706\u670C\u678C\u68A4\u68FB\u68FC\u6A68\u6B55\u6C1B\u6C7E\u6FC6\u7035\u7083\u711A\u71CC\u71D3\u71D4\u7356\u73A2\u76FC\u7793\u780F\u79CE\u7AD5\u7C89\u7CAA\u7CDE\u7D1B\u7EB7\u7F92\u7FB5\u7FC2\u80A6\u81B9\u82AC\u8450\u84B6\u8561\u86A0\u86A1\u886F\u8A1C\u8C6E\u8C76\u8CC1\u8D32\u8EAE\u8F52\u915A\u9216\u9300\u943C\u96AB\u96F0\u9812\u9881\u9934\u9959\u999A\u99A9\u9B75\u9C5D\u9CBC\u9CFB\u9EC2\u9EFA\u9F16\u9F22",
  di: "\u4EFE\u4F4E\u4FE4\u5059\u50C0\u5125\u52FA\u538E\u5467\u5519\u5547\u5572\u557B\u5600\u5681\u5730\u5754\u5758\u577B\u57C5\u57CA\u57DE\u5824\u5886\u5891\u58AC\u5943\u5A23\u5A82\u5AE1\u5D7D\u5DB3\u5E1D\u5E95\u5EF8\u5F14\u5F1A\u5F1F\u5F24\u5F7D\u601F\u6178\u625A\u62B5\u62DE\u638B\u63D0\u63E5\u6455\u654C\u6575\u65F3\u6753\u6755\u67A4\u67E2\u688A\u6891\u68E3\u6974\u6A00\u6C10\u6D5F\u6DA4\u6E27\u6ECC\u6EF4\u710D\u7274\u72C4\u7393\u73F6\u750B\u7590\u7684\u7731\u7747\u7825\u78AE\u78B2\u78FE\u7976\u7998\u7B1B\u7B2C\u7BF4\u7C74\u7CF4\u7D04\u7DE0\u7EA6\u7F14\u7F9D\u7FDF\u805C\u8091\u80DD\u8163\u828D\u82D0\u82D6\u837B\u839C\u83C2\u83E7\u8482\u84E7\u850B\u8510\u8515\u85CB\u85E1\u86B3\u8743\u87AE\u889B\u89BF\u89CC\u89DD\u8A46\u8ADF\u8AE6\u8BCB\u8C1B\u8C74\u8D7F\u8D86\u8E27\u8E36\u8E44\u8E4F\u8E62\u8EE7\u8FEA\u9010\u9012\u9013\u902E\u905E\u9069\u9070\u90B8\u91F1\u926A\u9349\u93D1\u955D\u963A\u9684\u96B6\u976E\u97AE\u9814\u984C\u9898\u99B0\u9AB6\u9AE2\u9B04\u9B61\u9BF3\u9E10",
  fang: "\u4EFF\u5023\u531A\u574A\u57C5\u580F\u59A8\u5F77\u623F\u653E\u65B9\u65CA\u6609\u6618\u661E\u678B\u6C78\u6DD3\u7265\u74EC\u7706\u772A\u794A\u7D21\u7EBA\u80AA\u822B\u82B3\u8684\u8A2A\u8BBF\u8DBD\u90A1\u9201\u933A\u94AB\u9632\u96F1\u9AE3\u9B74\u9C1F\u9C82\u9CD1\u9D0B\u9DAD",
  pei: "\u4F02\u4F69\u4FD6\u500D\u5478\u5561\u574F\u57BA\u57F9\u5983\u599A\u59F5\u5A44\u5A90\u5D8F\u5E14\u600C\u62B7\u638A\u6508\u65BE\u65C6\u6622\u67F8\u68D1\u6BF0\u6C9B\u6D7F\u6DE0\u72BB\u73EE\u7423\u7432\u7B29\u80A7\u80DA\u8274\u8307\u8337\u84DC\u871A\u8843\u88F4\u88F5\u8CE0\u8D54\u8F61\u8F94\u914D\u9185\u9307\u952B\u962B\u966A\u966B\u9708\u99B7\u99CD",
  diao: "\u4F04\u4F7B\u501C\u51CB\u5200\u5201\u521F\u53FC\u540A\u595D\u5B25\u5C4C\u5F14\u5F34\u5F6B\u625A\u6311\u6389\u6906\u6BA6\u6C48\u6DCD\u7431\u7639\u7797\u77F5\u7889\u7A20\u7A8E\u7AB5\u7AE8\u7C13\u7C9C\u7CF6\u7D69\u7DA2\u7EF8\u839C\u84E7\u85CB\u866D\u86C1\u8729\u8A0B\u8A82\u8ABF\u8C03\u8C82\u8D75\u8D99\u8DF3\u8E14\u8EFA\u8F7A\u91E3\u921F\u92B1\u92FD\u932D\u9443\u9493\u94DE\u94EB\u96D5\u96FF\u98A9\u9AA0\u9B61\u9B89\u9BDB\u9CB7\u9CE5\u9CED\u9D43\u9D70\u9E1F\u9E3C\u9F26",
  xin: "\u4F08\u4F29\u4FE1\u4FFD\u5174\u5677\u567A\u56DF\u59A1\u59F0\u5B1C\u5B5E\u5BFB\u5C0B\u5E8D\u5EDE\u5FC3\u5FFB\u60DE\u6116\u6196\u64A2\u65B0\u6615\u677A\u6794\u6A5D\u6B23\u6B35\u6B3E\u6B40\u6B46\u6F43\u7098\u712E\u76FA\u7925\u812A\u8208\u820B\u82AF\u8398\u85AA\u8845\u8951\u8A22\u8A2B\u8ED0\u8F9B\u90A4\u91C1\u920A\u92C5\u9414\u946B\u950C\u9561\u9620\u9856\u99A8\u99AB\u99B8\u9B35",
  xiu: "\u4F11\u4FE2\u4FEE\u54BB\u55C5\u568A\u5BBF\u5CAB\u5EA5\u673D\u6A07\u6AF9\u6EB4\u6EEB\u70CB\u70CC\u7166\u73DB\u7407\u7493\u79C0\u7CD4\u7D87\u7D89\u7E4D\u7E61\u7EE3\u7F9E\u8119\u8129\u81ED\u81F0\u81F9\u82EC\u8320\u83A0\u84E8\u8791\u8896\u88E6\u890E\u890F\u8C85\u929D\u92B9\u9380\u93C5\u93E5\u93FD\u9508\u98CD\u9948\u9990\u9AE4\u9AF9\u9BB4\u9C43\u9D42\u9E3A\u9F45",
  tang: "\u4F16\u5018\u5052\u508F\u50A5\u513B\u528F\u5510\u557A\u5621\u5763\u5802\u5858\u5D63\u5E11\u5F39\u6113\u6203\u6269\u642A\u6465\u64F4\u6529\u66ED\u68E0\u69B6\u6A18\u6A56\u6B13\u6C64\u6DCC\u6E6F\u6E8F\u6F1F\u6F21\u70EB\u717B\u71D9\u7223\u746D\u77D8\u78C4\u799F\u7BD6\u7C1C\u7CC3\u7CD6\u7CDB\u7FB0\u8025\u8185\u819B\u8361\u84CE\u8569\u859A\u862F\u876A\u8797\u87B3\u8D6F\u8D9F\u8E3C\u8E5A\u8EBA\u903F\u910C\u91A3\u9395\u93B2\u93DC\u940B\u943A\u9482\u94DB\u94F4\u954B\u9557\u95B6\u95DB\u95E3\u960A\u969A\u97BA\u9933\u9939\u9944\u9967\u9DB6\u9EE8\u9F1E",
  huo: "\u4F19\u4F78\u4FF0\u5268\u5290\u5316\u5419\u548A\u548C\u549F\u55C0\u5684\u56AF\u56BF\u5925\u596F\u59E1\u60D1\u6216\u626E\u6347\u639D\u6409\u64ED\u6509\u65E4\u66E4\u6947\u6AB4\u6C8E\u6D3B\u6E71\u6F37\u6FCA\u6FE9\u7016\u706B\u706C\u7103\u7372\u74E0\u7668\u7713\u77C6\u77D0\u790A\u7978\u798D\u79EE\u79F3\u7A6B\u7BE7\u8020\u802F\u8158\u8195\u81DB\u8267\u83B7\u843F\u84A6\u85FF\u8816\u8AD5\u8B0B\u8C41\u8C70\u8CA8\u8D27\u8D8A\u8D8F\u904E\u90A9\u9225\u9343\u944A\u94AC\u952A\u956C\u9584\u96BB\u96D8\u970D\u9743\u9A1E\u9B4A",
  hui: "\u4F1A\u4F6A\u50E1\u5136\u532F\u5349\u53C0\u54B4\u54D5\u5599\u5612\u5645\u5655\u5666\u5696\u56D8\u56DE\u56EC\u571A\u5815\u58AE\u58DE\u5A4E\u5A88\u5B48\u5BED\u5C77\u5E51\u5EC6\u5EFB\u5EFD\u5F57\u5F59\u5F5A\u5F8A\u5FBB\u5FBD\u605A\u605B\u6062\u6075\u6094\u60E0\u6167\u6193\u61F3\u62FB\u6325\u63EE\u649D\u6656\u6666\u6689\u66B3\u6703\u6867\u6932\u694E\u69E5\u6A5E\u6A85\u6A93\u6A9C\u6AD8\u6BC0\u6BC1\u6BC7\u6C47\u6CAC\u6CCB\u6D03\u6D04\u6D4D\u6DA3\u6E4F\u6E83\u6ED9\u6F53\u6FAE\u6FCA\u7008\u7070\u7073\u70DC\u70E0\u70E3\u70E9\u7147\u7152\u71EC\u71F4\u7369\u73F2\u743F\u74A4\u74AF\u75D0\u7623\u7693\u772D\u7762\u7773\u77BA\u7988\u79FD\u7A62\u7BF2\u7D75\u7E62\u7E6A\u7ED8\u7F0B\u7FD9\u7FDA\u7FEC\u7FFD\u8294\u8334\u835F\u8490\u8527\u8559\u8588\u8589\u85F1\u862C\u8633\u866B\u867A\u8698\u86D4\u86D5\u8716\u879D\u87EA\u8886\u8918\u8958\u8A6F\u8A7C\u8AA8\u8AF1\u8B53\u8B6D\u8B6E\u8B7F\u8BB3\u8BD9\u8BF2\u8C57\u8CC4\u8D3F\u8F1D\u8F20\u8F89\u8FDD\u8FF4\u9025\u9055\u928A\u93F8\u942C\u95E0\u9613\u9693\u96B3\u9767\u97BC\u97CB\u97E2\u97E6\u982E\u986A\u992F\u9BB0\u9C34\u9EBE\u9F3F\u9F40",
  kuai: "\u4F1A\u4FA9\u5080\u5108\u51F7\u54D9\u5672\u5726\u5757\u584A\u58A4\u5DDC\u5EE5\u5FEB\u64D3\u65DD\u6703\u6D4D\u6FAE\u72EF\u736A\u74AF\u7B77\u7CE9\u810D\u81BE\u8489\u84AF\u8562\u90D0\u9136\u99C3\u9B20\u9B41\u9C60\u9C99",
  kuo: "\u4F1A\u5233\u54D9\u564B\u5672\u5ED3\u61D6\u6269\u62E1\u62EC\u6304\u64F4\u6703\u681D\u6870\u6F37\u6FF6\u71ED\u7225\u79F3\u7B48\u843F\u8440\u86DE\u9002\u909D\u913A\u95CA\u9614\u9729\u979F\u97B9\u97D5\u9822\u9AFA\u9B20",
  zu: "\u4F1C\u4F39\u4FCE\u5005\u50B6\u5346\u5352\u54EB\u5550\u5601\u5CA8\u5D12\u5D2A\u5F82\u601A\u65CF\u67E4\u6CAE\u6DEC\u723C\u73C7\u7820\u7956\u79DF\u7A21\u7BA4\u7D23\u7D44\u7DB7\u7EC4\u82F4\u83F9\u8445\u84A9\u8A5B\u8B2F\u8BC5\u8DB1\u8DB2\u8DB3\u8E24\u8E3F\u8E74\u9243\u924F\u9250\u930A\u9390\u93BA\u93C3\u947F\u955E\u963B\u977B\u9847\u99D4\u9A75",
  che: "\u4F21\u4FE5\u5056\u52F6\u546B\u5513\u55A2\u577C\u591A\u591B\u5972\u5B85\u5C3A\u5C6E\u5F7B\u5FB9\u626F\u63A3\u63CA\u6470\u64A4\u64A6\u65A5\u6C60\u6F88\u70E2\u70F2\u710E\u7221\u77AE\u7817\u7868\u7869\u8045\u8397\u86FC\u8A40\u8B35\u8ECA\u8F66\u8FE0\u9819",
  chen: "\u4F27\u4FB2\u5096\u512D\u55D4\u56AB\u582A\u5861\u586B\u5875\u588B\u5926\u5BB8\u5C18\u5E18\u5FF1\u6116\u62BB\u6375\u63E8\u6550\u6668\u66DF\u6795\u686D\u68E7\u68FD\u6987\u6A04\u6A59\u6AEC\u6C88\u6C89\u6E5B\u700B\u70E5\u7141\u741B\u75A2\u75B9\u760E\u7628\u7708\u778B\u7876\u789C\u78E3\u79E4\u79F0\u7A31\u7D9D\u7E1D\u7F1C\u809C\u80C2\u81E3\u831E\u8380\u8390\u852F\u85BC\u87B4\u886C\u896F\u8A26\u8AC3\u8AF6\u8B13\u8B32\u8B96\u8C0C\u8C36\u8CDD\u8D02\u8D81\u8D82\u8DBB\u8DC8\u8E38\u8ED9\u8FB0\u8FE7\u90F4\u91A6\u9202\u9356\u95D6\u95EF\u9648\u9673\u9703\u9DD0\u9E8E\u9F53\u9F54\u9F80",
  xun: "\u4F28\u4F9A\u5071\u52CB\u52DB\u52F2\u52F3\u5342\u54B0\u5640\u565A\u5691\u5743\u57D9\u5864\u58CE\u58E6\u595E\u59F0\u5B59\u5B6B\u5BFB\u5C0B\u5CCB\u5DE1\u5DFD\u5EF5\u5F50\u5F87\u5FAA\u6042\u609B\u613B\u63D7\u648F\u6533\u65EC\u66DB\u674A\u6812\u686A\u68AD\u6A33\u6B89\u6BBE\u6BE5\u6C5B\u6D12\u6D35\u6D54\u6D5A\u6F6D\u6F6F\u6FEC\u7065\u7104\u7147\u718F\u71C2\u71C5\u71D6\u71FB\u720B\u7213\u72E5\u72FB\u736F\u73E3\u7495\u7734\u77C4\u7A04\u7AA8\u7B4D\u7B7C\u7BD4\u7D03\u7D62\u7E81\u7EDA\u81D0\u8340\u8364\u8368\u8477\u8512\u8541\u8548\u85AB\u85B0\u860D\u87EB\u87F3\u8951\u8A0A\u8A13\u8A19\u8A62\u8BAD\u8BAF\u8BE2\u8CD0\u8FC5\u8FFF\u900A\u9021\u9041\u905C\u90C7\u9129\u91BA\u9442\u946B\u9868\u99B4\u99E8\u9A6F\u9C4F\u9C58\u9C9F\u9DBD",
  bai: "\u4F2F\u4F70\u5457\u5504\u5E8D\u6252\u62DC\u62DD\u6300\u636D\u6392\u63B0\u6446\u64FA\u6557\u67CF\u6822\u6D3E\u7308\u767D\u767E\u7A17\u7AE1\u7CA8\u7CBA\u7D54\u859C\u85AD\u896C\u8D01\u8D25\u9781\u97B4\u97DB",
  gu: "\u4F30\u50A6\u50F1\u51C5\u52B7\u53E4\u544A\u5471\u5495\u54CC\u5502\u5503\u5552\u55C0\u55D7\u560F\u56FA\u580C\u5903\u59D1\u5AF4\u5B64\u5C33\u5CE0\u5D13\u5D2E\u6018\u6132\u6262\u6287\u6545\u67AF\u67E7\u688F\u68DD\u6996\u69BE\u6A6D\u6ACE\u6BC2\u6C69\u6CBD\u6CD2\u6DC8\u6ED1\u6FF2\u7014\u7138\u726F\u727F\u74E0\u75FC\u768B\u76B7\u76EC\u77BD\u7872\u78C6\u797B\u7A12\u7A40\u7B1F\u7B8D\u7B9B\u7BD0\u7CD3\u7E0E\u7F5B\u7F5F\u7F96\u80A1\u80CD\u8135\u81CC\u81EF\u82E6\u82FD\u83C7\u83F0\u84C7\u85A3\u86C4\u86CA\u86CC\u8831\u89D2\u89DA\u8A41\u8BC2\u8C37\u8CC8\u8D3E\u8EF1\u8EF2\u8F42\u8F71\u8F9C\u9027\u9164\u9232\u9237\u932E\u94B4\u9522\u96C7\u980B\u9867\u987E\u9936\u9989\u9AA8\u9AB0\u9B95\u9BDD\u9CB4\u9D23\u9D60\u9DBB\u9E2A\u9E44\u9E58\u9F13\u9F14",
  ni: "\u4F31\u4F32\u4F60\u502A\u5117\u511E\u5150\u5152\u533F\u5462\u576D\u57FF\u5804\u59AE\u59B3\u5A57\u5ADF\u5B2D\u5B3A\u5B68\u5B74\u5C3C\u5C54\u5C70\u5DB7\u5F4C\u6029\u60C4\u6135\u615D\u61DD\u6290\u62B3\u62DF\u639C\u64EC\u65CE\u6635\u6672\u66B1\u67C5\u68FF\u6AB7\u6C3C\u6CE5\u6DE3\u6EBA\u6EE0\u6FD4\u6FD8\u7030\u7044\u72D4\u730A\u75C6\u7724\u7768\u7962\u79B0\u79DC\u7C7E\u7E0C\u807B\u80D2\u815D\u817B\u81A9\u81E1\u82E8\u85BF\u86AD\u86EA\u873A\u88AE\u89EC\u8ABD\u8B7A\u8C8E\u8DDC\u8F17\u8FE1\u9006\u90F3\u922E\u9268\u9448\u94CC\u957E\u96AC\u9713\u999C\u9BE2\u9CB5\u9E91\u9F6F",
  zhou: "\u4F37\u4F8F\u4F9C\u501C\u50FD\u5191\u5468\u546A\u5492\u54AE\u5541\u5544\u558C\u5599\u5663\u568B\u59AF\u5A64\u5B99\u5DDE\u5E1A\u5E9C\u5F9F\u626D\u63AB\u663C\u665D\u666D\u67DA\u6906\u6CE8\u6D00\u6D32\u6DCD\u70BF\u70D0\u73D8\u7503\u759B\u76B1\u76BA\u76E9\u776D\u77EA\u78A1\u795D\u7B92\u7C40\u7C52\u7C55\u7C99\u7CA5\u7D02\u7D2C\u7E10\u7E47\u7EA3\u7EC9\u7FE2\u8098\u80C4\u80D5\u821F\u8233\u836E\u83F7\u8464\u85B5\u8A4B\u8A76\u8ABF\u8ACF\u8B05\u8B78\u8BCC\u8BEA\u8BF9\u8C03\u8CD9\u8D52\u8EF8\u8F08\u8F16\u8F74\u8F80\u9010\u9031\u90EE\u914E\u923E\u9282\u94C0\u970C\u99CE\u99F2\u9A06\u9A36\u9A5F\u9A7A\u9AA4\u9B3B\u9BDE\u9D43\u9E3C",
  qu: "\u4F39\u4F49\u4F62\u521E\u52AC\u531A\u5324\u5337\u533A\u5340\u53BA\u53BB\u53D6\u53E5\u547F\u5765\u5A36\u5C48\u5C96\u5CA8\u5CB4\u5D87\u5DE8\u5F06\u5FC2\u601A\u6188\u620C\u6235\u62BE\u657A\u65AA\u66F2\u6710\u6B0B\u6B2A\u6BC6\u6C0D\u6D40\u6DED\u6E20\u7048\u710C\u7496\u74A9\u766F\u77BF\u78F2\u795B\u7AD8\u7AEC\u7B41\u7C67\u7CAC\u7D36\u7D44\u7D47\u7EC4\u7FD1\u7FF5\u801D\u80CA\u80E0\u8125\u81DE\u82E3\u83C3\u844B\u8556\u8627\u86BC\u86C6\u86D0\u8721\u877A\u87B6\u87DD\u8837\u883C\u8850\u8862\u88AA\u89B0\u89B7\u89BB\u89D1\u8A53\u8A58\u8A87\u8AB3\u8BCE\u8D8B\u8D8D\u8D9C\u8DA3\u8DA8\u8DD4\u8DD9\u8DFC\u8EA3\u8EAF\u8EC0\u8EE5\u8FF2\u907D\u90E5\u9264\u943B\u947A\u95B4\u95C3\u9612\u9639\u97A0\u97AB\u99C6\u99C8\u9A36\u9A45\u9A71\u9A7A\u9AF7\u9B7C\u9B88\u9C38\u9C4B\u9D1D\u9D8C\u9E1C\u9E32\u9EAE\u9EAF\u9EB4\u9EB9\u9EE2\u9F01\u9F29\u9F72\u9F8B",
  ci: "\u4F3A\u4F4C\u4F7D\u5068\u5179\u523A\u523E\u5395\u53A0\u53F8\u5470\u5472\u5559\u5790\u5832\u59D5\u5B28\u5D6F\u5D73\u5DEE\u5E9B\u5EC1\u6148\u63AA\u673F\u67B1\u67CC\u67F4\u681C\u6828\u6B21\u6B64\u6CDA\u6ECB\u6FAC\u6FE8\u73BC\u73C1\u74F7\u7506\u75B5\u7689\u78C1\u7920\u7960\u7CA2\u7CCD\u7D58\u7E12\u80D4\u8308\u8326\u8328\u8332\u8360\u83BF\u8415\u858B\u85BA\u869D\u86D3\u8785\u8786\u8800\u8A5E\u8BCD\u8CDC\u8D50\u8D7C\u8D80\u8D91\u8DD0\u8F9D\u8F9E\u8FA4\u8FAD\u9236\u96CC\u98FA\u9908\u9AB4\u9ACA\u9B86\u9D1C\u9DBF\u9DC0\u9E5A\u9F79",
  beng: "\u4F3B\u4FF8\u508D\u50B0\u552A\u55D9\u5623\u57C4\u57F2\u580B\u5874\u595F\u5D29\u5D6D\u5E73\u62A8\u6337\u6412\u65C1\u699C\u6CF5\u6F28\u71A2\u7423\u742B\u750F\u752D\u75ED\u794A\u7D63\u7DB3\u7E43\u7EF7\u83F6\u868C\u8DF0\u8E66\u8FF8\u902C\u930B\u93F0\u955A\u958D\u979B",
  ga: "\u4F3D\u5477\u5496\u560E\u5620\u5676\u5939\u5C15\u5C1C\u5C2C\u65EE\u738D\u80F3\u8ECB\u8F67\u91D3\u9337\u9486\u9B40",
  chi: "\u4F41\u4F88\u4F99\u4FFF\u50BA\u525F\u52C5\u5319\u5359\u5376\u53F1\u53FA\u5403\u544E\u546C\u546E\u5479\u54C6\u54E7\u5578\u557B\u559C\u55AB\u55E4\u5628\u562F\u5644\u566D\u5758\u577B\u5791\u5880\u5953\u5979\u599B\u5AB8\u5C3A\u5C5F\u5CBB\u5F1B\u5F68\u5F72\u5F73\u5FB2\u605C\u6065\u6157\u6178\u618F\u61D8\u6261\u62AC\u62B6\u62C6\u62D5\u62D6\u62F8\u6301\u6347\u63D0\u640B\u645B\u6474\u6521\u6555\u65A5\u6758\u67C5\u67E2\u6A06\u6B3C\u6B57\u6B6D\u6B6F\u6C56\u6C60\u6CB1\u6CB6\u6CBB\u6CDC\u6DD4\u6E41\u6EDE\u6EEF\u6F26\u707B\u70BD\u70FE\u71BE\u72CB\u74FB\u75D3\u75F4\u75F8\u7608\u761B\u7661\u7719\u7735\u779D\u7947\u79BB\u79FB\u7AFE\u7B1E\u7B42\u7B88\u7B8E\u7BEA\u7C9A\u7CE6\u7D7A\u7FC4\u7FC5\u7FE4\u7FE8\u801B\u803B\u8094\u80DD\u80E3\u80F5\u812A\u815F\u82AA\u830C\u832C\u834E\u8389\u83ED\u8687\u86A9\u86B3\u86C7\u876D\u87AD\u88B2\u88B3\u88ED\u892B\u8A35\u8A80\u8A83\u8ABA\u8B18\u8B3B\u8C49\u8CBE\u8D64\u8D7F\u8D8D\u8D90\u8DA9\u8DC5\u8DE2\u8DEE\u8E05\u8E1F\u8E36\u8EE7\u8FDF\u8FE1\u8FE3\u9045\u905F\u906B\u9072\u908C\u90D7\u9253\u9279\u9290\u9349\u96E2\u96F4\u98ED\u98FE\u991D\u994E\u996C\u9970\u99B3\u9A3A\u9A6A\u9A70\u9A8A\u9B51\u9CF7\u9D1F\u9D44\u9D63\u9D92\u9D97\u9D99\u9DD8\u9E31\u9EB6\u9ED0\u9F52\u9F5D\u9F7F",
  tian: "\u4F43\u500E\u5172\u5178\u541E\u5451\u553A\u55D4\u5861\u586B\u5929\u5A17\u5A56\u5BD8\u5C47\u5FDD\u606C\u60BF\u6375\u63AD\u6437\u666A\u681D\u6B84\u6CBA\u6CBE\u6DDF\u6DFB\u6E49\u6EC7\u7420\u7471\u74B3\u751B\u751C\u7530\u7538\u753A\u7547\u754B\u7551\u7560\u75F6\u76F7\u7753\u777C\u778B\u78B5\u78CC\u7AB4\u7D3E\u7DC2\u80CB\u8146\u8211\u8214\u821A\u82EB\u83FE\u8695\u86BA\u89A5\u89CD\u8CDF\u915F\u923F\u929B\u932A\u9369\u93AD\u93AE\u94BF\u94E6\u9518\u9547\u95D0\u9617\u9754\u975D\u9766\u985A\u985B\u98A0\u9902\u9D2B\u9DC6\u9DCF\u9EC7",
  tan: "\u4F46\u5013\u509D\u50CB\u5103\u53F9\u5574\u55FF\u5606\u563D\u563E\u574D\u575B\u5766\u57EE\u58B0\u58B5\u58C7\u58DC\u5A52\u5F39\u5F3E\u5F48\u5FD0\u6039\u60D4\u619B\u61B3\u61BB\u63A2\u63B8\u644A\u64A2\u64A3\u64F9\u6524\u6619\u66BA\u66C7\u6983\u6A5D\u6A80\u6B4E\u6BEF\u6C88\u6DE1\u6E5B\u6E60\u6EE9\u6F22\u6F6C\u6F6D\u6FB9\u7058\u708E\u70AD\u74AE\u75D1\u75F0\u762B\u7649\u7671\u78B3\u79AA\u7DC2\u7E75\u7F48\u7F4E\u80C6\u8211\u8214\u8215\u8368\u83FC\u8541\u8548\u85EB\u8892\u88E7\u8962\u8983\u8AC7\u8B5A\u8B60\u8C08\u8C2D\u8C9A\u8CAA\u8CE7\u8D2A\u8D55\u90EF\u9188\u9193\u91B0\u926D\u931F\u94BD\u952C\u9561\u9843\u9924\u9DE4\u9EEE",
  qia: "\u4F49\u50F9\u51BE\u5361\u54AD\u5736\u5BA2\u5E22\u6070\u6118\u62B2\u62E4\u6308\u6390\u63E2\u6433\u64D6\u696C\u6B8E\u6D3D\u75B4\u77FB\u7848\u78CD\u7D5C\u845C\u88B7\u8DD2\u9160\u9790\u9AC2\u9B9A\u9C92",
  shao: "\u4F4B\u524A\u52AD\u52FA\u5372\u53EC\u54E8\u5A0B\u5C11\u5F30\u62DB\u634E\u641C\u65D3\u6753\u67D6\u68A2\u6EB2\u6F72\u70E7\u713C\u71D2\u71FF\u73BF\u7744\u7A0D\u7B24\u7B72\u7D39\u7D83\u7DA4\u7ECD\u7EE1\u8244\u828D\u82D5\u83A6\u8414\u8437\u8571\u86F8\u8891\u8F0E\u90B5\u9798\u97A9\u97D2\u97F6\u98B5\u9AFE\u9BB9",
  zhao: "\u4F4B\u5146\u53EC\u5541\u5545\u5632\u5797\u59B1\u5DF6\u627E\u62DB\u65D0\u662D\u6641\u66CC\u671D\u679B\u6843\u68F9\u6AC2\u6CBC\u6DD6\u6FEF\u70A4\u7167\u71F3\u722A\u722B\u72E3\u7475\u76BD\u76C4\u7740\u77BE\u7ABC\u7B0A\u7B8C\u7F40\u7F69\u7F84\u8081\u8087\u8088\u83EC\u8457\u86A4\u8A54\u8B3F\u8BCF\u8D75\u8D99\u91D7\u91FD\u924A\u9363\u948A\u99CB\u9BA1\u9CED\u9F02\u9F0C",
  ben: "\u4F53\u5034\u55AF\u574C\u592F\u5932\u5954\u5959\u6379\u64AA\u672C\u6873\u694D\u6CCD\u6E00\u7083\u71CC\u7287\u7356\u755A\u7B28\u7FC9\u82EF\u87E6\u8CC1\u8D32\u8F3D\u9029\u931B\u943C\u951B",
  ti: "\u4F53\u4FF6\u501C\u504D\u5243\u5254\u5397\u5551\u557C\u55C1\u568F\u5694\u5943\u59FC\u5A82\u5A9E\u5C49\u5C5C\u5D39\u5D5C\u5F1A\u5F1F\u5FA5\u5FB2\u608C\u6090\u60D5\u60D6\u60FF\u623B\u624C\u6298\u632E\u63A6\u63D0\u63E5\u64FF\u662F\u66FF\u684B\u68AF\u68E3\u6974\u6B52\u6BA2\u6D1F\u6D95\u6E27\u6F3D\u72C4\u73F6\u7445\u74CB\u7747\u78AE\u78C3\u79B5\u7A0A\u7A49\u7C4A\u7D88\u7DF9\u7EE8\u7F07\u7F64\u8086\u82D0\u8351\u855B\u8599\u8652\u876D\u87EC\u8879\u88FC\u8905\u8906\u8A46\u8AE6\u8B15\u8BCB\u8C1B\u8DA7\u8DAF\u8DC3\u8E22\u8E36\u8E44\u8E4F\u8E8D\u8EB0\u8EC6\u8FBE\u8FCF\u8FD6\u9016\u9037\u9046\u9069\u918D\u92BB\u932B\u9357\u941F\u9511\u9521\u984C\u9898\u9A20\u9AB5\u9AD4\u9AE2\u9AF0\u9B00\u9B04\u9BA7\u9BB7\u9BF7\u9CC0\u9D3A\u9D5C\u9D97\u9D99\u9DC8\u9DC9\u9DE4\u9E48",
  he: "\u4F55\u4F6B\u52BE\u5408\u5413\u5459\u5475\u547C\u548A\u548C\u54BC\u54C8\u54EC\u555D\u559B\u559D\u55C3\u55D1\u55EC\u5648\u5687\u578E\u58D1\u59C0\u5BB3\u5BC9\u5CC6\u60D2\u6112\u62B2\u630C\u63ED\u6546\u66F7\u67C7\u6838\u683C\u6941\u6B31\u6BFC\u6CB3\u6D3D\u6DB8\u6E07\u6E2E\u6E34\u6E7C\u6F95\u7103\u7142\u7186\u7187\u71FA\u7200\u72B5\u72E2\u764B\u76AC\u76C7\u76C9\u76CD\u76D2\u7845\u788B\u7909\u79BE\u79F4\u7BD5\u7C7A\u7CAD\u7D07\u7E73\u7EA5\u7F34\u7FEE\u7FEF\u82DB\u8377\u83CF\u8402\u85C3\u85FF\u86B5\u874E\u879B\u881A\u8894\u8910\u8988\u8A36\u8A38\u8A65\u8B1E\u8BC3\u8C88\u8C89\u8CC0\u8D3A\u8D6B\u8F05\u8F44\u8F82\u8F96\u90C3\u924C\u9449\u95A1\u95D4\u9602\u960B\u9616\u96BA\u970D\u974D\u974E\u974F\u97A8\u981C\u988C\u9904\u9932\u9978\u9B29\u9B7A\u9C84\u9D60\u9DA1\u9DAE\u9DB4\u9E16\u9E44\u9E56\u9E64\u9EA7\u9F43\u9F55\u9F81\u9FA2",
  she: "\u4F58\u538D\u5399\u5953\u5962\u5C04\u5F3D\u6151\u6174\u61FE\u6298\u62B4\u62FE\u6315\u6368\u63F2\u6442\u6444\u6475\u651D\u6AA8\u6B07\u6B59\u6D89\u6DBB\u6E09\u6EE0\u7044\u731E\u756C\u7572\u776B\u789F\u78FC\u793E\u8042\u8076\u820C\u820D\u820E\u8449\u850E\u8675\u86C7\u86DE\u86E5\u8802\u8A2D\u8BBE\u8CD2\u8CD6\u8D4A\u8D66\u8F0B\u95CD\u9607\u97A8\u97D8\u9A07\u9E9D",
  tu: "\u4F59\u514E\u5154\u51C3\u51F8\u5410\u550B\u555A\u56F3\u56FE\u5716\u5717\u571F\u5721\u580D\u5817\u5857\u58BF\u5B8A\u5C60\u5CF9\u5D5E\u5D80\u5EA9\u5EDC\u5F92\u6022\u6087\u6348\u6378\u63EC\u6455\u6581\u675C\u688C\u6AA1\u6C62\u6D82\u6D8B\u6E65\u6F73\u7479\u75DC\u760F\u79BF\u79C3\u7A0C\u7A81\u7B61\u815E\u816F\u837C\u83B5\u83DF\u8456\u84A4\u8D83\u8DCC\u8DFF\u8FCC\u9014\u9174\u91F7\u922F\u92C0\u92F5\u934E\u948D\u999F\u99FC\u9D4C\u9D5A\u9D75\u9D9F\u9DCB\u9DF5\u9F35",
  die: "\u4F5A\u53E0\u54A5\u54CB\u5551\u558B\u57A4\u581E\u5CCC\u5D3C\u5D7D\u5E49\u6022\u604E\u60F5\u621C\u6303\u6315\u63F2\u6633\u66E1\u67E3\u696A\u69E2\u6B9C\u6C0E\u6CC6\u6D89\u6E09\u6E2B\u7239\u7243\u7252\u74DE\u7573\u7582\u7589\u758A\u7723\u7730\u789F\u7A92\u7D70\u7ED6\u800A\u800B\u80C5\u81F3\u81F7\u8253\u82F5\u8728\u8776\u87B2\u890B\u8936\u893A\u8A44\u8ADC\u8C0D\u8D83\u8DCC\u8DD5\u8DEE\u8E22\u8E2E\u8E40\u8E5B\u8EFC\u8F76\u8FED\u9421\u9435\u957B\u97A2\u9B99\u9C08\u9C28\u9CBD\u9CCE",
  gou: "\u4F5D\u508B\u5193\u52FE\u533A\u5340\u53E5\u5474\u5778\u57A2\u591F\u5920\u59E4\u5ABE\u5CA3\u5F40\u6285\u62D8\u6406\u6480\u6784\u67B8\u69CB\u6C9F\u6CC3\u6E9D\u7179\u72D7\u73BD\u7B31\u7BDD\u7C3C\u7DF1\u7F11\u8007\u8008\u8009\u82DF\u8329\u86BC\u88A7\u8920\u89AF\u89CF\u8A3D\u8A6C\u8BDF\u8C70\u8C7F\u8CFC\u8D2D\u8EE5\u9058\u920E\u9264\u94A9\u96CA\u97B2\u97DD\u9B88\u9D1D\u9E1C\u9E32",
  kou: "\u4F5D\u51A6\u527E\u52B6\u53E3\u53E9\u59AA\u5AD7\u5BBC\u5BC7\u5F44\u6010\u6263\u62A0\u630E\u6473\u6542\u6BC6\u6E9D\u6EF1\u770D\u7717\u7789\u7798\u7A9B\u7AD8\u7B58\u7C06\u82A4\u8320\u8532\u853B\u91E6\u93C2\u9DC7",
  ning: "\u4F5E\u4FAB\u511C\u51B0\u51DD\u549B\u5680\u5B23\u5B81\u5BCD\u5BD5\u5BD7\u5BDC\u5BE7\u5E74\u62E7\u64F0\u6518\u67E0\u6A63\u6AB8\u6CDE\u6F9D\u6FD8\u72DE\u7370\u752F\u7591\u77C3\u804D\u8079\u82E7\u85B4\u944F\u9B21\u9B24\u9E0B",
  yong: "\u4F63\u4FD1\u509B\u50AD\u52C7\u52C8\u548F\u5581\u55C8\u5670\u57C7\u584E\u5889\u58C5\u5ADE\u5BB9\u5D71\u5EB8\u5EF1\u5F6E\u603A\u607F\u6080\u60E5\u6111\u6139\u6142\u6175\u62E5\u63D8\u64C1\u67E1\u6810\u69E6\u6C38\u6CF3\u6D8C\u6E67\u6EFD\u6FAD\u7049\u7245\u7528\u752C\u75C8\u7655\u7670\u783D\u7867\u799C\u7B69\u81C3\u81FE\u82DA\u848F\u8579\u86F9\u8A60\u8E0A\u8E34\u9047\u9095\u90FA\u9118\u919F\u92BF\u93DE\u955B\u96CD\u96DD\u9852\u9899\u9954\u9BD2\u9C2B\u9C45\u9CAC\u9CD9\u9DDB",
  wa: "\u4F64\u51F9\u52B8\u5493\u54C7\u5532\u5558\u55D7\u55E2\u59FD\u5A03\u5A32\u5AA7\u5C72\u5E13\u5F8D\u6316\u6432\u6528\u6C59\u6C5A\u6C61\u6D3C\u6E9B\u6F25\u74E6\u74F2\u7556\u7819\u7A75\u7A8A\u7A90\u7AAA\u8049\u817D\u8183\u86D9\u889C\u896A\u8B41\u90B7\u977A\u978B\u97C8\u97CE\u97E4\u9BAD\u9C91\u9EF3\u9F03",
  ka: "\u4F67\u5361\u547F\u5494\u5496\u54AF\u5580\u57B0\u73C8\u80E9\u8849\u88C3\u9272",
  bao: "\u4F68\u4FDD\u5124\u5228\u525D\u5265\u52F9\u52FD\u5305\u5446\u5610\u5697\u5821\u5822\u5831\u5AAC\u5AD1\u5B62\u5B80\u5B9D\u5BDA\u5BF3\u5BF6\u5FC1\u6009\u62A5\u62B1\u66B4\u66D3\u67B9\u7011\u70AE\u7172\u7206\u73E4\u7832\u7A87\u7B23\u7C3F\u7DE5\u80DE\u82DE\u83E2\u8446\u8554\u8584\u85F5\u8663\u86AB\u888C\u888D\u88D2\u88E6\u8912\u8913\u8943\u8C79\u8CF2\u8DB5\u924B\u9464\u94C7\u95C1\u96F9\u974C\u9764\u98F9\u98FD\u9971\u99C2\u9AB2\u9AF1\u9B91\u9C8D\u9CF5\u9D07\u9E28\u9F59\u9F85",
  huai: "\u4F6A\u5212\u54B6\u559F\u5633\u5733\u574F\u576F\u58CA\u58DE\u5F8A\u6000\u61D0\u61F7\u69D0\u6AF0\u6DEE\u7024\u8032\u8639\u863E\u8922\u8931\u8E1D",
  lao: "\u4F6C\u50D7\u50DA\u52B3\u52B4\u52DE\u54BE\u54F0\u5520\u55E0\u5610\u562E\u59E5\u5AEA\u5D02\u5D97\u6045\u61A5\u61A6\u635E\u6488\u64A9\u6725\u6833\u6A51\u6A6F\u6D76\u6D9D\u6F66\u6F87\u70D9\u7262\u72EB\u7360\u73EF\u75E8\u7646\u7853\u78F1\u7A82\u7C29\u7CA9\u7D61\u7EDC\u8001\u8022\u802E\u8356\u843D\u84FC\u86EF\u87E7\u8EC2\u8F51\u916A\u91AA\u92A0\u9412\u94D1\u94F9\u985F\u9ADD\u9BB1",
  ming: "\u4F72\u51A5\u51D5\u540D\u547D\u59F3\u5AC7\u614F\u63B5\u660E\u669D\u6719\u69A0\u6D3A\u6E9F\u733D\u76DF\u7700\u7733\u7791\u8317\u840C\u84C2\u879F\u89AD\u8A7A\u910D\u9169\u9298\u94ED\u9CF4\u9E23",
  hen: "\u4F77\u54CF\u5677\u5F88\u6068\u62EB\u6380\u72E0\u75D5\u826E\u8A6A\u978E",
  quan: "\u4F7A\u5168\u5238\u529D\u52E7\u52F8\u5377\u5573\u5708\u570F\u5733\u57E2\u59FE\u5A58\u5B49\u5CD1\u5DCF\u5DFB\u5F2E\u606E\u609B\u60D3\u62F3\u62F4\u6372\u643C\u6743\u6812\u684A\u68EC\u6926\u697E\u69EB\u6A29\u6B0A\u6C71\u6CC9\u6D24\u6E76\u7065\u70C7\u7276\u7277\u7288\u72AC\u72AD\u737E\u742F\u7454\u753D\u754E\u75CA\u77D4\u7842\u7B4C\u7D14\u7D5F\u7DA3\u7E13\u7EAF\u7EFB\u8143\u8343\u8472\u8647\u8737\u8838\u89E0\u8A6E\u8B1C\u8B54\u8BE0\u8DE7\u8E21\u8F07\u8F81\u9144\u919B\u9293\u9409\u94E8\u95CE\u97CF\u9874\u98A7\u99E9\u9A21\u9B08\u9C01\u9CC8\u9E1B\u9E73\u9F64",
  tiao: "\u4F7B\u5135\u54B7\u5541\u59DA\u5B25\u5BA8\u5CA7\u5CB9\u5EA3\u604C\u6311\u65A2\u65EB\u6640\u6713\u6737\u6761\u6843\u689D\u6A24\u773A\u7952\u7967\u7A20\u7A95\u7AB1\u7B24\u7C9C\u7CF6\u7D69\u804E\u8101\u8129\u825E\u8280\u82D5\u8414\u84DA\u84E7\u84E8\u8729\u87A9\u899C\u8A82\u8ABF\u8C03\u8D85\u8D92\u8DA0\u8DF3\u8E14\u8FE2\u929A\u92DA\u93A5\u94EB\u9797\u982B\u9AEB\u9BC8\u9C37\u9CA6\u9F60\u9F86",
  xiao: "\u4F7C\u4FBE\u4FCF\u4FF2\u509A\u524A\u52B9\u53DC\u53DF\u53F7\u547A\u547C\u54B2\u54BB\u54D3\u54E8\u54EE\u5520\u552C\u554B\u5578\u55C3\u560B\u5610\u5628\u562E\u562F\u5635\u56A3\u56BB\u56C2\u59E3\u5A4B\u5B5D\u5BAF\u5BB5\u5C0F\u5D24\u5EA8\u5F47\u6054\u6077\u61A2\u6320\u634E\u63F1\u641C\u6493\u64A8\u6548\u6569\u6585\u6586\u6653\u6681\u66C9\u67AD\u67B5\u6821\u689F\u68A2\u6A5A\u6AF9\u6B4A\u6B52\u6B57\u6BBD\u6BCA\u6D28\u6D88\u6D8D\u6DC6\u6EE7\u6F3B\u6F47\u6F5A\u6FA9\u701F\u7071\u7072\u70CB\u7107\u7187\u71BD\u71C6\u71FA\u723B\u72E1\u7307\u735F\u7362\u75DA\u75DF\u769B\u76A2\u7744\u785D\u7863\u7A58\u7A99\u7B11\u7B39\u7B71\u7B7F\u7BAB\u7BBE\u7BE0\u7C18\u7C2B\u7D5E\u7D83\u7E3F\u7EDE\u7EE1\u7FDB\u8096\u80F6\u8129\u81AE\u828D\u832D\u83A6\u8427\u8437\u856D\u8582\u85C3\u8648\u8653\u86F8\u87C2\u87CF\u87F0\u8828\u8A24\u8A68\u8A9F\u8AB5\u8B0F\u8B1E\u8B3C\u8B4A\u8E03\u8F03\u8F47\u8F83\u900D\u90E9\u92B7\u9500\u9704\u98B5\u9A37\u9A4D\u9A55\u9A81\u9A84\u9A9A\u9AB9\u9AC7\u9AD0\u9B48\u9D1E\u9D35\u9D41\u9DCD\u9DD5\u9E2E",
  xing: "\u4F80\u5016\u5174\u5211\u54D8\u5753\u5759\u578B\u57B6\u5842\u59D3\u5A19\u5A5E\u5AC8\u5B39\u5DE0\u5E78\u5F62\u6027\u60BB\u60FA\u64E4\u661F\u66D0\u674F\u6D10\u6DAC\u6ECE\u714B\u7192\u72CC\u7329\u7446\u76A8\u7701\u7772\u7814\u784E\u784F\u7BB5\u7BC2\u7DC8\u80DC\u8165\u81D6\u8208\u8347\u8365\u8395\u86F5\u884C\u88C4\u89EA\u89F2\u8B03\u90A2\u90C9\u9192\u9203\u9276\u9292\u92DE\u9498\u94CF\u9649\u9658\u9933\u9967\u9A02\u9A8D\u9B8F\u9BF9",
  kan: "\u4F83\u5058\u519A\u51F5\u520A\u52D8\u558A\u574E\u57F3\u582A\u583F\u586A\u5888\u5D01\u5D41\u5D4C\u60C2\u6221\u627B\u681E\u69DB\u6ABB\u6B3F\u6B41\u76E3\u770B\u77B0\u77D9\u780D\u78AA\u78E1\u7AF7\u83B0\u83B6\u859F\u884E\u8B7C\u8F21\u8F31\u8F41\u8F57\u95DE\u961A\u976C\u9851\u9921\u9985\u9F95\u9F9B",
  lai: "\u4F86\u4FEB\u5008\u52D1\u53B2\u553B\u5A15\u5A61\u5D03\u5D0D\u5EB2\u5F95\u5FA0\u61F6\u650B\u6765\u68BE\u68F6\u6AF4\u6D9E\u6DF6\u6FD1\u7028\u702C\u730D\u741C\u765E\u7669\u7750\u775E\u7B59\u7B82\u7C41\u7C5F\u83B1\u840A\u85FE\u8970\u8ABA\u8CDA\u8CF4\u8D49\u8D56\u9028\u90F2\u91D0\u9338\u94FC\u983C\u9842\u9A0B\u9BE0\u9D63\u9D86\u9EB3\u9EE7",
  hua: "\u4F89\u5212\u5283\u5290\u5316\u534E\u542A\u54C7\u54D7\u5629\u57D6\u59E1\u5A72\u5A73\u5AFF\u5B05\u5B66\u5B78\u5D0B\u627E\u6433\u6466\u64B6\u654C\u6779\u6866\u691B\u69EC\u6A3A\u6AB4\u6D4D\u6ED1\u6F85\u6FAE\u733E\u736A\u748D\u753B\u756B\u7575\u7809\u7874\u78C6\u7A1E\u7CBF\u7CC0\u7E63\u8142\u8219\u82B1\u82B2\u83EF\u848D\u8550\u8624\u8633\u8796\u89DF\u8A71\u8AAE\u8AD9\u8AE3\u8B41\u8B6E\u8BDD\u8C41\u8F20\u91EA\u91EB\u92D8\u9335\u93F5\u94E7\u9A4A\u9A85\u9B64\u9BAD\u9C91\u9DE8\u9ECA",
  kua: "\u4F89\u54B5\u57AE\u5938\u59F1\u6057\u630E\u6647\u6947\u7D53\u80EF\u823F\u83EF\u8550\u8894\u8A87\u8DE8\u9299\u9301\u951E\u985D\u9ABB\u9AC1",
  guang: "\u4F8A\u4FC7\u50D9\u5149\u54A3\u5799\u59EF\u5E7F\u5E83\u5EE3\u604D\u6269\u6304\u6497\u64F4\u6844\u6A2A\u6ACE\u6B1F\u6D38\u6F62\u706E\u7097\u709A\u709B\u70E1\u72B7\u7377\u73D6\u7844\u80F1\u81E6\u81E9\u832A\u8DAA\u8F04\u8FCB\u901B\u92A7\u9EC6",
  lie: "\u4F8B\u5008\u5120\u51BD\u5217\u52A3\u52A6\u52BD\u54A7\u54F7\u57D2\u57D3\u594A\u59F4\u5CE2\u5DC1\u5DE4\u5FDA\u6312\u6318\u6369\u64F8\u6817\u68D9\u6AD1\u6BDF\u6D0C\u6D56\u70C8\u70EE\u716D\u71E4\u7204\u7209\u72A3\u730E\u731F\u7375\u7759\u7D9F\u8057\u811F\u818A\u81D8\u8322\u86DA\u88C2\u8D94\u8E90\u8FFE\u908B\u98B2\u9B1B\u9B23\u9BA4\u9C72\u9D37",
  mi: "\u4F8E\u5196\u519E\u51AA\u5298\u54AA\u54CB\u5627\u5853\u5B4A\u5B93\u5BBB\u5BC6\u5C12\u5C13\u5C14\u5CDA\u5E42\u5E4E\u5E66\u5E7A\u5F25\u5F2D\u5F4C\u6202\u6469\u6475\u64DF\u64F5\u6520\u6549\u6993\u6A12\u6AB7\u6AC1\u6C68\u6C95\u6CB5\u6CCC\u6D23\u6DE7\u6E33\u6E9F\u6EF5\u6F1E\u6FD4\u6FD7\u7030\u7056\u7190\u7222\u723E\u7315\u736F\u737C\u74D5\u772B\u772F\u773D\u7787\u77B4\u7955\u7962\u79B0\u79D8\u7A48\u7C1A\u7C4B\u7C73\u7C8E\u7CDC\u7CF8\u7E3B\u7F59\u7F83\u7F8B\u8112\u8288\u82FE\u845E\u84BE\u84C2\u851D\u8524\u85CC\u863C\u871C\u8746\u88AE\u8993\u8994\u899B\u89C5\u8A78\u8B0E\u8B10\u8C1C\u8C27\u8F9F\u8FF7\u919A\u91BE\u91BF\u91C4\u92A4\u9456\u957E\u9761\u9E0D\u9E8A\u9E8B\u9E9B\u9F0F",
  an: "\u4F92\u4FFA\u5111\u533C\u5382\u5388\u54B9\u5535\u557D\u57B5\u57BE\u57EF\u5813\u5A69\u5A95\u5B89\u5C7D\u5CB8\u5CD6\u5E72\u5E7F\u5EB5\u6309\u63DE\u667B\u6697\u6848\u6849\u6C28\u6D1D\u72B4\u73B5\u75F7\u76D2\u76E6\u76EB\u78AA\u7F6F\u80FA\u8164\u834C\u83F4\u843B\u844A\u84ED\u88FA\u8A9D\u8AF3\u8C19\u8C7B\u8C8B\u9043\u9257\u92A8\u930C\u94B3\u94F5\u95C7\u9670\u9682\u968C\u96F8\u978C\u978D\u97FD\u9807\u981E\u9878\u99A3\u9B9F\u9D33\u9D6A\u9D95\u9E4C\u9EEF",
  lu: "\u4F93\u50C7\u516D\u5279\u52CE\u52E0\u5362\u5364\u55E0\u565C\u5695\u56A7\u5725\u5774\u5786\u5876\u5877\u58DA\u5A3D\u5CCD\u5E90\u5ED8\u5EEC\u5F54\u5F55\u622E\u6314\u634B\u635B\u63B3\u6445\u645D\u64B8\u64C4\u64FC\u6504\u650E\u67A6\u680C\u6902\u6A10\u6A1A\u6A79\u6AD3\u6AE8\u6C07\u6C0C\u6CF8\u6DD5\u6DE5\u6E0C\u6EE4\u6EF7\u6F09\u6F0A\u6F5E\u6F9B\u6FFE\u7002\u7018\u7089\u719D\u7210\u7379\u7388\u742D\u7490\u74B7\u74D0\u752A\u7633\u76DD\u76E7\u7769\u77D1\u7849\u7875\u788C\u78E0\u797F\u7984\u7A11\u7A4B\u7B93\u7C0F\u7C2C\u7C35\u7C36\u7C59\u7C5A\u7CB6\u7DD1\u7E91\u7EFF\u7F4F\u7FCF\u80A4\u80EA\u8194\u819A\u819F\u81DA\u822E\u823B\u8263\u826A\u826B\u82A6\u83C9\u84FC\u84FE\u850D\u8557\u8606\u8642\u864F\u865C\u87B0\u8826\u89D2\u89EE\u89FB\u8C37\u8CC2\u8D42\u8DA2\u8DEF\u8E1B\u8E57\u8F05\u8F46\u8F64\u8F73\u8F82\u8F98\u902F\u911C\u916A\u9181\u9229\u9304\u9332\u9334\u93C0\u93D5\u93F4\u942A\u9465\u946A\u9565\u9646\u9678\u9732\u9871\u9885\u9A04\u9A3C\u9AD7\u9B6F\u9B72\u9BE5\u9C73\u9C78\u9C81\u9C88\u9D3C\u9D66\u9D71\u9DFA\u9E15\u9E2C\u9E6D\u9E75\u9E7F\u9E93\u9EF8",
  mao: "\u4F94\u5183\u5187\u5190\u5192\u52D6\u52D9\u536F\u5825\u5918\u5AA2\u5CC1\u5D4D\u5E3D\u6117\u61CB\u623C\u63CF\u65C4\u6634\u6693\u6786\u6959\u6BDB\u6BE3\u6BF7\u6C02\u6CD6\u6E35\u725F\u7266\u729B\u732B\u734F\u7441\u7683\u770A\u7780\u77DB\u79CF\u7B37\u7DE2\u7F5E\u8004\u8017\u82BC\u8302\u8305\u8306\u843A\u84E9\u86D1\u8750\u8765\u87CA\u88A4\u8992\u8C87\u8C8C\u8C93\u8CBF\u8D38\u8EDE\u911A\u912E\u9155\u925A\u927E\u9328\u94C6\u951A\u973F\u9AE6\u9AF3\u9D9C",
  gong: "\u4F9B\u516C\u5171\u529F\u5311\u5314\u53B7\u54A3\u551D\u55CA\u5868\u5BAB\u5BAE\u5DE5\u5DE9\u5E4A\u5EFE\u5F13\u606D\u6129\u6150\u62F1\u62F2\u653B\u675B\u6760\u6831\u6C5E\u6E31\u7195\u73D9\u78BD\u7BE2\u7CFC\u7D05\u7EA2\u7FBE\u80B1\u8679\u86A3\u86E9\u89E5\u89F5\u8CA2\u8D11\u8D1B\u8D21\u8D63\u8EAC\u8EB3\u8F01\u92BE\u978F\u9AF8\u9B5F\u9F8F\u9F94\u9F9A",
  cun: "\u4F9F\u520C\u540B\u58AB\u5B58\u5BF8\u5FD6\u62F5\u6751\u6D0A\u6D5A\u6F8A\u76B4\u7AF4\u7C7F\u8E06\u8E72\u90A8",
  lv: "\u4FA3\u4FB6\u507B\u5122\u52F4\u535B\u5362\u5415\u5442\u54F7\u578F\u58D8\u5A04\u5A41\u5BE0\u5BFD\u5C61\u5C62\u5C65\u5D42\u5E90\u5EEC\u5F8B\u616E\u617A\u634B\u65C5\u66E5\u68A0\u6988\u6A13\u6AD6\u6ADA\u6AE8\u6C00\u6C2F\u6EE4\u7112\u7208\u7387\u763B\u76E7\u779C\u7963\u7A06\u7A5E\u7A6D\u7BBB\u7BD3\u7C0D\u7D2F\u7D7D\u7DA0\u7DD1\u7E37\u7E42\u7EFF\u7F15\u8182\u8190\u81A2\u844E\u848C\u851E\u85D8\u8651\u891B\u8938\u8B31\u8EC1\u90D8\u92C1\u9332\u93E4\u9462\u94DD\u9542\u95AD\u95FE\u99BF\u9A62\u9A74\u9B6F\u9C81\u9DDC\u9E7F",
  zhen: "\u4FA6\u4FB2\u5075\u5507\u5733\u576B\u5861\u5866\u586B\u59EB\u5AC3\u5BCA\u5C52\u5E27\u5E2A\u5F2B\u614E\u6221\u62AE\u630B\u632F\u63D5\u6438\u6552\u6576\u659F\u6623\u6715\u673E\u6795\u67AE\u6815\u681A\u6862\u686D\u6939\u6968\u6990\u699B\u69C7\u6A3C\u6B9D\u6CB4\u6CB5\u6D48\u6E5E\u6EB1\u6EC7\u6F67\u6FB5\u7349\u73CD\u73CE\u7467\u7504\u755B\u75B9\u7715\u771E\u771F\u7739\u7827\u78AA\u796F\u798E\u799B\u7A39\u7AE7\u7BB4\u7C48\u7D16\u7D3E\u7D7C\u7E1D\u7E25\u7EBC\u7F1C\u8044\u80D7\u81FB\u8419\u8474\u8496\u84C1\u85BD\u8704\u8897\u88D6\u8999\u8A3A\u8AAB\u8B13\u8BCA\u8C9E\u8CD1\u8D1E\u8D48\u8D81\u8D82\u8EEB\u8F43\u8F78\u8FB4\u8FE7\u9049\u9156\u9159\u91DD\u9202\u9241\u92F4\u9331\u9356\u937C\u93AD\u93AE\u9488\u9547\u9635\u9663\u9673\u9707\u9755\u99D7\u9B12\u9B9D\u9C75\u9C9E\u9D06\u9E29\u9EEE\u9EF0\u9F0E\u9F11",
  ce: "\u4FA7\u5074\u518A\u518C\u5202\u5395\u53A0\u5884\u5AE7\u5E3B\u5E58\u5EC1\u607B\u60FB\u61A1\u62FA\u6547\u67F5\u6805\u6D4B\u6E2C\u755F\u7B27\u7B56\u7B5E\u7B74\u7BA3\u7C0E\u7CA3\u835D\u8417\u8434\u84DB\u8D66\u9F70",
  chai: "\u4FAA\u5115\u52D1\u53C9\u558D\u56C6\u5DEE\u6260\u62C6\u6413\u67E5\u67F4\u72B2\u7625\u7961\u8308\u831D\u8515\u867F\u8806\u8883\u8A0D\u8C7A\u91F5\u9497\u9F5C\u9F87",
  nong: "\u4FAC\u5102\u519C\u5494\u54DD\u5665\u5EFE\u5F04\u61B9\u630A\u6335\u6B01\u6D53\u6FC3\u7651\u79AF\u79FE\u7A60\u7E77\u8113\u81BF\u8380\u857D\u895B\u8FB2\u8FB3\u91B2\u9F48",
  hou: "\u4FAF\u5019\u539A\u540E\u543C\u543D\u5474\u5589\u5795\u5820\u5E3F\u5F8C\u6D09\u72BC\u7334\u760A\u777A\u77E6\u7BCC\u7CC7\u7FED\u7FF5\u8144\u8454\u8A6C\u8BDF\u8C5E\u9005\u90C8\u9107\u9297\u936D\u9931\u9ABA\u9B9C\u9BF8\u9C5F\u9C8E\u9C98\u9F41",
  jiong: "\u4FB0\u50D2\u5182\u518B\u518F\u56E7\u5770\u57A7\u57DB\u5BAD\u6243\u6244\u660B\u6CC2\u6D7B\u6F83\u7005\u7085\u70AF\u70F1\u715A\u715B\u7192\u71B2\u71D1\u71DB\u7A98\u7D45\u7D97\u81E6\u81E9\u860F\u8614\u8927\u8FE5\u9008\u9284\u93A3\u9848\u988E\u99C9\u99EB",
  tui: "\u4FBB\u4FC0\u50D3\u554D\u58A4\u5A27\u5C35\u5F1A\u5F1F\u5FD2\u6022\u63A8\u6A54\u717A\u7A05\u7A0E\u7A68\u8049\u812B\u812E\u8131\u817F\u84F7\u85EC\u8608\u86FB\u8715\u892A\u8B09\u8B89\u8E46\u8E6A\u8FFD\u9000\u96A4\u9839\u983A\u983D\u9893\u994B\u9988\u99FE\u9A29\u9ABD\u9B4B",
  nan: "\u4FBD\u5357\u5583\u56DD\u56E1\u59A0\u5A1A\u5A7B\u5AE8\u5F07\u6201\u62A9\u63C7\u644A\u6524\u6694\u678F\u67AC\u67DF\u6960\u6E73\u6EE9\u7058\u7175\u7537\u7558\u8169\u83AE\u8433\u877B\u8AF5\u8D67\u9056\u96BE\u96E3\u988C",
  bian: "\u4FBF\u533E\u535E\u53D8\u5909\u5C01\u5CC5\u5F01\u5FA7\u5FED\u60FC\u6241\u6283\u62DA\u63D9\u662A\u6C73\u6C74\u709E\u7178\u7251\u7335\u7371\u7502\u75BA\u782D\u78A5\u7A28\u7A39\u7A86\u7B3E\u7BAF\u7C69\u7CC4\u7DE8\u7DF6\u7F0F\u7F16\u81F1\u8251\u82C4\u8439\u85CA\u8759\u890A\u898D\u89B5\u8B8A\u8C4D\u8CB6\u8D2C\u8FA1\u8FA6\u8FA7\u8FA8\u8FA9\u8FAB\u8FAE\u8FAF\u8FB9\u904D\u9089\u908A\u90B2\u91C6\u937D\u959E\u9795\u97AD\u9828\u9ADF\u9BFE\u9BFF\u9CCA\u9D18\u9DA3",
  pian: "\u4FBF\u504F\u56E8\u5AA5\u5E73\u5FA7\u6241\u6944\u6969\u7247\u728F\u7335\u74B8\u7BC7\u7DF6\u7F0F\u7FE9\u80FC\u8141\u8439\u8759\u890A\u8991\u8ADA\u8ADE\u8C1D\u8CB5\u8CC6\u8DF0\u8E41\u8FA9\u8FAF\u99E2\u9A08\u9A17\u9A19\u9A88\u9A97\u9ABF\u9B78\u9DA3",
  chuo: "\u4FC3\u5437\u555C\u56BD\u5A15\u5A16\u5A65\u5A7C\u5B4E\u60D9\u6233\u62FA\u64C9\u65AB\u6B60\u6DB0\u6DD6\u712F\u78ED\u7BB9\u7C07\u7DB4\u7DBD\u7E5B\u7EF0\u7F00\u814F\u8343\u851F\u8DA0\u8DB5\u8DFF\u8E14\u8E31\u8E87\u8F1F\u8F8D\u8FB5\u8FB6\u9034\u916B\u919B\u92DC\u9323\u93C3\u9461\u955E\u9F6A\u9F71\u9F8A",
  ku: "\u4FC8\u5233\u53E4\u54ED\u55BE\u56B3\u5710\u5723\u5800\u5D2B\u5E93\u5EAB\u625D\u630E\u6341\u6398\u6430\u670F\u67AF\u684D\u695B\u6CCF\u7105\u72DC\u7614\u77FB\u785E\u79D9\u7A8B\u7A9F\u7D5D\u7ED4\u80D0\u82E6\u88B4\u88E4\u8932\u8DB6\u8DCD\u8DE8\u90C0\u9177\u9AB7\u9BAC\u9F41",
  jun: "\u4FCA\u5101\u519B\u52FB\u5300\u541B\u5441\u5747\u57C8\u59F0\u5BEF\u5CFB\u61CF\u6343\u6508\u65EC\u6659\u687E\u6C6E\u6D5A\u6FEC\u710C\u711E\u71C7\u72FB\u73FA\u756F\u76B2\u76B8\u76B9\u7885\u7AE3\u7B60\u7B98\u7B9F\u8399\u83CC\u8470\u8528\u8690\u8720\u8880\u89A0\u8A07\u8ECD\u90E1\u921E\u9281\u929E\u92C6\u9355\u94A7\u9656\u96BD\u96CB\u9915\u9982\u99FF\u9A8F\u9BB6\u9CAA\u9D54\u9D55\u9D58\u9E87\u9E8F\u9E95\u9F9C\u9F9F",
  shun: "\u4FCA\u542E\u5DDB\u5DE1\u5EF5\u6042\u696F\u6A53\u7734\u779A\u77A4\u77AC\u821C\u8563\u8F34\u9806\u987A\u9B0A",
  lang: "\u4FCD\u52C6\u54F4\u5525\u5577\u57CC\u5871\u5ACF\u5D00\u5ECA\u60A2\u6716\u6717\u6724\u6879\u6994\u6A03\u6A20\u6B34\u6D6A\u70FA\u72FC\u7405\u746F\u7860\u7A02\u7B64\u7FAE\u7FB9\u813C\u8246\u83A8\u8497\u84C8\u84E2\u870B\u8782\u8A8F\u8E09\u8EB4\u90CE\u90D2\u90DE\u92C3\u93AF\u9512\u95AC\u9606\u99FA",
  hun: "\u4FD2\u5031\u5702\u5A5A\u5A6B\u5FF6\u60DB\u60FD\u6141\u6325\u6346\u638D\u63EE\u6606\u660F\u662C\u68A1\u68B1\u68CD\u68D4\u6B99\u6D51\u6DBD\u6DF7\u6E3E\u6E63\u6E77\u6EB7\u7104\u711D\u73F2\u743F\u7703\u7767\u776F\u7DC4\u7DCD\u7DE1\u7E49\u7EF2\u7F17\u8364\u8477\u8512\u89E8\u8AE2\u8BE8\u8F4B\u95BD\u960D\u9850\u991B\u992B\u9984\u9B42\u9F32",
  ying: "\u4FD3\u5040\u50CC\u54FD\u5568\u55B6\u5624\u565F\u56B6\u584B\u5903\u592E\u5A74\u5A96\u5AB5\u5AC8\u5B30\u5B34\u5B46\u5B7E\u5D64\u5DC6\u5DCA\u5E94\u5EEE\u5F71\u5FDC\u6125\u61C9\u646C\u6484\u650D\u6516\u651A\u65F2\u6620\u666F\u668E\u6720\u67CD\u685C\u686F\u68AC\u6979\u6A31\u6AFB\u6AFF\u6CC2\u6D67\u6E36\u6E81\u6E8B\u6ECE\u6EE2\u6F41\u6F46\u6FD9\u6FDA\u6FF4\u7005\u701B\u7020\u702F\u7034\u7050\u705C\u7138\u7150\u7192\u71DF\u73F1\u745B\u7469\u748E\u74D4\u7507\u7516\u7538\u763F\u766D\u76C1\u76C8\u770F\u77E8\u786C\u78A4\u792F\u7A4E\u7C5D\u7C6F\u7DD3\u7E04\u7E08\u7E69\u7E93\u7EEC\u7EF3\u7F28\u7F42\u7F43\u7F4C\u803A\u81A1\u81BA\u82F1\u8314\u8365\u8367\u8396\u83B9\u83BA\u8424\u8425\u8426\u843E\u84E5\u85C0\u8621\u86CD\u8747\u8767\u877F\u87A2\u8805\u8833\u892E\u89AE\u8B0D\u8B4D\u8B7B\u8CCF\u8D0F\u8D62\u8EC8\u8FCE\u901E\u90E2\u93A3\u941B\u944D\u9533\u9719\u9795\u97F9\u97FA\u9834\u988D\u9895\u9896\u9C66\u9D2C\u9DA7\u9DAF\u9DEA\u9DF9\u9E0E\u9E1A\u9E66\u9E70",
  su: "\u4FD7\u5083\u50C1\u50F3\u5379\u55C9\u55D6\u56CC\u5731\u5732\u57E3\u5850\u5851\u5919\u5ACA\u5BBF\u612B\u612C\u619F\u637D\u642C\u6475\u6880\u68F4\u69A1\u6A0E\u6A15\u6A5A\u6AEF\u6B90\u6CDD\u6D2C\u6D91\u6EAF\u6EB8\u6F5A\u6F65\u738A\u73DF\u749B\u7526\u78BF\u7A21\u7A23\u7A24\u7A4C\u7AA3\u7C0C\u7C9B\u7C9F\u7D20\u7E24\u7E2E\u7F29\u8083\u8085\u8186\u82CF\u83A4\u850C\u85D7\u8607\u8613\u89EB\u8A34\u8B16\u8BC9\u8C21\u8D9A\u8E5C\u901F\u9061\u906C\u9165\u92C9\u9917\u9A4C\u9A95\u9BC2\u9C50\u9DEB\u9E54",
  dao: "\u4FE6\u5012\u5114\u5200\u5202\u5230\u53D7\u53E8\u5541\u5604\u5675\u58D4\u5BB2\u5BFC\u5C0E\u5C76\u5C9B\u5CF6\u5D8B\u5D8C\u5DB9\u5E31\u5E6C\u5FC9\u5FD1\u60BC\u60C6\u6363\u636F\u6417\u64E3\u6737\u6921\u69DD\u6AA4\u6AAE\u6C18\u6D2E\u6D9B\u6FE4\u7118\u71FE\u74D9\u76D7\u76DC\u7977\u7982\u79B1\u7A32\u7A3B\u7B8C\u7D69\u7E9B\u7FE2\u7FFF\u8220\u83FF\u85B5\u866D\u885C\u885F\u88EF\u8E48\u8EC7\u9053\u91BB\u91D6\u9666\u9676\u969D\u96AF\u9B5B\u9C7D\u9CE5\u9E1F",
  lia: "\u4FE9\u5006",
  pai: "\u4FF3\u54CC\u5561\u5F98\u62CD\u6392\u68D1\u6911\u6D3E\u6E43\u724C\u72A4\u7305\u7B84\u7C30\u813E\u8157\u848E\u8F2B\u8FEB\u9383",
  biao: "\u4FF5\u50C4\u5126\u527D\u5882\u5A4A\u5AD6\u5E56\u5F6A\u5FB1\u647D\u6753\u6807\u6A19\u6AA6\u6DF2\u6EEE\u6F02\u700C\u706C\u719B\u7202\u730B\u762D\u7A6E\u7BFB\u813F\u8194\u8198\u81D5\u82DE\u8508\u85E8\u8868\u88F1\u893E\u8AD8\u8B24\u8D06\u9336\u93D6\u93E2\u9463\u9556\u9573\u98AE\u98B7\u98C6\u98C7\u98C8\u98CA\u98D1\u98D9\u98DA\u9A43\u9A6B\u9A89\u9AA0\u9ADF\u9C3E\u9CD4\u9E83",
  fei: "\u4FF7\u5255\u532A\u539E\u5420\u5561\u58A2\u595C\u5983\u5A53\u5A54\u5C5D\u5E9F\u5EC3\u5EE2\u602B\u60B1\u6249\u62C2\u6590\u6632\u6683\u66CA\u670F\u676E\u67F9\u68D0\u69A7\u6A43\u6A68\u6AE0\u6CB8\u6DDD\u6E04\u6FF7\u72BB\u72D2\u7306\u7432\u75BF\u75F1\u7648\u7829\u7953\u7B30\u7BDA\u7D3C\u7DCB\u7ECB\u7EEF\u7FE1\u80A5\u80BA\u80C7\u80CF\u80D0\u8153\u82BE\u8300\u8307\u83F2\u8409\u855C\u855F\u8561\u871A\u8730\u87E6\u88F4\u88F5\u88F6\u894F\u8AB9\u8BFD\u8CBB\u8D39\u9428\u9544\u966B\u970F\u9745\u975E\u975F\u98DB\u98DD\u98DE\u9925\u99A1\u9A11\u9A1B\u9AF4\u9BE1\u9CB1\u9F23\u9F25",
  bei: "\u4FFB\u4FFE\u500D\u505D\u5079\u5099\u50C3\u5317\u5351\u5457\u54F1\u5504\u55BA\u57BB\u57E4\u5907\u5B5B\u602B\u6096\u60B2\u60EB\u6102\u618A\u63F9\u6601\u676E\u676F\u67F8\u686E\u6896\u68D1\u68D3\u6911\u6CE2\u7119\u726C\u7295\u72C8\u72FD\u73FC\u7432\u75FA\u76C3\u7891\u789A\u7999\u7B83\u7CD2\u80CC\u81C2\u82DD\u8300\u83E9\u8406\u842F\u8461\u84D3\u85E3\u86FD\u871A\u88AB\u8919\u896C\u8A96\u8AC0\u8C9D\u8D1D\u8DCB\u8EF0\u8F29\u8F88\u90B6\u9101\u9273\u92C7\u930D\u9434\u943E\u94A1\u9642\u97B4\u9AB3\u9D6F\u9E4E",
  zong: "\u500A\u5027\u506C\u50AF\u582B\u5B97\u5D4F\u5D55\u5D78\u5F9E\u603B\u60E3\u60FE\u6121\u6374\u63D4\u6403\u6460\u662E\u6721\u679E\u68D5\u6936\u6A05\u6F40\u6F48\u6F68\u719C\u71A7\u71EA\u7314\u7323\u75AD\u7632\u7882\u78EB\u7A2F\u7CBD\u7CC9\u7D9C\u7DC3\u7DCF\u7DEB\u7DF5\u7E02\u7E26\u7E31\u7E3D\u7EB5\u7EFC\u7FEA\u8159\u8250\u847C\u84D7\u84EF\u876C\u8C75\u8E28\u8E2A\u8E64\u931D\u936F\u93D3\u9441\u9A0C\u9A23\u9A94\u9B03\u9B09\u9B37\u9BEE\u9BFC",
  chui: "\u5015\u5439\u570C\u5782\u57C0\u60D9\u6376\u6425\u6858\u68F0\u690E\u69CC\u708A\u7BA0\u8144\u83D9\u90F5\u9318\u939A\u9524\u9672\u9840\u9B0C\u9B4B\u9FA1",
  zhui: "\u5015\u5760\u5782\u57C0\u589C\u5A37\u60F4\u63E3\u690E\u69CC\u6C9D\u7500\u7577\u787E\u78D3\u7908\u7B0D\u7BA0\u7DB4\u7E0B\u7F00\u7F12\u814F\u8187\u81F4\u8411\u8AC8\u8D05\u8D58\u8F5B\u8FFD\u9180\u918A\u9310\u9317\u9323\u939A\u9446\u9525\u968A\u96A7\u96B9\u991F\u9A05\u9A93\u9D7B",
  kong: "\u5025\u57EA\u5B54\u5B86\u5D06\u6050\u60BE\u63A7\u690C\u6DB3\u77FC\u787F\u7A79\u7A7A\u7B9C\u7FAB\u8154\u8EBB\u9313\u979A\u9D7C",
  juan: "\u5026\u52B5\u52CC\u52EC\u5377\u545F\u5708\u570F\u57CD\u57E2\u5946\u59E2\u5A1F\u5DB2\u5DC2\u5E23\u5F2E\u6081\u60D3\u617B\u6350\u6372\u64D0\u6718\u684A\u688B\u68EC\u6CEB\u6D93\u6DC3\u7106\u72F7\u7367\u74F9\u7504\u7729\u7737\u7743\u774A\u7760\u7D6D\u7D79\u7E33\u7EE2\u7F65\u7F82\u8127\u8143\u81C7\u83E4\u8412\u8528\u854A\u854B\u8737\u8832\u88D0\u8948\u8B82\u8E21\u8EAB\u9104\u92D1\u92D7\u9308\u93B8\u942B\u9529\u954C\u95C2\u96BD\u96CB\u96DF\u9799\u97CF\u98EC\u990B\u9D4D\u9D51\u9E43",
  song: "\u502F\u50B1\u51C7\u5405\u5A00\u5B8B\u5D27\u5D69\u5D77\u5EBA\u5FEA\u6002\u609A\u612F\u616B\u6181\u61BD\u6352\u6374\u63D4\u6457\u677E\u6780\u67A9\u67D7\u68A5\u68C7\u6964\u6AA7\u6DDE\u6F0E\u6FCD\u7879\u7AE6\u8038\u8073\u83D8\u84EF\u8634\u8719\u8A1F\u8AA6\u8BBC\u8BF5\u9001\u9376\u93B9\u9536\u980C\u9882\u9938\u99F7\u9B06",
  cai: "\u5038\u5072\u554B\u57F0\u5A47\u5BC0\u5F69\u621D\u624D\u6250\u63A1\u63CC\u6750\u68CC\u731C\u776C\u7DB5\u7E29\u7E94\u83DC\u8521\u88C1\u8CA1\u8D22\u8DF4\u8E29\u91C7",
  ruan: "\u5044\u5827\u58D6\u5A86\u5AF0\u611E\u648B\u670A\u6ABD\u6E2A\u6FE1\u71F8\u744C\u74C0\u789D\u791D\u7DDB\u800E\u815D\u8761\u8EDF\u8F2D\u8F6F\u962E\u9700",
  chong: "\u5045\u50AD\u50EE\u5145\u51B2\u55A0\u5603\u57EB\u5BA0\u5BF5\u5D07\u5D08\u5FB8\u5FE1\u6183\u61A7\u63F0\u644F\u6A01\u6C96\u6D7A\u6D8C\u6F34\u6F7C\u70DB\u721E\u73EB\u75CB\u76C5\u794C\u79CD\u7A2E\u7DDF\u7F7F\u7FC0\u8202\u825F\u8327\u833A\u866B\u8769\u87F2\u885D\u8908\u8E56\u8E71\u916E\u91CD\u9283\u94F3\u9680",
  chun: "\u5046\u50E2\u5507\u583E\u5A8B\u60F7\u65FE\u6625\u6699\u6710\u6776\u693F\u696F\u69C6\u6A41\u6AC4\u6C8C\u6D71\u6DF3\u6E7B\u6EE3\u6F18\u7289\u7443\u7776\u7BBA\u7D14\u7EAF\u80AB\u80CA\u8123\u819E\u829A\u83BC\u8405\u8436\u8493\u84F4\u877D\u8822\u8CF0\u8E33\u8F07\u8F34\u8F81\u9187\u9195\u931E\u9659\u9BD9\u9C06\u9D89\u9D9E\u9E51",
  re: "\u504C\u558F\u60F9\u637C\u6E03\u70ED\u71B1\u82E5\u8E43",
  ruo: "\u504C\u53D2\u5A7C\u5D76\u5F31\u60F9\u633C\u637C\u648B\u6949\u6E03\u6EBA\u712B\u7207\u7BAC\u7BDB\u82AE\u82E5\u84BB\u9100\u9C19\u9C2F\u9DB8",
  dang: "\u5052\u5105\u515A\u51FC\u5679\u5735\u573A\u57B1\u5834\u58CB\u5A78\u5B95\u5D35\u5D63\u5F53\u6113\u6321\u64CB\u6529\u6863\u6A94\u6B13\u6C39\u6F52\u6FA2\u7059\u70EB\u71D9\u73F0\u7452\u7497\u74AB\u74FD\u7576\u760D\u76EA\u778A\u7800\u78AD\u7911\u7B5C\u7C1C\u7C39\u8261\u8361\u83EA\u8569\u862F\u87F7\u88C6\u8960\u8B61\u8B9C\u8C20\u8DA4\u903F\u943A\u94DB\u95E3\u96FC\u9EE8",
  huang: "\u505F\u5164\u51F0\u55A4\u582D\u5843\u58B4\u595B\u5A93\u5BBA\u5D32\u5DDF\u5E4C\u5FA8\u6033\u604D\u60F6\u6130\u614C\u63D8\u6643\u6644\u66C2\u671A\u697B\u69A5\u6ACE\u6C7B\u6D38\u6E5F\u6EC9\u6F62\u70BE\u714C\u7180\u71BF\u720C\u735A\u745D\u749C\u7640\u7687\u769D\u76A9\u78FA\u7A54\u7BC1\u7C27\u7E28\u8093\u824E\u8292\u832B\u8352\u845F\u8757\u87E5\u8841\u8A64\u8AFB\u8B0A\u8C0E\u8DAA\u9051\u9360\u93A4\u9404\u953D\u968D\u97F9\u992D\u9A1C\u9C09\u9C51\u9CC7\u9DEC\u9EC3\u9EC4",
  zou: "\u5062\u594F\u5AB0\u63AB\u63CD\u640A\u65CF\u68F7\u68F8\u6971\u7B83\u7DC5\u82BB\u83C6\u8ACF\u8BF9\u8D70\u8D71\u8FB6\u90B9\u90F0\u9112\u9139\u966C\u9A36\u9A7A\u9BD0\u9BEB\u9CB0\u9EC0\u9F71\u9F7A",
  duan: "\u5073\u526C\u5845\u5A8F\u5F56\u65AD\u65B7\u6934\u6BB5\u6BC8\u7145\u7456\u77ED\u78AB\u7AEF\u7BC5\u7C16\u7C6A\u7DDE\u7F0E\u8011\u8176\u846E\u890D\u8E39\u8E96\u935B\u9374\u953B",
  ou: "\u5076\u533A\u5340\u5418\u543D\u5455\u5614\u5878\u6004\u616A\u62A0\u63E1\u6473\u657A\u6AD9\u6B27\u6B50\u6BB4\u6BC6\u6CA4\u6E25\u6F1A\u6FAB\u71B0\u74EF\u750C\u7D06\u7EA1\u8026\u8162\u8192\u84F2\u8545\u85D5\u85F2\u8B33\u8BB4\u9047\u91A7\u93C2\u9D0E\u9DD7\u9E25\u9F75",
  zan: "\u507A\u5127\u5139\u5142\u54B1\u5592\u56CB\u5BC1\u62F6\u63DD\u648D\u6512\u6522\u661D\u6682\u66AB\u685A\u6D94\u6E54\u6FFA\u6FFD\u7052\u74C9\u74D2\u74DA\u79B6\u7A73\u7BF8\u7C2A\u7C2E\u7CCC\u81E2\u8978\u8B83\u8B9A\u8CDB\u8D0A\u8D5E\u8DB1\u8DB2\u8E54\u913C\u9142\u9147\u933E\u93E8\u93E9\u9415\u941F\u9961",
  liu: "\u507B\u50C2\u516D\u5218\u5289\u56A0\u586F\u5AB9\u5B3C\u5D67\u5EC7\u61F0\u62A1\u65BF\u65C8\u65D2\u67F3\u6801\u685E\u687A\u69B4\u6A4A\u6A6E\u6CA0\u6CD6\u6CF5\u6D41\u6D4F\u6E38\u6E9C\u6F3B\u6F91\u700F\u7198\u71AE\u73CB\u7409\u7460\u746C\u74A2\u7542\u7544\u7559\u7571\u7581\u7624\u7645\u786B\u788C\u78C2\u78DF\u7DB9\u7EFA\u7F76\u7F80\u7FCF\u804A\u81A2\u848C\u84A5\u84C5\u84FC\u851E\u85F0\u87C9\u88D7\u8E53\u905B\u925A\u92F6\u938F\u93A6\u93D0\u9402\u94C6\u950D\u954F\u9560\u9646\u9678\u96E1\u9724\u98C0\u98C2\u98C5\u98D7\u993E\u998F\u99E0\u99F5\u9A2E\u9A51\u9A9D\u9B38\u9C21\u9DB9\u9DDA\u9E60\u9E68\u9E8D",
  lou: "\u507B\u50C2\u55BD\u560D\u587F\u5A04\u5A41\u5BE0\u5C5A\u5D5D\u5D81\u5ED4\u617A\u6402\u645F\u697C\u6A13\u6E87\u6F0A\u6F0F\u71A1\u7262\u750A\u7618\u763A\u763B\u779C\u7AB6\u7BD3\u7C0D\u8027\u802C\u81A2\u825B\u848C\u851E\u877C\u87BB\u8B31\u8EC1\u9071\u93E4\u9542\u964B\u9732\u97BB\u9AC5\u9ACF",
  sou: "\u5081\u51C1\u53DC\u53DF\u55D6\u55FD\u55FE\u5EC0\u5ECB\u6352\u635C\u641C\u6457\u64A8\u64DE\u64FB\u6555\u65CF\u68F7\u6AE2\u6B36\u6D91\u6EB2\u6F5A\u7340\u7636\u778D\u7C54\u8258\u8490\u84C3\u85AE\u85EA\u878B\u8B0F\u910B\u9199\u93AA\u93C9\u953C\u98BC\u98BE\u98D5\u993F\u998A\u9A2A",
  yuan: "\u5086\u5141\u5143\u51A4\u5248\u539F\u53A1\u53B5\u5458\u54BD\u54E1\u559B\u566E\u56E6\u56ED\u5706\u570E\u5712\u5713\u571C\u57A3\u57B8\u586C\u5917\u59A7\u59B4\u5A9B\u5AB4\u5AC4\u5ADA\u5B3D\u5B9B\u5BC3\u5F32\u6028\u6081\u60CC\u613F\u6350\u63BE\u63F4\u676C\u68E9\u6965\u699E\u69AC\u6A7C\u6ADE\u6C85\u6D93\u6DB4\u6DF5\u6E01\u6E06\u6E0A\u6E15\u6E72\u6E90\u6E92\u7041\u7106\u7230\u7328\u733F\u7342\u7457\u76F6\u7722\u7990\u7A7F\u7B0E\u7BA2\u7DE3\u7E01\u7F18\u7FB1\u8099\u82AB\u82D1\u847E\u849D\u84AC\u8597\u85B3\u8696\u870E\u8735\u875D\u876F\u8788\u884F\u8881\u88EB\u88F7\u8911\u8924\u8B1C\u8C9F\u8D20\u8F10\u8F45\u8F95\u8FDC\u903A\u9060\u908D\u90A7\u915B\u9228\u92FA\u93B1\u962E\u9662\u9668\u9695\u9858\u99CC\u9A35\u9B6D\u9CF6\u9D1B\u9D77\u9DA2\u9DB0\u9E22\u9E33\u9E53\u9EFF\u9F0B\u9F18\u9F1D",
  rong: "\u5087\u509B\u5197\u5748\u5AB6\u5AC6\u5B2B\u5B82\u5BB9\u5CF5\u5D58\u5D64\u5DB8\u5DC6\u620E\u6408\u6411\u6449\u66E7\u6804\u6995\u69AE\u69B5\u6BE7\u6C04\u6EB6\u701C\u70FF\u7194\u7203\u72E8\u7462\u7A41\u7A43\u7D68\u7E19\u7E1F\u7ED2\u7F1B\u7FA2\u809C\u8319\u8338\u8363\u84C9\u877E\u878D\u878E\u8811\u8923\u8EF5\u9394\u9555\u9694\u980C\u9882\u99E5\u9AF6",
  jiang: "\u508B\u50F5\u52E5\u531E\u5320\u5842\u58C3\u5905\u5956\u5968\u596C\u59DC\u5C06\u5C07\u5D79\u5F1C\u5F36\u5F37\u5F3A\u5F4A\u646A\u647E\u6762\u6868\u69F3\u6A7F\u6AE4\u6BAD\u6C5F\u6D1A\u6D46\u6EF0\u6F3F\u729F\u734E\u7555\u757A\u7585\u7586\u7913\u7CE1\u7CE8\u7D05\u7D73\u7E6E\u7EA2\u7EDB\u7F30\u7FDE\u8029\u8199\u8333\u8441\u848B\u8503\u8523\u8591\u8679\u8780\u87BF\u88B6\u8B1B\u8B3D\u8BB2\u8C47\u9171\u91A4\u91AC\u964D\u97C1\u985C\u9C42\u9CC9",
  hao: "\u5090\u512B\u53F7\u547A\u54E0\u552C\u55E5\u5637\u5651\u5686\u568E\u58D5\u597D\u599E\u604F\u608E\u660A\u6626\u6667\u66A0\u66A4\u66AD\u66CD\u6903\u6BEB\u6D69\u6DCF\u6EC8\u6EDC\u6F94\u6FE0\u704F\u705D\u7346\u734B\u768B\u7693\u769C\u769E\u76A1\u76A5\u777E\u79CF\u7AD3\u7C47\u7FEF\u8017\u8055\u81A0\u81EF\u8320\u84BF\u8583\u8585\u85A7\u85C3\u865F\u8660\u869D\u8814\u8AD5\u8B79\u8C6A\u8C89\u90DD\u9117\u9392\u93AC\u941E\u9550\u9865\u98A2\u9C1D",
  shan: "\u5093\u50D0\u50E4\u5103\u510B\u51F5\u5220\u522A\u5261\u527C\u5355\u5358\u5584\u55AE\u5607\u5738\u57CF\u58A0\u58A1\u58C7\u59CD\u59D7\u5B17\u5C71\u5DA6\u5E53\u5F61\u6247\u633B\u639E\u63B8\u63BA\u6400\u6427\u647B\u64C5\u64D4\u6519\u657E\u6671\u66CF\u66D1\u6749\u6763\u67F5\u6805\u692B\u6A3F\u6A80\u6A86\u6AFC\u6C55\u6F6C\u6F78\u6F98\u6FB9\u7057\u70B6\u70FB\u7154\u717D\u718C\u72E6\u732D\u73CA\u759D\u75C1\u7752\u78F0\u7985\u79AA\u7A47\u7B18\u7B27\u7E3F\u7E55\u7E94\u7F2E\u7FB4\u7FB6\u8120\u81B3\u81BB\u8222\u829F\u82EB\u8460\u852A\u87EC\u87EE\u87FA\u886B\u8942\u8973\u89A2\u8A15\u8B06\u8B71\u8BAA\u8D0D\u8D61\u8D78\u8DDA\u8ED5\u9093\u9096\u912F\u91E4\u928F\u9425\u9490\u9583\u9584\u958A\u95EA\u9655\u965D\u9843\u986B\u98A4\u994D\u9A38\u9A9F\u9ADF\u9BC5\u9C53\u9C54\u9C63\u9CDD\u9CE3",
  que: "\u5095\u51B3\u5374\u537B\u57C6\u5859\u58A7\u5C48\u5D05\u60AB\u6128\u6164\u6409\u6509\u6560\u69B7\u6BBB\u6BC3\u6C4B\u6C7A\u7094\u71E9\u730E\u7361\u7638\u76B5\u785E\u786E\u788F\u78BA\u78BB\u7910\u792D\u7F3A\u8203\u8204\u828D\u849B\u8697\u8D9E\u8E16\u8EA4\u95CB\u95D5\u9615\u9619\u96BA\u96C0\u9CE5\u9D72\u9E4A",
  nuo: "\u50A9\u513A\u5436\u5450\u54EA\u558F\u5827\u5A1C\u5AA0\u5AF7\u611E\u61E6\u61E7\u632A\u6389\u63BF\u6419\u6426\u643B\u689B\u6992\u6A60\u6BED\u6E2A\u7A2C\u7A64\u7CD1\u7CE5\u7CEF\u800E\u88B2\u88B3\u8AFE\u8BFA\u8E43\u903D\u90A3\u90CD\u9369\u9518\u96BE\u96E3\u9700",
  ca: "\u50AA\u5693\u56C3\u62C6\u64E6\u6503\u6A74\u78E3\u7924\u7938\u8521\u906A",
  can: "\u50AA\u510F\u53C2\u53C3\u53C4\u53C5\u55B0\u5607\u5646\u56CB\u5B20\u5B31\u5B71\u5D7E\u60E8\u60ED\u6158\u6159\u615A\u61AF\u6214\u63BA\u6472\u6701\u6B8B\u6B98\u6DFA\u6E4C\u6FAF\u707F\u71E6\u7218\u74A8\u7A47\u7BF8\u7CB2\u8592\u8695\u8745\u8836\u883A\u8B32\u8E54\u93D2\u98E1\u98F1\u9910\u9A42\u9A96\u9BF5\u9C3A\u9CB9\u9EEA\u9EF2",
  lei: "\u50AB\u5121\u513D\u52D2\u5362\u53BD\u54A7\u561E\u5792\u5841\u58D8\u58E8\u5AD8\u64C2\u6502\u6A0F\u6A91\u6AD0\u6AD1\u6B19\u6CEA\u6D21\u6D99\u6DDA\u6F2F\u7045\u74C3\u757E\u7623\u7657\u76E7\u77CB\u78CA\u78E5\u790C\u7927\u7928\u7971\u79B7\u7C7B\u7D2F\u7D6B\u7E32\u7E87\u7E8D\u7E9D\u7F27\u7F4D\u7FB8\u8012\u808B\u8137\u8142\u8502\u854C\u857E\u85DF\u8631\u8632\u863D\u8646\u881D\u8A84\u8B84\u8BD4\u8F60\u90F2\u9179\u9287\u9311\u9433\u9458\u9478\u956D\u96F7\u9741\u981B\u982A\u985E\u98A3\u9C69\u9E13\u9F3A",
  cao: "\u50AE\u5608\u5C6E\u5D86\u613A\u6145\u6152\u61C6\u64A1\u64CD\u66F9\u66FA\u69FD\u6F15\u6FA1\u7CD9\u808F\u825A\u8278\u8279\u8349\u84F8\u87AC\u893F\u8959\u9020\u9135\u93EA\u9430\u9A32\u9F1C",
  zao: "\u50AE\u51FF\u5515\u5523\u55BF\u566A\u6165\u65E9\u67A3\u6806\u688D\u68D7\u69FD\u6FA1\u7076\u7170\u71E5\u7485\u74AA\u7681\u7682\u7A96\u7AC3\u7AC8\u7C09\u7CDF\u7E45\u7E70\u7F2B\u7F32\u8241\u8349\u85BB\u85FB\u86A4\u8B32\u8B5F\u8DAE\u8E67\u8E81\u9020\u906D\u91A9\u947F",
  shuang: "\u50B1\u53CC\u587D\u5B40\u5B47\u6161\u6A09\u6B06\u6CF7\u6DD9\u6EDD\u6F3A\u7027\u7040\u723D\u7935\u7E14\u826D\u93EF\u96D9\u971C\u9A3B\u9A66\u9AA6\u9DDE\u9E18\u9E74",
  ao: "\u50B2\u51F9\u53AB\u55F7\u55F8\u5662\u56A3\u56BB\u56C2\u5773\u5787\u58BA\u58BD\u5961\u5965\u5967\u5AAA\u5ABC\u5AEF\u5C99\u5CB0\u5D85\u5DB4\u5ED2\u6160\u61CA\u6277\u629D\u62D7\u646E\u64D9\u6556\u67EA\u688E\u68CD\u6CD1\u6D47\u6EF6\u6F86\u6F9A\u6FB3\u719D\u71AC\u720A\u7352\u7353\u7488\u7711\u78DD\u78FD\u7909\u7FF1\u7FF6\u7FFA\u8071\u82BA\u851C\u8779\u87AF\u8884\u8956\u8B37\u8B38\u8EEA\u9068\u90E9\u93CA\u93D5\u93D6\u957A\u969E\u9A41\u9A9C\u9C32\u9CCC\u9D01\u9D22\u9DD4\u9F07",
  piao: "\u50C4\u527D\u52E1\u560C\u5AD6\u5F6F\u5FB1\u6153\u647D\u65DA\u6734\u6B8D\u6F02\u6F4E\u72A5\u74E2\u76AB\u779F\u78E6\u7968\u7BFB\u7E39\u7F25\u7FF2\u8198\u83A9\u8508\u85B8\u87B5\u8B24\u91A5\u95DD\u9860\u98C3\u98C4\u98D8\u9A43\u9A6B\u9A89\u9AA0\u9ADF\u9B52",
  man: "\u50C8\u57CB\u5881\u59CF\u5ADA\u5C58\u5E54\u5E55\u6097\u6162\u6172\u6471\u66FC\u69FE\u6A20\u6E80\u6EE1\u6EFF\u6F2B\u6FAB\u6FB7\u71B3\u734C\u774C\u7792\u779E\u77D5\u7D7B\u7E35\u7F26\u8504\u8513\u8630\u86EE\u87A8\u87C3\u87CE\u883B\u8954\u8B3E\u8C29\u8E52\u8E63\u9124\u93CB\u93DD\u9558\u9794\u9862\u989F\u9945\u9992\u9B17\u9B18\u9C3B\u9CD7",
  lan: "\u50CB\u5116\u5170\u53B1\u5549\u5682\u56D2\u5754\u58C8\u58CF\u5A6A\u5B3E\u5B44\u5B4F\u5C9A\u5D50\u5E71\u5EE9\u5EEA\u60CF\u61D2\u61D4\u61E2\u61F6\u62E6\u63FD\u64E5\u6514\u652C\u6593\u6595\u6695\u680F\u6984\u6B04\u6B16\u6B17\u6D68\u6D9F\u6E45\u6EE5\u6F23\u6F24\u6F9C\u6FEB\u703E\u7046\u7060\u7061\u70BC\u70C2\u7149\u71D7\u71E3\u7201\u721B\u7224\u7226\u74BC\u74D3\u7937\u7BEE\u7C43\u7C63\u7CF7\u7E7F\u7E9C\u7F06\u7F71\u847B\u84DD\u85CD\u862B\u862D\u8934\u8955\u8964\u8974\u897D\u89A7\u89BD\u89C8\u8AEB\u8B4B\u8B95\u8C0F\u8C30\u8E9D\u90F4\u9182\u946D\u9484\u9567\u95CC\u9611\u97CA\u9872",
  zun: "\u50CE\u50D4\u5642\u58AB\u5960\u5C0A\u5D9F\u62F5\u6358\u637D\u6499\u682B\u6A3D\u7033\u7E5C\u7F47\u88B8\u8B50\u8DE7\u8E06\u8E72\u9075\u928C\u940F\u9C52\u9CDF\u9D8E\u9DF7",
  cuan: "\u50D4\u5DD1\u64BA\u6505\u6512\u651B\u6522\u6615\u6AD5\u6B11\u6BA9\u6C46\u6FFD\u7052\u71B6\u7228\u7A73\u7A9C\u7ABE\u7AC4\u7BE1\u7BF9\u7C12\u83C6\u8978\u8E7F\u8EA5\u92D1\u9479\u9569",
  deng: "\u50DC\u51F3\u5654\u58B1\u5B01\u5D9D\u6195\u6225\u6A59\u6AC8\u6F84\u706F\u71C8\u7492\u767B\u77AA\u78F4\u7AF3\u7B49\u7C26\u8260\u89B4\u8C4B\u8E6C\u9093\u9127\u9419\u956B\u96A5",
  teng: "\u50DC\u512F\u5E50\u6ED5\u6F1B\u75BC\u75CB\u7C50\u7C58\u7E22\u817E\u81AF\u85E4\u8645\u87A3\u8A8A\u8B04\u9086\u972F\u99E6\u9A30\u9A63\u9C27\u9F1F",
  tie: "\u50E3\u5360\u546B\u5E16\u6017\u60F5\u8051\u841C\u86C8\u8776\u8CBC\u8D34\u8DD5\u9244\u9246\u9295\u92E8\u9421\u9435\u94C1\u9507\u98FB\u992E\u9A56\u9D29",
  ceng: "\u50E7\u564C\u589E\u5C42\u5C64\u5D92\u66FE\u6A67\u7AF2\u7E52\u7F2F\u8E6D\u9A53",
  seng: "\u50E7\u9B19",
  zen: "\u50ED\u56CE\u600E\u648D\u8B56\u8B5B\u8C2E",
  min: "\u50F6\u51A7\u51BA\u5221\u52C4\u5461\u578A\u59C4\u5CB7\u5D0F\u5FDE\u600B\u60AF\u610D\u615C\u61AB\u62BF\u636A\u6543\u654F\u656F\u65FB\u65FC\u668B\u6C11\u6C76\u6CEF\u6E02\u6E4F\u6E63\u6F63\u739F\u73C9\u7418\u741D\u7449\u75FB\u76BF\u76F7\u76FF\u7720\u7807\u7888\u7B22\u7B3D\u7C22\u7DCD\u7DE1\u7E69\u7EF3\u7F17\u7F60\u82E0\u8820\u8CEF\u9231\u9309\u9372\u9594\u95A9\u95F5\u95FD\u9C35\u9CD8\u9D16\u9EFD\u9EFE",
  sai: "\u50FF\u55EE\u5625\u567B\u585E\u601D\u6122\u63CC\u6BE2\u6BF8\u7C11\u7C3A\u816E\u8CFD\u8D5B\u984B\u9C13\u9CC3",
  tai: "\u5113\u51AD\u53F0\u5454\u548D\u56FC\u576E\u5927\u592A\u5933\u5964\u5B2F\u5B61\u5FD5\u5FF2\u6001\u614B\u62AC\u64E1\u6584\u65F2\u67B1\u6AAF\u6C70\u6CF0\u6E99\u6F26\u70B1\u70B2\u71E4\u73C6\u7B88\u7C49\u7C8F\u80BD\u80CE\u80FD\u81FA\u8226\u82D4\u83ED\u85B9\u8A52\u8BD2\u8DC6\u8EDA\u90B0\u915E\u91D0\u9226\u9236\u949B\u98B1\u99D8\u9A80\u9B90\u9C90",
  meng: "\u511A\u51A1\u52D0\u5922\u5923\u5AC7\u5B5F\u5C28\u5E6A\u5EAC\u61DC\u61DE\u61F5\u63B9\u64DD\u660E\u66DA\u6726\u68A6\u6A57\u6AAC\u6C0B\u6C13\u6E95\u6FDB\u731B\u7374\u74FE\u750D\u753F\u76DF\u7791\u77A2\u77C7\u77D2\u791E\u7F5E\u824B\u8268\u8394\u840C\u8420\u8499\u8544\u867B\u8722\u8771\u87CA\u87D2\u8813\u9133\u9138\u92C2\u9333\u9530\u96FA\u971A\u9725\u9727\u973F\u9740\u986D\u995B\u9AF3\u9BCD\u9BED\u9C66\u9E0F\u9E72\u9EFD\u9EFE\u9F06",
  qiong: "\u511D\u536D\u5B1B\u5B86\u60F8\u618C\u684F\u6A69\u712A\u712D\u7162\u718D\u7401\u743C\u749A\u74CA\u74D7\u7758\u778F\u7A77\u7A79\u7AAE\u7AC6\u7B3B\u7B47\u823C\u8315\u85D1\u85ED\u86E9\u86EC\u8D79\u8DEB\u909B\u928E\u97A0",
  la: "\u5120\u524C\u5566\u5587\u56B9\u5783\u62C9\u63E6\u63E7\u641A\u647A\u64F8\u650B\u65EF\u67C6\u694B\u6AF4\u6E82\u7209\u74CE\u760C\u765E\u7669\u782C\u78D6\u7FCB\u814A\u81C8\u81D8\u83C8\u843D\u84DD\u85DE\u8721\u874B\u8772\u881F\u8FA2\u8FA3\u908B\u945E\u9574\u97A1\u9B0E\u9BFB\u9C72",
  du: "\u5125\u51DF\u5262\u526B\u5335\u53BE\u561F\u5663\u571F\u5835\u5857\u5992\u59AC\u5B3B\u5B85\u5E3E\u5EA6\u6581\u6675\u668F\u675C\u691F\u6A1A\u6A1E\u6A50\u6ADD\u6BAC\u6BB0\u6BD2\u6D9C\u6E0E\u6E21\u7006\u724D\u7258\u728A\u72A2\u72EC\u7368\u743D\u74C4\u76BE\u7763\u776A\u7779\u79FA\u7AC7\u7AFA\u7B01\u7B03\u7BE4\u7E9B\u809A\u828F\u8370\u8773\u8799\u8827\u8839\u88FB\u8961\u8969\u89A9\u8A6B\u8AAD\u8B80\u8B9F\u8BE7\u8BFB\u8C44\u8CED\u8D15\u8D4C\u90FD\u918F\u9316\u934D\u937A\u945F\u9517\u9540\u95CD\u9607\u967C\u976F\u97C7\u97E3\u97E5\u9813\u987F\u9A33\u9AD1\u9EE9\u9EF7",
  long: "\u5131\u5390\u5499\u54E2\u56A8\u5784\u5785\u58DF\u58E0\u5BA0\u5BF5\u5C78\u5D90\u5DC3\u5DC4\u5E9E\u5F04\u5FBF\u603B\u62E2\u650F\u663D\u66E8\u6727\u680A\u6887\u69DE\u6AF3\u6CF7\u6E70\u6EDD\u6F0B\u7027\u7216\u73D1\u74CF\u7643\u772C\u77D3\u783B\u7866\u7931\u7932\u7ABF\u7AC9\u7ADC\u7B3C\u7BE2\u7BED\u7C60\u804B\u807E\u80E7\u830F\u856F\u8622\u8755\u882A\u882C\u8856\u8971\u8C3E\u8C45\u8D1A\u8E98\u93E7\u9468\u9647\u9686\u96B4\u9733\u9747\u9A61\u9E17\u9F8D\u9F90\u9F92\u9F93\u9F99",
  rang: "\u5134\u52F7\u56B7\u58CC\u58E4\u5B43\u5FC0\u61F9\u6518\u6B00\u703C\u7219\u737D\u74E4\u79B3\u7A63\u7A70\u7E95\u8618\u8830\u8B72\u8B93\u8BA9\u8E9F\u9472\u9576\u9B24",
  xiong: "\u5144\u5147\u51F6\u5308\u54C5\u5910\u5BAA\u5FF7\u605F\u657B\u662B\u6C79\u6D36\u7138\u718A\u80F7\u80F8\u828E\u8A29\u8A57\u8A7E\u8BBB\u8BC7\u8CEF\u8D68\u96C4",
  dui: "\u514A\u514C\u5151\u5796\u57FB\u5806\u5860\u593A\u596A\u5BF9\u5BFE\u5C0D\u5D5F\u603C\u619D\u619E\u61DF\u6425\u6566\u6778\u6FE7\u6FFB\u7022\u7029\u75FD\u7893\u78D3\u794B\u7D90\u81AD\u85B1\u8B09\u8B48\u8B75\u8FFD\u9217\u92B3\u92ED\u931E\u939A\u9413\u941C\u9510\u9566\u961F\u966E\u968A\u9827\u9D2D",
  rui: "\u514A\u514C\u5151\u5167\u5185\u53E1\u58E1\u5A51\u60E2\u6290\u648B\u6798\u6875\u68C1\u6A64\u6C6D\u745E\u7524\u777F\u7B0D\u7D8F\u7DCC\u7E60\u7EE5\u82AE\u82FC\u854A\u854B\u8564\u8602\u8603\u868B\u8739\u8E12\u9209\u92B3\u92ED\u93F8\u94A0\u9510",
  ke: "\u514B\u523B\u524B\u52C0\u52CA\u533C\u53EF\u5475\u54B3\u5580\u55D1\u5777\u5801\u58F3\u5A14\u5BA2\u5C05\u5CA2\u5CC7\u5D51\u5D59\u5DB1\u606A\u6088\u6118\u6119\u63E2\u6415\u6564\u67EF\u68F5\u69BC\u6A16\u6B2C\u6B41\u6BBB\u6BFC\u6C2A\u6E07\u6E34\u6E98\u6FED\u70A3\u7241\u7290\u73C2\u75B4\u75FE\u76CD\u778C\u7822\u785E\u78A3\u78A6\u78C6\u78D5\u790A\u791A\u79D1\u7A1E\u7AA0\u7ABC\u7C3B\u7DD9\u7F02\u7FD7\u80E2\u8250\u82DB\u842A\u8596\u86B5\u874C\u8849\u8894\u8AB2\u8BFE\u8DB7\u8EFB\u8F72\u9198\u9233\u927F\u9301\u9312\u94B6\u94EA\u9515\u951E\u9826\u9846\u988F\u9897\u9A0D\u9A92\u9AC1\u9F95",
  nei: "\u5167\u5185\u54EA\u5A1E\u5A51\u6C1D\u6D7D\u812E\u8147\u90A3\u9317\u9912\u9927\u9981\u9BBE\u9BD8",
  shou: "\u517D\u53CE\u53D7\u552E\u563C\u57A8\u58FD\u5900\u5B88\u5BFF\u624B\u624C\u6388\u63B1\u6536\u654A\u6D9B\u6DAD\u6FE4\u719F\u72E9\u7363\u7378\u75E9\u7626\u7DAC\u7EF6\u8184\u824F\u91BB\u93C9\u9996",
  ran: "\u5184\u5189\u536A\u5465\u562B\u59CC\u5AA3\u67D3\u67DF\u6A6A\u7136\u71AF\u71C3\u73C3\u7E4E\u80B0\u8211\u82D2\u8485\u86A6\u86BA\u887B\u8887\u88A1\u8E68\u9AE5\u9AEF",
  gua: "\u518E\u522E\u5250\u526E\u5280\u5366\u53E7\u5471\u54B6\u54BC\u5569\u576C\u5BE1\u60F4\u62EC\u6302\u639B\u681D\u6B44\u713B\u7171\u74DC\u7D53\u7DFA\u7F63\u7F6B\u80CD\u820C\u82FD\u8902\u8A7F\u8AE3\u8BD6\u8D8F\u8E3B\u929B\u92BD\u94E6\u98AA\u98B3\u9A27\u9D30\u9E39",
  mei: "\u51C2\u5445\u5473\u569C\u5746\u5776\u5833\u587A\u58A8\u59B9\u5A84\u5A92\u5A9A\u5ABA\u5B0D\u5BD0\u5D44\u5D4B\u5FBE\u62BA\u6334\u6517\u651F\u6627\u679A\u67D0\u6802\u6885\u6963\u6973\u69D1\u6AD7\u6BCE\u6BCF\u6C3C\u6C92\u6CA1\u6CAB\u6CAC\u6D7C\u6E3C\u6E44\u6E48\u6EA6\u715D\u7164\u71D8\u7338\u73AB\u73FB\u7442\u75D7\u7709\u770A\u771B\u7742\u7778\u77C0\u7959\u7996\u7BC3\u7CDC\u7F8E\u7F99\u8104\u8122\u815C\u81B4\u82FA\u8393\u847F\u862A\u875E\u8882\u8C1C\u8DCA\u8EBE\u90FF\u9176\u92C2\u9382\u9387\u9541\u9545\u9709\u97CE\u9B3D\u9B45\u9DA5\u9E5B\u9EE3\u9EF4",
  zhun: "\u51C6\u51D6\u554D\u572B\u57FB\u5B92\u5C6F\u5FF3\u65FD\u6DF3\u6E7B\u6E96\u753D\u76F9\u7A15\u7A80\u7D14\u7DA7\u7EAF\u80AB\u80D7\u8860\u8A30\u8AC4\u8C06\u8FCD\u98E9\u9968\u9EF1",
  cou: "\u51D1\u594F\u63CD\u65CF\u6971\u6E4A\u73BC\u7C07\u8160\u851F\u85AE\u85EA\u8D8B\u8DA3\u8DA8\u8F33\u8F8F",
  kai: "\u51EF\u51F1\u5240\u5274\u52BE\u52D3\u559D\u55AB\u5605\u5644\u57B2\u584F\u5952\u5D66\u5E46\u5F00\u5FFE\u607A\u6112\u6137\u613E\u6168\u63E9\u669F\u6838\u6977\u6B2C\u6B2F\u6E07\u6E34\u6E98\u6FED\u708C\u708F\u70D7\u8488\u8849\u8C48\u8F06\u9347\u938E\u93A7\u9426\u94E0\u950E\u9534\u958B\u95D3\u95FF\u96C9\u98BD",
  guo: "\u5212\u5459\u54B6\u54BC\u552C\u556F\u5613\u56D7\u56EF\u56F6\u56FB\u56FD\u5700\u570B\u57DA\u57FB\u581D\u588E\u5D1E\u5E3C\u5E57\u5F49\u5F4D\u60C8\u6156\u63B4\u6413\u6451\u654B\u679C\u67B8\u6901\u6947\u69E8\u6ACE\u6D3B\u6DA1\u6DC9\u6E26\u6F0D\u6FC4\u7313\u7611\u77CC\u7C02\u7CBF\u7DB6\u8052\u805D\u8142\u8158\u8195\u83D3\u852E\u8662\u872E\u873E\u8748\u8778\u87C8\u8803\u88F9\u8901\u8F20\u8FC7\u904E\u90ED\u921B\u9301\u934B\u9439\u9505\u951E\u991C\u9983\u9998",
  bie: "\u5225\u522B\u5487\u5F46\u5FB6\u618B\u6252\u62D4\u634C\u6486\u6487\u67ED\u67F2\u7330\u762A\u765F\u79D8\u7A6A\u82FE\u8382\u853D\u864C\u86C2\u87DE\u8952\u8E69\u9C49\u9CD6\u9F08\u9F9E",
  pao: "\u5228\u5305\u530F\u5486\u5697\u5789\u5945\u5E96\u629B\u62B1\u62CB\u647D\u6CE1\u70AE\u70B0\u722E\u72A5\u72CD\u74DF\u75B1\u76B0\u7832\u791F\u792E\u7A6E\u7A8C\u80DE\u811F\u812C\u82DE\u8422\u85E8\u86AB\u888C\u888D\u891C\u8B08\u8DD1\u8EF3\u924B\u94C7\u9784\u98AE\u98D1\u9B91\u9C8D\u9E83\u9E85\u9EAD",
  shua: "\u5237\u5506\u5530\u6DAE\u800D\u8A9C\u9009\u9078",
  cuo: "\u5249\u5252\u539D\u590E\u5D6F\u5D73\u5EB4\u632B\u63AA\u6413\u6467\u64AE\u6614\u6700\u68E4\u6FA8\u71DF\u7473\u75E4\u7625\u7749\u77EC\u78CB\u7E12\u811E\u839D\u83A1\u84AB\u84CC\u8516\u8658\u894A\u8ACE\u8E49\u8E9C\u8EA6\u902A\u9073\u9142\u9147\u919D\u92BC\u932F\u9509\u9519\u9ACA\u9E7A\u9E7E\u9F79",
  pou: "\u5256\u5425\u5485\u54E3\u57BA\u57F9\u5837\u5A44\u6294\u6299\u62B1\u634A\u638A\u68D3\u6DAA\u7283\u7B81\u88D2\u88E6\u8912\u8943\u8E23\u90E8\u90F6\u9307\u952B\u9892",
  tuan: "\u526C\u5278\u56E2\u56E3\u5715\u5718\u587C\u58A5\u5AE5\u5C08\u5F56\u6171\u629F\u6476\u6566\u69EB\u6AB2\u6E4D\u6E6A\u6F19\u7153\u732F\u757D\u7583\u78DA\u7A05\u7A0E\u7BFF\u7CF0\u84F4\u890D\u8916\u8C92\u93C4\u9C44\u9D89\u9DD2\u9DFB\u9E51",
  qiang: "\u5275\u52E5\u545B\u54D0\u5534\u554C\u55C6\u55F4\u588F\u5899\u58BB\u5AF1\u5B19\u5C06\u5C07\u5D88\u5E86\u5EE7\u5F37\u5F3A\u5F4A\u6176\u6215\u6217\u6227\u62A2\u63A7\u6436\u6464\u646A\u65A8\u67AA\u690C\u69CD\u6A2F\u6AA3\u6BBB\u6EAC\u6F12\u709D\u7197\u723F\u7244\u7246\u7310\u7347\u73B1\u7437\u7472\u77FC\u7B90\u7BEC\u7E48\u7E66\u7F8C\u7F97\u7F9F\u7FA5\u7FAB\u7FBB\u8154\u8262\u8503\u8537\u8594\u8620\u8723\u8941\u89AA\u8B12\u8DC4\u8DEB\u8E4C\u8E61\u9306\u9397\u93D8\u93F9\u9516\u9535\u956A\u9869\u9DAC\u9E27",
  zuan: "\u5297\u63DD\u64AE\u6512\u6522\u6525\u6B11\u7BF9\u7C6B\u7E64\u7E82\u7E89\u7E98\u7F35\u8CFA\u8D5A\u8E9C\u8EA6\u945A\u947D\u94BB",
  keng: "\u52A5\u542D\u5748\u5751\u595F\u5994\u5FD0\u6333\u63C1\u647C\u6BB8\u727C\u7841\u784D\u784E\u785C\u787B\u80EB\u811B\u8A99\u8E01\u927A\u92B5\u935E\u93D7\u94D2\u94FF\u962C",
  gao: "\u52C2\u543F\u544A\u548E\u5930\u5CFC\u641E\u66A0\u6772\u69C0\u69C1\u69D4\u69F9\u6A70\u6ABA\u6ADC\u6D69\u6EDC\u6F94\u734B\u7354\u768B\u7690\u776A\u777E\u796E\u7970\u799E\u7A01\u7A3E\u7A3F\u7B76\u7BD9\u7CD5\u7E1E\u7F1F\u7F94\u7F99\u818F\u81EF\u83D2\u84BF\u85C1\u85F3\u8AA5\u8BF0\u90DC\u92EF\u93AC\u9506\u9550\u97DF\u993B\u9AD8\u9AD9\u9DCE\u9DF1\u9F1B",
  weng: "\u52DC\u55E1\u5855\u58C5\u5963\u5D61\u66A1\u6EC3\u74EE\u7515\u7788\u7F4B\u7FC1\u806C\u8499\u84CA\u8579\u8789\u9393\u9DB2\u9E5F\u9F46",
  pin: "\u5315\u54C1\u56AC\u59D8\u5A09\u5AD4\u5B2A\u62DA\u62FC\u6729\u6980\u6C56\u6CF5\u725D\u73AD\u7415\u77C9\u780F\u7917\u7A66\u8058\u85B2\u860B\u8CA7\u8D2B\u983B\u9870\u9891\u98A6\u99AA\u9A5E",
  nao: "\u5318\u5476\u57B4\u5816\u5912\u5A65\u5AD0\u5B6C\u5CF1\u5DA9\u5DCE\u5DD9\u6013\u607C\u60A9\u60F1\u61B9\u6320\u6493\u6A48\u6A82\u6D47\u6DD6\u6F86\u7331\u7376\u737F\u7459\u7847\u7899\u78AF\u8111\u8133\u815D\u8166\u81D1\u86F2\u875A\u87EF\u8A49\u8B4A\u9403\u94D9\u9599\u95F9\u9B27",
  za: "\u531D\u5482\u548B\u54B1\u5548\u5550\u5592\u5601\u5648\u56C3\u56CB\u56D0\u5E00\u624E\u62F6\u6742\u685A\u6C9E\u6CAF\u6FFD\u7052\u7838\u78FC\u7C74\u7D25\u7D2E\u81DC\u81E2\u894D\u9254\u96D1\u96DC\u96E5\u97F4\u9B73",
  zang: "\u5328\u585F\u5958\u5F09\u6215\u7242\u726B\u7F98\u810F\u81D3\u81DF\u81E7\u846C\u8535\u85CF\u8CCD\u8CD8\u8D13\u8D1C\u8D43\u92BA\u99D4\u9A61\u9A75\u9AD2",
  suan: "\u5334\u64B0\u72FB\u75E0\u7958\u7B07\u7B6D\u7B97\u7BF9\u849C\u9009\u9078\u9178",
  nian: "\u5344\u54D6\u5538\u57DD\u59E9\u5E74\u5EFF\u5FF5\u62C8\u6375\u637B\u649A\u64B5\u6506\u6990\u6D8A\u6DF0\u6E93\u75C6\u78BE\u79CA\u79E5\u7C10\u7C98\u824C\u852B\u8D81\u8D82\u8DC8\u8E4D\u8E68\u8E8E\u8F26\u8F3E\u8F87\u8F97\u9B8E\u9BF0\u9C87\u9CB6\u9D47\u9ECF",
  shuai: "\u535B\u5E05\u5E25\u6454\u7387\u7529\u7D8F\u7E17\u7EE5\u7F1E\u87C0\u8870",
  kun: "\u5375\u56F0\u5764\u5803\u5812\u58F8\u58FC\u5A6B\u5C21\u5D10\u5D11\u6083\u6346\u6606\u665C\u68B1\u6D83\u6DF7\u6F49\u711C\u71B4\u7311\u7428\u747B\u774F\u7871\u7975\u7A07\u7A1B\u7D91\u7F64\u81D7\u83CE\u872B\u88C8\u88CD\u88E9\u890C\u8C64\u8C87\u918C\u9315\u951F\u95AB\u95B8\u9603\u9811\u987D\u991B\u9984\u9A09\u9AE0\u9AE1\u9AE8\u9BE4\u9C25\u9CB2\u9CCF\u9D7E\u9DA4\u9E4D\u9F66\u9F88",
  mang: "\u5396\u5402\u54E4\u58FE\u5A0F\u5C28\u5EAC\u5FD9\u607E\u671A\u6726\u6757\u6767\u6C13\u6C52\u6D5D\u6F2D\u7264\u727B\u72F5\u753F\u75DD\u76F2\u76F3\u77A2\u7865\u786D\u7B00\u8292\u832B\u833B\u83BD\u83BE\u8609\u86D6\u87D2\u880E\u9099\u91EF\u92E9\u94D3\u99F9\u9E0F\u9E72\u9F8D\u9F92\u9F99",
  zui: "\u539C\u5480\u55FA\u5634\u567F\u5806\u5AE2\u5D89\u5D8A\u5DB5\u6467\u64AE\u666C\u6700\u6718\u67A0\u682C\u69EF\u6A36\u6A87\u6A8C\u6B08\u6FE2\u74BB\u775F\u797D\u7A21\u7A5D\u7D4A\u7E97\u7F6A\u7FA7\u8127\u855E\u87D5\u89DC\u8FA0\u9154\u9168\u917B\u9189\u92F7\u930A\u96CB",
  rou: "\u53B9\u5A83\u5B8D\u63C9\u67D4\u697A\u6E18\u7163\u7448\u74C7\u79B8\u7C88\u7CC5\u8089\u816C\u83A5\u8447\u875A\u8E42\u8F2E\u9352\u9450\u97A3\u97D6\u9A25\u9AF3\u9C07\u9D94",
  cen: "\u53C2\u53C3\u53C4\u53C5\u5C91\u5D7E\u68A3\u6C75\u6D94\u7876\u7A47\u7B12\u7BF8\u81A5",
  pa: "\u53ED\u5427\u556A\u5991\u5E0A\u5E15\u6015\u6252\u628A\u63B1\u6777\u6C43\u6D3E\u6F56\u722C\u7436\u7685\u7B62\u8019\u8225\u82AD\u82E9\u8469\u8899\u8DB4\u8DC1\u9200\u94AF",
  po: "\u53F5\u54F1\u5619\u5761\u5964\u5A1D\u5A46\u5C00\u5C03\u5C70\u5CA5\u5CB6\u5DFF\u5EF9\u642B\u6534\u6540\u6622\u6734\u6872\u693A\u6AC7\u6CCA\u6CFA\u6CFC\u6D26\u6DFF\u6E50\u6E8C\u6EA5\u6F51\u6FFC\u70DE\u733C\u73C0\u769B\u76A4\u7834\u7836\u7B38\u7C95\u7E41\u7FCD\u818A\u84AA\u8522\u8B08\u8DDB\u8FEB\u9131\u9166\u91B1\u91D9\u9255\u93FA\u948B\u94B7\u9642\u9738\u9817\u9887\u999E\u99CA\u9AC6\u9B44",
  a: "\u5416\u5475\u554A\u55C4\u814C\u9312\u9515\u963F",
  tun: "\u541E\u5428\u5434\u5451\u554D\u564B\u56E4\u5749\u5C6F\u5E89\u5FF3\u619E\u65FD\u66BE\u671C\u6C3D\u6C6D\u6C8C\u6D92\u7096\u711E\u71C9\u757D\u7A80\u7D14\u7EAF\u80AB\u81AF\u81C0\u81CB\u829A\u8733\u892A\u8C58\u8C5A\u8ED8\u9010\u932A\u9715\u98E9\u9968\u9B68\u9C80\u9ED7",
  pen: "\u5429\u5460\u55AF\u55B7\u5674\u672C\u6B55\u6C7E\u6E53\u6FC6\u74EB\u76C6\u7FC9\u7FF8\u8450\u886F",
  hang: "\u542D\u57B3\u592F\u5994\u5DF7\u5FFC\u65BB\u676D\u6841\u6C86\u7095\u72FC\u73E9\u7B10\u7B55\u7D4E\u7ED7\u80AE\u822A\u82C0\u86A2\u884C\u8CA5\u8FD2\u909F\u9150\u980F\u9883\u9B67",
  ne: "\u5436\u5450\u5462\u54EA\u6290\u7592\u7594\u7732\u8A25\u8BB7\u90A3",
  wai: "\u5459\u54BC\u558E\u5916\u592D\u5D34\u6B6A\u7024\u7AF5\u9861",
  n: "\u54B9\u54CF\u55EF",
  dei: "\u54CB\u5F97",
  yo: "\u54DF\u5537\u55B2\u569B\u80B2",
  o: "\u54E6\u5594\u5662\u7B7D",
  sao: "\u54E8\u57FD\u5AC2\u6145\u61C6\u626B\u6383\u63BB\u6414\u68A2\u6A7E\u6C09\u6E9E\u7170\u71E5\u7619\u77C2\u7E3F\u7E45\u7E70\u7F2B\u7F32\u81CA\u9135\u9430\u98BE\u9A12\u9A37\u9A9A\u9ADE\u9BF5\u9C20\u9C3A\u9C62\u9CB9\u9CCB",
  shuo: "\u54FE\u55CD\u55FD\u5981\u6420\u6570\u6714\u69CA\u6B36\u6C4B\u6D2C\u6EAF\u6FEF\u70C1\u71FF\u720D\u7361\u7642\u77DF\u7855\u78A9\u7BBE\u836F\u8437\u84B4\u85E5\u8AAA\u8AAC\u8BF4\u928F\u9399\u9460\u94C4",
  en: "\u5514\u55EF\u5940\u5CCE\u6069\u6441\u717E\u84BD\u9950",
  huan: "\u5524\u559A\u559B\u56BE\u5702\u571C\u57B8\u581A\u5942\u5950\u5B49\u5BA6\u5BCF\u5BF0\u5CD8\u5D48\u5DDC\u5E7B\u60A3\u610C\u61C1\u61FD\u6362\u63DB\u63F4\u64D0\u650C\u6853\u6899\u69F5\u6B22\u6B25\u6B53\u6B61\u6C4D\u6D39\u6D63\u6DA3\u6E19\u6F36\u6F45\u6FA3\u6FB4\u704C\u70C9\u7115\u7165\u72BF\u72DF\u737E\u73AF\u744D\u7457\u74B0\u74DB\u75EA\u7613\u7696\u7729\u7746\u7754\u778F\u77A3\u7CEB\u7D59\u7D84\u7DE9\u7E6F\u7F13\u7F33\u7FA6\u8092\u8118\u8341\u8408\u8411\u849D\u85E7\u878C\u8838\u8B99\u8C62\u8C69\u8C72\u8C86\u8C9B\u8F10\u8F58\u8FD8\u902D\u9084\u90C7\u9144\u926E\u9370\u9436\u953E\u956E\u95E4\u961B\u96C8\u96DA\u9A69\u9B1F\u9BC7\u9BF6\u9C00\u9CA9\u9D05\u9D4D\u9E1B\u9E6E\u9E73",
  nou: "\u5542\u5B2C\u6419\u64E9\u69C8\u6ABD\u7373\u7FBA\u8028\u8B68\u8B73\u9392\u941E",
  ken: "\u5543\u57A0\u57A6\u58BE\u6073\u61C7\u63AF\u72E0\u73E2\u784D\u808E\u80AF\u80BB\u88C9\u8903\u8C64\u8C87\u9339\u980E\u9880\u9F66\u9F88",
  chuai: "\u555C\u562C\u63E3\u640B\u6B3C\u8144\u8197\u81AA\u8E39",
  se: "\u556C\u55C7\u585E\u5BE8\u5EE7\u612C\u61CE\u62FA\u64CC\u681C\u69ED\u6B6E\u6B70\u6CE3\u6D13\u6DA9\u6E0B\u6E0D\u6EB9\u6F2C\u6F80\u6F81\u6FC7\u6FCF\u7012\u7417\u745F\u74B1\u7637\u7A51\u7A61\u7A6F\u7CA3\u7E6C\u8272\u8537\u8594\u8669\u8B45\u8F56\u924D\u92AB\u938D\u93A9\u93FC\u94CB\u94E9\u94EF\u95DF\u96ED\u98CB",
  sun: "\u55B0\u5B59\u5B6B\u5DFA\u627B\u635F\u640D\u640E\u644C\u6811\u69AB\u69C2\u6F60\u72F2\u733B\u7543\u7B0B\u7B4D\u7BB0\u7C28\u836A\u84C0\u8575\u859E\u8DE3\u93A8\u96BC\u98E7\u98F1\u9910\u9DBD",
  hei: "\u55E8\u563F\u5B12\u6F76\u9ED1\u9ED2",
  dia: "\u55F2",
  de: "\u561A\u5730\u5E95\u5F97\u5FB3\u5FB7\u6074\u60B3\u60EA\u68CF\u6DC2\u767B\u7684\u9340\u951D\u965F",
  zhuai: "\u562C\u5C35\u62FD\u6359\u7749\u8DE9\u8F6C\u9861",
  nin: "\u56DC\u6041\u60A8\u62F0\u810C",
  qun: "\u56F7\u590B\u5BAD\u5CEE\u5E2C\u6B4F\u7B98\u7FA3\u7FA4\u88D9\u88E0\u8E06\u8F11\u9021\u9041\u9E87\u9E8F\u9E95",
  ri: "\u56F8\u65E5\u6C1C\u91F0\u9224\u99B9\u9A72",
  zeng: "\u5897\u589E\u618E\u66FD\u66FE\u6A67\u71B7\u7494\u7511\u77F0\u78F3\u7D9C\u7E21\u7E52\u7EFC\u7F2F\u7F7E\u8B44\u8D08\u8D60\u912B\u92E5\u9503\u9B37\u9C5B",
  nv: "\u5973\u6067\u6712\u6C91\u72C3\u7C79\u7D6E\u804F\u80AD\u8842\u8844\u91F9\u9495",
  nuan: "\u597B\u6696\u6E1C\u6E6A\u6FE1\u7156\u7157\u992A",
  niu: "\u599E\u5FF8\u6013\u626D\u629D\u62D7\u677B\u6C7C\u6C91\u7084\u725B\u725C\u72C3\u7D10\u7EBD\u83A5\u86B4\u9215\u94AE\u9775",
  rao: "\u5A06\u5B08\u6270\u6320\u6493\u64FE\u6861\u6A48\u72AA\u7A58\u7E5A\u7E5E\u7ED5\u7F2D\u835B\u8558\u87EF\u8953\u9076\u96A2\u9952\u9976",
  shui: "\u5A37\u5E28\u6329\u635D\u6C34\u6C35\u6C3A\u6D97\u6D9A\u7761\u7971\u7A05\u7A0E\u813D\u88DE\u8AAA\u8AAC\u8AB0\u8BF4\u8C01\u9596",
  nve: "\u5A69\u759F\u7627\u8650",
  nen: "\u5A86\u5AE9\u5AF0\u6041\u6798\u815D\u81D1",
  niao: "\u5ACB\u5B1D\u5B32\u5C25\u5C26\u5C3F\u6A22\u6EBA\u8132\u8311\u832E\u8526\u8885\u88CA\u892D\u9CE5\u9E1F",
  kuan: "\u5B8C\u5BBD\u5BDB\u5BEC\u68A1\u68F5\u6B35\u6B3E\u6B40\u7ABD\u7ABE\u9467\u9846\u9897\u9ACB\u9AD6",
  shuan: "\u5C08\u62F4\u6812\u6813\u69EB\u6C55\u6DAE\u8168\u8E39\u9582\u95E9",
  zhua: "\u6293\u631D\u6463\u64BE\u6A9B\u722A\u7C3B\u81BC\u9AFD",
  sen: "\u63BA\u647B\u68EE\u69EE\u6E17\u6EF2\u7BF8\u8942",
  shai: "\u644B\u6526\u6652\u66EC\u6BBA\u7B5B\u7BE9\u7C01\u7C1B\u7C6D\u7E7A\u8272\u8853\u8AF0\u917E\u95B7",
  run: "\u648B\u6A4D\u6DA6\u6F64\u958F\u95A0\u95F0",
  neng: "\u7ADC\u800C\u8010\u80FD\u879A",
  miu: "\u7E46\u7F2A\u8B2C\u8C2C",
  gei: "\u7ED9",
  zei: "\u8808\u8CCA\u8D3C\u9BFD\u9C02\u9C61\u9C97\u9CAB"
};
var traditional_dict_default = TraditionalDict;

// src/dict/double_pinyin.ts
var DoubleDict = {
  \u667A\u80FDABC: {
    q: ["q", "ei"],
    w: ["w", "ian"],
    e: ["ch", "e"],
    r: ["r", "iu", "er"],
    t: ["t", "iang", "uang"],
    y: ["y", "ing"],
    u: ["u"],
    i: ["i"],
    o: ["o", "uo"],
    p: ["p", "uan"],
    a: ["zh", "a"],
    s: ["s", "ong", "iong"],
    d: ["d", "ia", "ua"],
    f: ["f", "en"],
    g: ["g", "eng"],
    h: ["h", "ang"],
    j: ["j", "an"],
    k: ["k", "ao"],
    l: ["l", "ai"],
    z: ["z", "iao"],
    x: ["x", "ie"],
    c: ["c", "in", "uai"],
    v: ["sh", "ve", "v"],
    b: ["b", "ou"],
    n: ["n", "un"],
    m: ["m", "ue", "ui"]
  },
  \u5FAE\u8F6F\u53CC\u62FC: {
    q: ["q", "iu"],
    w: ["w", "ia", "ua"],
    e: ["e"],
    r: ["r", "uan", "er"],
    t: ["t", "ue"],
    y: ["y", "uai", "v"],
    u: ["sh", "u"],
    i: ["ch", "i"],
    o: ["o", "uo"],
    p: ["p", "un"],
    a: ["a"],
    s: ["s", "ong", "iong"],
    d: ["d", "iang", "uang"],
    f: ["f", "en"],
    g: ["g", "eng"],
    h: ["h", "ang"],
    j: ["j", "an"],
    k: ["k", "ao"],
    l: ["l", "ai"],
    ";": ["ing"],
    z: ["z", "ei"],
    x: ["x", "ie"],
    c: ["c", "iao"],
    v: ["zh", "ui", "ve"],
    b: ["b", "ou"],
    n: ["n", "in"],
    m: ["m", "ian"]
  },
  \u5C0F\u9E64\u53CC\u62FC: {
    q: ["q", "iu"],
    w: ["w", "ei"],
    e: ["e"],
    r: ["r", "uan", "van"],
    t: ["t", "ve", "ue"],
    y: ["y", "vn", "un"],
    u: ["sh", "u"],
    i: ["ch", "i"],
    o: ["o", "uo"],
    p: ["p", "ie"],
    a: ["a"],
    s: ["s", "ong", "iong"],
    d: ["d", "ai"],
    f: ["f", "en"],
    g: ["g", "eng"],
    h: ["h", "ang"],
    j: ["j", "an"],
    k: ["k", "uai", "ing"],
    l: ["l", "iang", "uang"],
    z: ["z", "ou"],
    x: ["x", "ia", "ua"],
    c: ["c", "ao"],
    v: ["zh", "ui", "v"],
    b: ["b", "in"],
    n: ["n", "iao"],
    m: ["m", "ian"]
  },
  \u81EA\u7136\u7801: {
    q: ["q", "iu"],
    w: ["w", "ia", "ua"],
    e: ["e"],
    r: ["r", "uan", "van"],
    t: ["t", "ve", "ue"],
    y: ["y", "uai", "ing"],
    u: ["sh", "u"],
    i: ["ch", "i"],
    o: ["o", "uo"],
    p: ["p", "vn", "un"],
    a: ["a"],
    s: ["s", "ong", "iong"],
    d: ["d", "iang", "uang"],
    f: ["f", "en"],
    g: ["g", "eng"],
    h: ["h", "ang"],
    j: ["j", "an"],
    k: ["k", "ao"],
    l: ["l", "ai"],
    z: ["z", "ei"],
    x: ["x", "ie"],
    c: ["c", "iao"],
    v: ["zh", "ui", "v"],
    b: ["b", "ou"],
    n: ["n", "in"],
    m: ["m", "ian"]
  }
};
var double_pinyin_default = DoubleDict;

// src/search.ts
function pinyinSearch(query, items, plugin) {
  if (items.length == 0)
    return null;
  if (isStringArray(items)) {
    items = stringArray2Items(items, plugin);
  }
  return search(query, items, plugin.settings.global.autoCaseSensitivity);
}
function isStringArray(arr) {
  return Array.isArray(arr) && arr.every((item) => typeof item === "string");
}
function search(query, items, autoCaseSensitivity = true) {
  if (query == "") {
    return items.map((p) => ({
      item: p,
      score: 0,
      range: [[0, p.name.length - 1]]
    }));
  }
  let matchData = [];
  let smathCase = /[A-Z]/.test(query) && autoCaseSensitivity;
  for (let p of items) {
    let d = p.pinyin.match(query, p, smathCase);
    if (d)
      matchData.push(d);
  }
  matchData = matchData.sort((a, b) => b.score - a.score);
  return matchData;
}
function stringArray2Items(items, plugin) {
  return items.map((item) => ({
    name: item,
    pinyin: new Pinyin(item, plugin)
  }));
}

// src/settingTab.ts
var import_obsidian11 = __toModule(require("obsidian"));
var import_lodash2 = __toModule(require_lodash());
var SettingTab = class extends import_obsidian11.PluginSettingTab {
  constructor(app2, plugin) {
    super(app2, plugin);
    this.plugin = plugin;
  }
  display() {
    this.containerEl.empty();
    this.containerEl.createEl("h1", { text: "\u8BBE\u7F6E" });
    this.addGlobalSetting();
    this.addFileSetting();
    this.addHeadingSetting();
    this.addCommandSettings();
    this.addOtherSetting();
  }
  addGlobalSetting() {
    this.containerEl.createEl("h2", { text: "\u5168\u5C40" });
    new import_obsidian11.Setting(this.containerEl).setName("Backspace \u5173\u95ED\u641C\u7D22").setDesc("\u5F53\u8F93\u5165\u6846\u4E3A\u7A7A\u65F6\u6309\u4E0B Backspace \u5173\u95ED\u641C\u7D22").addToggle((cb) => cb.setValue(this.plugin.settings.global.closeWithBackspace).onChange(async (value) => {
      this.plugin.settings.global.closeWithBackspace = value;
      await this.plugin.saveSettings();
    }));
    new import_obsidian11.Setting(this.containerEl).setName("\u7E41\u4F53\u652F\u6301").addToggle((cb) => {
      cb.setValue(this.plugin.settings.global.traditionalChineseSupport).onChange(async (value) => {
        this.plugin.settings.global.traditionalChineseSupport = value;
        await this.plugin.saveSettings();
        this.plugin.loadPinyinDict();
      });
    });
    const doublePinyinOptions = Object.keys(double_pinyin_default).reduce((acc, cur) => {
      acc[cur] = cur;
      return acc;
    }, {
      \u5168\u62FC: "\u5168\u62FC"
    });
    new import_obsidian11.Setting(this.containerEl).setName("\u53CC\u62FC\u65B9\u6848").addDropdown((cb) => cb.addOptions(doublePinyinOptions).setValue(this.plugin.settings.global.doublePinyin).onChange(async (value) => {
      if (this.plugin.settings.global.doublePinyin == value)
        return;
      if (this.plugin.settings.global.fuzzyPinyin && value != "\u5168\u62FC") {
        new import_obsidian11.Notice("\u6A21\u7CCA\u97F3\u641C\u7D22\u5DF2\u5F00\u542F\uFF0C\u65E0\u6CD5\u5207\u6362\u53CC\u62FC\u65B9\u6848");
        cb.setValue("\u5168\u62FC");
        return;
      }
      this.plugin.settings.global.doublePinyin = value;
      this.plugin.pinyinDict.keys = value == "\u5168\u62FC" ? this.plugin.pinyinDict.originalKeys : this.plugin.pinyinDict.originalKeys.map((p) => fullPinyin2doublePinyin(p, double_pinyin_default[value]));
      this.plugin.indexManager.load(true);
      new import_obsidian11.Notice("\u53CC\u62FC\u65B9\u6848\u5207\u6362\u4E3A\uFF1A" + value, 4e3);
      await this.plugin.saveSettings();
    }));
    new import_obsidian11.Setting(this.containerEl).setName("\u6A21\u7CCA\u97F3").addToggle((cb) => cb.setValue(this.plugin.settings.global.fuzzyPinyin).onChange(async (value) => {
      if (this.plugin.settings.global.fuzzyPinyin == value)
        return;
      if (this.plugin.settings.global.doublePinyin != "\u5168\u62FC" && value) {
        new import_obsidian11.Notice("\u53CC\u62FC\u65B9\u6848\u4E0D\u652F\u6301\u6A21\u7CCA\u97F3\uFF0C\u65E0\u6CD5\u5F00\u542F\u6A21\u7CCA\u97F3\u641C\u7D22");
        cb.setValue(false);
        return;
      }
      this.plugin.settings.global.fuzzyPinyin = value;
      await this.plugin.saveSettings();
      if (this.plugin.settings.global.fuzzyPinyinSetting.length != 0)
        this.plugin.indexManager.load(true);
      this.display();
    }));
    if (this.plugin.settings.global.fuzzyPinyin)
      new import_obsidian11.Setting(this.containerEl).setName("\u6A21\u7CCA\u97F3\u8BBE\u7F6E").addButton((cb) => cb.setIcon("settings").onClick(() => {
        new FuzzyPinyinSettingModal(this.plugin).open();
      }));
    new import_obsidian11.Setting(this.containerEl).setName("\u81EA\u52A8\u5927\u5C0F\u5199\u654F\u611F").addToggle((cb) => cb.setValue(this.plugin.settings.global.autoCaseSensitivity).onChange(async (value) => {
      this.plugin.settings.global.autoCaseSensitivity = value;
      await this.plugin.saveSettings();
    }));
  }
  addFileSetting() {
    this.containerEl.createEl("h2", { text: "\u6587\u4EF6\u641C\u7D22" });
    new import_obsidian11.Setting(this.containerEl).setName("\u663E\u793A\u9644\u4EF6").setDesc("\u663E\u793A\u5982\u56FE\u7247\u3001\u89C6\u9891\u3001PDF\u7B49\u9644\u4EF6\u6587\u4EF6\u3002").addToggle((cb) => cb.setValue(this.plugin.settings.file.showAttachments).onChange(async (value) => {
      this.plugin.settings.file.showAttachments = value;
      await this.plugin.saveSettings();
    }));
    new import_obsidian11.Setting(this.containerEl).setName("\u663E\u793A\u6240\u6709\u7C7B\u578B\u6587\u4EF6").addToggle((cb) => cb.setValue(this.plugin.settings.file.showAllFileTypes).onChange(async (value) => {
      this.plugin.settings.file.showAllFileTypes = value;
      await this.plugin.saveSettings();
    }));
    new import_obsidian11.Setting(this.containerEl).setName("\u663E\u793A\u672A\u5B8C\u6210\u94FE\u63A5").addToggle((cb) => cb.setValue(this.plugin.settings.file.showUnresolvedLink).onChange(async (value) => {
      this.plugin.settings.file.showUnresolvedLink = value;
      await this.plugin.saveSettings();
    }));
    new import_obsidian11.Setting(this.containerEl).setName("\u4F7F\u7528\u8DEF\u5F84\u641C\u7D22").setDesc("\u5F53\u641C\u7D22\u7ED3\u679C\u5C11\u4E8E10\u4E2A\u65F6\u641C\u7D22\u8DEF\u5F84").addToggle((cb) => cb.setValue(this.plugin.settings.file.usePathToSearch).onChange(async (value) => {
      this.plugin.settings.file.usePathToSearch = value;
      await this.plugin.saveSettings();
    }));
    new import_obsidian11.Setting(this.containerEl).setName("\u663E\u793A Tag").addToggle((cb) => cb.setValue(this.plugin.settings.file.showTags).onChange(async (value) => {
      this.plugin.settings.file.showTags = value;
      await this.plugin.saveSettings();
    }));
    new import_obsidian11.Setting(this.containerEl).setName("\u4F7F\u7528\u53CC\u94FE\u5EFA\u8BAE").setDesc("\u8F93\u5165[[\u7684\u65F6\u5019\u6587\u4EF6\u8FDE\u63A5\u80FD\u652F\u6301\u4E2D\u6587\u62FC\u97F3\u641C\u7D22\uFF08\u5B9E\u9A8C\u6027\u529F\u80FD\uFF09").addToggle((cb) => cb.setValue(this.plugin.settings.file.useFileEditorSuggest).onChange(async (value) => {
      this.plugin.settings.file.useFileEditorSuggest = value;
      if (value) {
        this.app.workspace.editorSuggest.suggests.unshift(this.plugin.fileEditorSuggest);
      } else {
        this.app.workspace.editorSuggest.removeSuggest(this.plugin.fileEditorSuggest);
      }
      await this.plugin.saveSettings();
    }));
    new import_obsidian11.Setting(this.containerEl).setName("\u9644\u5E26\u6807\u7B7E\u641C\u7D22").addToggle((cb) => cb.setValue(this.plugin.settings.file.searchWithTag).onChange(async (value) => {
      this.plugin.settings.file.searchWithTag = value;
      if (value)
        this.plugin.fileModal.tagInput.show();
      else
        this.plugin.fileModal.tagInput.hide();
      await this.plugin.saveSettings();
    }));
    new import_obsidian11.Setting(this.containerEl).setName("\u5FEB\u901F\u9009\u62E9\u5386\u53F2\u6587\u4EF6").setDesc("\u8F93\u5165\u680F\u4E3A\u7A7A\u65F6\uFF0C\u7A7A\u683C\u52A0 asdf... \u6216 1234... \u5FEB\u901F\u9009\u62E9\u5386\u53F2\u6587\u4EF6").addToggle((cb) => {
      cb.setValue(this.plugin.settings.file.quicklySelectHistoryFiles).onChange(async (value) => {
        this.plugin.settings.file.quicklySelectHistoryFiles = value;
        await this.plugin.saveSettings();
        this.display();
      });
    });
    if (this.plugin.settings.file.quicklySelectHistoryFiles)
      new import_obsidian11.Setting(this.containerEl).setName("\u5FEB\u901F\u9009\u62E9\u5386\u53F2\u6587\u4EF6\u63D0\u793A").addDropdown((cb) => {
        cb.addOptions({
          asdfjklgh: "asdfjklgh",
          "1234567890": "1234567890"
        }).setValue(this.plugin.settings.file.quicklySelectHistoryFilesHint).onChange(async (value) => {
          this.plugin.settings.file.quicklySelectHistoryFilesHint = value;
          await this.plugin.saveSettings();
        });
      });
    new import_obsidian11.Setting(this.containerEl).setName("\u9644\u4EF6\u540E\u7F00").setDesc("\u53EA\u663E\u793A\u8FD9\u4E9B\u540E\u7F00\u7684\u9644\u4EF6").addTextArea((cb) => {
      cb.inputEl.addClass("fuzzy-chinese-attachment-extensions");
      cb.setValue(this.plugin.settings.file.attachmentExtensions.join("\n")).onChange(async (value) => {
        this.plugin.settings.file.attachmentExtensions = value.trim().split("\n").map((x) => x.trim());
        await this.plugin.saveSettings();
      });
    });
    this.containerEl.createEl("h3", { text: "\u5FEB\u6377\u952E\u529F\u80FD" });
    const keys = ["keyEnter", "keyCtrlEnter", "keyAltEnter", "keyCtrlAltEnter"];
    const g = Object.keys(openFileKeyMap);
    keys.forEach((key) => {
      new import_obsidian11.Setting(this.containerEl).setName(`${key.slice(3).replace(/([A-Z])/g, " $1").trim()} \u529F\u80FD`).addDropdown((cb) => cb.addOptions(g.reduce((a, c) => {
        a[c] = c;
        return a;
      }, {})).setValue(this.plugin.settings.file[key]).onChange(async (value) => {
        this.plugin.settings.file[key] = value;
        await this.plugin.saveSettings();
      }));
    });
    new import_obsidian11.Setting(this.containerEl).setName("\u91CD\u7F6E\u5FEB\u6377\u952E\u529F\u80FD").addButton((cb) => cb.setIcon("refresh-ccw").onClick(async () => {
      keys.forEach((key, i) => {
        this.plugin.settings.file[key] = g[i];
      });
      await this.plugin.saveSettings();
      this.display();
    }));
  }
  addHeadingSetting() {
    this.containerEl.createEl("h2", { text: "\u6807\u9898\u641C\u7D22" });
    new import_obsidian11.Setting(this.containerEl).setName("\u663E\u793A\u7B2C\u4E00\u7EA7\u6807\u9898").addToggle((cb) => cb.setValue(this.plugin.settings.heading.showFirstLevelHeading).onChange(async (value) => {
      this.plugin.settings.heading.showFirstLevelHeading = value;
      await this.plugin.saveSettings();
    }));
    new import_obsidian11.Setting(this.containerEl).setName("\u641C\u7D22\u7ED3\u679C\u7F29\u8FDB").addToggle((cb) => cb.setValue(this.plugin.settings.heading.headingIndent).onChange(async (value) => {
      this.plugin.settings.heading.headingIndent = value;
      await this.plugin.saveSettings();
    }));
  }
  addCommandSettings() {
    this.containerEl.createEl("h2", { text: "\u547D\u4EE4" });
    this.addPinnedCommands();
    new import_obsidian11.Setting(this.containerEl).setName("\u65B0\u7684\u7F6E\u9876\u547D\u4EE4").setDesc("\u5728\u4F60\u672A\u8FDB\u884C\u68C0\u7D22\u65F6\uFF0C\u7F6E\u9876\u547D\u4EE4\u5C06\u4F18\u5148\u51FA\u73B0\u5728\u547D\u4EE4\u9762\u677F\u7684\u9876\u7AEF\u3002").addSearch((cb) => {
      let commandSuggest = new PinyinSuggest(cb.inputEl, this.plugin);
      commandSuggest.getItemFunction = (query) => this.plugin.commandModal.getSuggestions(query);
      cb.setPlaceholder("\u8F93\u5165\u547D\u4EE4\u2026\u2026").onChange(async (value) => {
        let commands = this.app.commands.listCommands().map((p) => p.name);
        if (!commands.includes(value))
          return;
        this.plugin.settings.command.pinnedCommands.push(value);
        await this.plugin.saveSettings();
        this.display();
      });
    });
  }
  addPinnedCommands() {
    const { pinnedCommands } = this.plugin.settings.command;
    if (pinnedCommands.length === 0) {
      new import_obsidian11.Setting(this.containerEl).setName("\u6CA1\u6709\u7F6E\u9876\u547D\u4EE4");
      return;
    }
    pinnedCommands.forEach((command, index) => {
      new import_obsidian11.Setting(this.containerEl).setName(command).addExtraButton((cb) => cb.setIcon("x").setTooltip("\u5220\u9664").onClick(() => {
        this.plugin.settings.command.pinnedCommands = this.plugin.settings.command.pinnedCommands.filter((x) => x !== command);
        this.plugin.saveSettings();
        this.display();
      })).addExtraButton((cb) => {
        cb.setIcon("up-chevron-glyph").setTooltip("Move up").onClick(() => {
          arraymove(this.plugin.settings.command.pinnedCommands, index, index - 1);
          this.plugin.saveSettings();
          this.display();
        });
      }).addExtraButton((cb) => {
        cb.setIcon("down-chevron-glyph").setTooltip("Move down").onClick(() => {
          arraymove(this.plugin.settings.command.pinnedCommands, index, index + 1);
          this.plugin.saveSettings();
          this.display();
        });
      });
    });
  }
  addOtherSetting() {
    this.containerEl.createEl("h2", { text: "\u5176\u4ED6" });
    new import_obsidian11.Setting(this.containerEl).setName("\u4F7F\u7528\u6807\u7B7E\u5EFA\u8BAE").setDesc("\u5B9E\u9A8C\u6027\u529F\u80FD").addToggle((cb) => cb.setValue(this.plugin.settings.other.useTagEditorSuggest).onChange(async (value) => {
      this.plugin.settings.other.useTagEditorSuggest = value;
      if (value) {
        this.app.workspace.editorSuggest.suggests.unshift(this.plugin.tagEditorSuggest);
      } else {
        this.app.workspace.editorSuggest.removeSuggest(this.plugin.tagEditorSuggest);
      }
      await this.plugin.saveSettings();
    }));
    new import_obsidian11.Setting(this.containerEl).setName("dev \u6A21\u5F0F").setDesc("\u5C06\u7D22\u5F15\u5B58\u50A8\u5230 global \u4EE5\u4FBF\u91CD\u542F\u65F6\u4E0D\u91CD\u5EFA\u7D22\u5F15").addToggle((cb) => cb.setValue(this.plugin.settings.other.devMode).onChange(async (value) => {
      this.plugin.settings.other.devMode = value;
      await this.plugin.saveSettings();
    }));
  }
};
var DEFAULT_SETTINGS = {
  global: {
    traditionalChineseSupport: false,
    doublePinyin: "\u5168\u62FC",
    fuzzyPinyin: false,
    fuzzyPinyinSetting: [],
    closeWithBackspace: false,
    autoCaseSensitivity: true
  },
  file: {
    showAttachments: false,
    showAllFileTypes: false,
    showUnresolvedLink: false,
    quicklySelectHistoryFiles: false,
    quicklySelectHistoryFilesHint: "asdfjklgh",
    attachmentExtensions: [
      "bmp",
      "png",
      "jpg",
      "jpeg",
      "gif",
      "svg",
      "webp",
      "mp3",
      "wav",
      "m4a",
      "3gp",
      "flac",
      "ogg",
      "oga",
      "opus",
      "mp4",
      "webm",
      "ogv",
      "mov",
      "mkv",
      "pdf"
    ],
    usePathToSearch: false,
    useFileEditorSuggest: true,
    showTags: false,
    searchWithTag: true,
    keyEnter: "\u6253\u5F00",
    keyCtrlEnter: "\u6253\u5F00\u5230\u65B0\u6807\u7B7E\u9875",
    keyAltEnter: "\u6253\u5F00\u5230\u5176\u4ED6\u9762\u677F",
    keyCtrlAltEnter: "\u6253\u5F00\u5230\u65B0\u9762\u677F"
  },
  heading: {
    showFirstLevelHeading: true,
    headingIndent: true
  },
  command: {
    pinnedCommands: []
  },
  other: {
    useTagEditorSuggest: true,
    devMode: false
  }
};
var FuzzyPinyinSettingModal = class extends import_obsidian11.Modal {
  constructor(plugin) {
    super(plugin.app);
    this.plugin = plugin;
    this.tempSetting = [];
    this.tempSetting = [...this.plugin.settings.global.fuzzyPinyinSetting];
  }
  onOpen() {
    this.display();
  }
  display() {
    const { contentEl } = this;
    let { fuzzyPinyinSetting } = this.plugin.settings.global;
    contentEl.empty();
    contentEl.createEl("h1", { text: "\u6A21\u7CCA\u97F3\u8BBE\u7F6E" });
    Object.entries(FuzzyPinyinDict).forEach(([key, value]) => {
      new import_obsidian11.Setting(contentEl).setName(`${value} => ${key}`).addToggle((cb) => cb.setValue(fuzzyPinyinSetting.includes(key)).onChange(async (value2) => {
        if (value2) {
          if (!fuzzyPinyinSetting.includes(key))
            fuzzyPinyinSetting.push(key);
        } else
          fuzzyPinyinSetting = fuzzyPinyinSetting.filter((x) => x != key);
        this.plugin.settings.global.fuzzyPinyinSetting = fuzzyPinyinSetting;
        await this.plugin.saveSettings();
      }));
    });
  }
  onClose() {
    if ((0, import_lodash2.xor)(this.tempSetting, this.plugin.settings.global.fuzzyPinyinSetting).length != 0)
      this.plugin.indexManager.load(true);
  }
};

// src/viewEventHijacking.ts
function hijackingCanvasView(plugin) {
  let app2 = plugin.app;
  plugin.registerEvent(app2.workspace.on("active-leaf-change", (leaf) => {
    if (!isCanvasView(leaf.view))
      return;
    let canvas = leaf.view.canvas;
    let openBtl = canvas.cardMenuEl.children[1];
    const newBtnElement = openBtl.cloneNode(true);
    openBtl.replaceWith(newBtnElement);
    plugin.registerDomEvent(newBtnElement, "click", async (e) => {
      let item = await plugin.fileModal.openAndGetValue();
      canvas.createFileNode({
        pos: canvas.posCenter(),
        file: item.file
      });
    });
    plugin.registerDomEvent(newBtnElement, "pointerdown", async (e) => {
      let size = canvas.config.defaultFileNodeDimensions;
      canvas.dragTempNode(e, size, async function(e2) {
        let item = await plugin.fileModal.openAndGetValue();
        canvas.createFileNode({
          pos: e2,
          file: item.file,
          size
        });
      });
    });
  }));
}
function hijackingEmptyView(plugin) {
  let app2 = plugin.app;
  plugin.registerEvent(app2.workspace.on("active-leaf-change", (leaf) => {
    if (!isEmptyView(leaf.view))
      return;
    let actionListEl = leaf.view.actionListEl;
    let hotkey = app2.hotkeyManager.printHotkeyForCommand("fuzzy-chinese-pinyin:open-search");
    let openBtl1 = actionListEl.children[1];
    let openBtl2 = actionListEl.children[2];
    for (let openBtl of [openBtl1, openBtl2]) {
      let newBtnElement = openBtl.cloneNode(true);
      let m = /^([^(]*)( \((.*)\))?$/.exec(openBtl.innerText);
      if (m)
        newBtnElement.innerText = m[1] + (hotkey != "" ? ` (${hotkey})` : "");
      openBtl.replaceWith(newBtnElement);
      plugin.registerDomEvent(newBtnElement, "click", async (e) => {
        plugin.fileModal.open();
      });
    }
  }));
}
function isCanvasView(view) {
  return view.getViewType() === "canvas";
}
function isEmptyView(view) {
  return view.getViewType() === "empty";
}

// src/main.ts
var ThePlugin = class extends import_obsidian12.Plugin {
  async onload() {
    await this.loadSettings();
    this.loadPinyinDict();
    this.fileModal = new FileModal(this.app, this);
    this.folderModal = new FolderModal(this.app, this);
    this.commandModal = new CommandModal(this.app, this);
    this.headingModal = new HeadingModal(this.app, this);
    this.templatesModal = new TemplatesModal(this.app, this);
    this.fileEditorSuggest = new FileEditorSuggest(this.app, this);
    this.tagEditorSuggest = new TagEditorSuggest(this.app, this);
    this.indexManager = new IndexManager(this, [
      this.folderModal,
      this.fileModal,
      this.commandModal,
      this.tagEditorSuggest
    ]);
    this.editorSuggests = [this.fileEditorSuggest, this.tagEditorSuggest];
    if (this.settings.file.useFileEditorSuggest)
      this.registerEditorSuggest(this.fileEditorSuggest);
    if (this.settings.other.useTagEditorSuggest)
      this.registerEditorSuggest(this.tagEditorSuggest);
    this.registerFileMenu();
    this.registerHijackingEvents();
    runOnLayoutReady(() => {
      if (this.settings.other.devMode) {
        this.indexManager.devLoad();
      } else {
        this.indexManager.load();
      }
      this.registerFileExplorer();
      this.addCommands();
      let leaf = this.app.workspace.getMostRecentLeaf();
      if (leaf.view.getViewType() === "empty")
        leaf.detach();
    });
    this.addRibbonIcon("search", "FuzzySearch", () => {
      let leaf = this.app.workspace.getMostRecentLeaf();
      if (leaf) {
        this.fileModal.open();
        return true;
      }
      return false;
    });
    this.addSettingTab(new SettingTab(this.app, this));
    this.api = {
      suggester: this.suggester.bind(this),
      search: (query, items) => pinyinSearch(query, items, this),
      strings2Items: stringArray2Items
    };
  }
  registerHijackingEvents() {
    hijackingCanvasView(this);
    hijackingEmptyView(this);
  }
  registerEditorSuggest(editorSuggest) {
    this.app.workspace.editorSuggest.suggests.unshift(editorSuggest);
    this.register(() => {
      return this.app.workspace.editorSuggest.removeSuggest(editorSuggest);
    });
  }
  addCommands() {
    this.addCommand({
      id: "open-search",
      name: "\u641C\u7D22\u6587\u4EF6",
      callback: () => {
        this.fileModal.open();
      }
    });
    this.addCommand({
      id: "move-file",
      name: "\u79FB\u52A8\u6587\u4EF6",
      checkCallback: (checking) => {
        let files = this.fileExplorerHotkey.getFiles();
        let file = this.app.workspace.getActiveFile();
        if (checking)
          return Boolean(file) || files.length > 0;
        if (files.length > 0)
          this.folderModal.openWithFiles(files);
        else if (file)
          this.folderModal.open();
      }
    });
    this.addCommand({
      id: "execute-command",
      name: "\u6267\u884C\u547D\u4EE4",
      callback: () => {
        this.commandModal.open();
      }
    });
    this.addCommand({
      id: "search-heading",
      name: "\u641C\u7D22\u6807\u9898",
      checkCallback: (checking) => {
        const file = this.app.workspace.getActiveFile();
        if (checking)
          return Boolean(file);
        this.headingModal.setFile(file);
        this.headingModal.open();
      }
    });
    this.addCommand({
      id: "insert-templates",
      name: "\u63D2\u5165\u6A21\u677F",
      callback: () => {
        this.templatesModal.open();
      }
    });
  }
  onunload() {
    if (this.settings.other.devMode) {
      this.indexManager.devUnload();
    }
  }
  async loadSettings() {
    this.settings = (0, import_lodash3.merge)({}, DEFAULT_SETTINGS, await this.loadData());
  }
  async saveSettings() {
    await this.saveData(this.settings);
  }
  loadPinyinDict() {
    let pinyinDict = this.settings.global.traditionalChineseSupport ? traditional_dict_default : simplified_dict_default;
    let PinyinKeys_ = Object.keys(pinyinDict);
    let PinyinValues = Object.values(pinyinDict);
    let PinyinKeys = this.settings.global.doublePinyin == "\u5168\u62FC" ? PinyinKeys_ : PinyinKeys_.map((p) => fullPinyin2doublePinyin(p, double_pinyin_default[this.settings.global.doublePinyin]));
    this.pinyinDict = { keys: PinyinKeys, values: PinyinValues, originalKeys: PinyinKeys_ };
  }
  async suggester(text_items, items) {
    let modal = new SuggestModal2(this.app, this, text_items, items);
    let item = await modal.openAndGetValue();
    return item.name;
  }
  registerFileMenu() {
    this.registerEvent(this.app.workspace.on("file-menu", (menu, file) => {
      let title = file instanceof import_obsidian12.TFile ? "\u6587\u4EF6" : "\u6587\u4EF6\u5939";
      menu.addItem((item) => {
        item.setIcon("folder-tree").setTitle("FuzzyPinyin: \u79FB\u52A8" + title).onClick(() => {
          this.folderModal.openWithFiles(file);
        });
      });
    }));
    this.registerEvent(this.app.workspace.on("files-menu", (menu, files) => {
      menu.addItem((item) => {
        item.setIcon("folder-tree").setTitle(`FuzzyPinyin: \u79FB\u52A8 ${files.length} \u4E2A\u6587\u4EF6`).onClick(() => {
          this.folderModal.openWithFiles(files);
        });
      });
    }));
  }
  registerFileExplorer() {
    this.fileExplorerHotkey = new FileExplorerHotkey(this.app, this);
  }
};
var FileExplorerHotkey = class {
  constructor(app2, plugin) {
    this.plugin = plugin;
    this.app = app2;
    this.getView();
  }
  getFiles() {
    if (!this.viewIsWorkable()) {
      this.getView();
      if (!this.viewIsWorkable())
        return [];
    }
    return Array.from(this.view.tree.selectedDoms).map((p) => p.file);
  }
  getView() {
    let leaf = this.app.workspace.getLeavesOfType("file-explorer");
    if (leaf.length != 0) {
      this.leaf = leaf[0];
      this.view = this.leaf.view;
    }
    return this.view;
  }
  viewIsWorkable() {
    var _a, _b;
    return Boolean((_b = (_a = this.view) == null ? void 0 : _a.tree) == null ? void 0 : _b.selectedDoms);
  }
};
var IndexManager = class extends Array {
  constructor(plugin, component) {
    super();
    component.forEach((p) => this.push(p.index));
    this.plugin = plugin;
  }
  load(showNotice = false) {
    if (showNotice) {
      let notice = new import_obsidian12.Notice("\u6B63\u5728\u5237\u65B0\u7D22\u5F15\u4E2D");
      setTimeout(() => {
        this.forEach((index) => this.load_(index));
        notice.hide();
        new import_obsidian12.Notice("\u7D22\u5F15\u5237\u65B0\u5B8C\u6210", 4e3);
      }, 100);
    } else {
      this.forEach((index) => this.load_(index));
    }
  }
  load_(index) {
    let startTime = Date.now();
    index.initIndex();
    console.log(`Fuzzy Chinese Pinyin: ${index.id} indexing completed, totaling ${index.items.length} items, taking ${(Date.now() - startTime) / 1e3}s`);
  }
  devLoad() {
    this.forEach((index) => {
      if (globalThis.FuzzyChineseIndex && globalThis.FuzzyChineseIndex[index.id]) {
        index.items = globalThis.FuzzyChineseIndex[index.id];
        console.log(`Fuzzy Chinese Pinyin: Use old ${index.id} index`);
      } else {
        this.load_(index);
      }
    });
    globalThis.refreshFuzzyChineseIndex = () => {
      globalThis.FuzzyChineseIndex = {};
      this.load();
      this.devUnload();
    };
  }
  devUnload() {
    globalThis.FuzzyChineseIndex = {};
    this.forEach((index) => {
      globalThis.FuzzyChineseIndex[index.id] = index.items;
    });
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {});
/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/* nosourcemap */